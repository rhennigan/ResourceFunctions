(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[
       {
        RowBox[
         {
          RowBox[{"ClearAll", "[", " ", "\"Global`*\"", " ", "]"}],
          ";"
         }
        ],
        "\n",
        RowBox[
         {
          RowBox[
           {
            "Get",
            " ",
            "@",
            " ",
            RowBox[
             {
              "FileNameJoin",
              " ",
              "@",
              " ",
              RowBox[
               {
                "{",
                " ",
                RowBox[
                 {
                  RowBox[{"NotebookDirectory", "[", " ", "]"}],
                  ",",
                  " ",
                  "\"Definition.wl\""
                 }
                ],
                " ",
                "}"
               }
              ]
             }
            ]
           }
          ],
          ";"
         }
        ],
        "\n",
        RowBox[
         {
          "TestReport",
          " ",
          "@",
          " ",
          RowBox[
           {
            "FileNameJoin",
            " ",
            "@",
            " ",
            RowBox[
             {
              "{",
              " ",
              RowBox[
               {
                RowBox[{"NotebookDirectory", "[", " ", "]"}],
                ",",
                " ",
                "\"Tests.wlt\""
               }
              ],
              " ",
              "}"
             }
            ]
           }
          ]
         }
        ]
       }
      ],
      "Code",
      "Excluded",
      CellLabel -> "In[3]:="
     ],
     Cell[
      BoxData[
       InterpretationBox[
        RowBox[
         {
          TagBox["TestReportObject", "SummaryHead"],
          "[",
          DynamicModuleBox[
           {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
           TemplateBox[
            {
             PaneSelectorBox[
              {
               False ->
                GridBox[
                 {
                  {
                   PaneBox[
                    ButtonBox[
                     DynamicBox[
                      FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                     ],
                     ButtonFunction :> (Typeset`open$$ = True),
                     Appearance -> None,
                     BaseStyle -> { },
                     Evaluator -> Automatic,
                     Method -> "Preemptive"
                    ],
                    Alignment -> {Center, Center},
                    ImageSize ->
                     Dynamic[
                      {
                       Automatic,
                       Times[
                        3.5,
                        Times[
                         CurrentValue["FontCapHeight"],
                         AbsoluteCurrentValue[Magnification]^(-1)
                        ]
                       ]
                      }
                     ]
                   ],
                   GraphicsBox[
                    {
                     InsetBox[
                      BoxData[
                       FormBox[
                        PaneBox[
                         DynamicBox[
                          FEPrivate`FrontEndResource[
                           "MUnitExpressions",
                           "SuccessIcon"
                          ]
                         ],
                         Alignment -> Center,
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             3.5,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ]
                        ],
                        TraditionalForm
                       ]
                      ]
                     ]
                    },
                    PlotRange -> {{0, 1}, {0, 1}},
                    Background -> GrayLevel[0.93],
                    Axes -> False,
                    AspectRatio -> 1,
                    ImageSize ->
                     Dynamic[
                      {
                       Automatic,
                       Times[
                        3.5,
                        Times[
                         CurrentValue["FontCapHeight"],
                         AbsoluteCurrentValue[Magnification]^(-1)
                        ]
                       ]
                      }
                     ],
                    Frame -> True,
                    FrameTicks -> None,
                    FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.55]]
                   ],
                   GridBox[
                    {
                     {
                      RowBox[
                       {
                        TagBox["\"Title: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox["\"Test Report: Tests.wlt\"", "SummaryItem"]
                       }
                      ],
                      "\[SpanFromLeft]"
                     },
                     {
                      RowBox[
                       {
                        TagBox["\"Success rate: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox[
                         TagBox[
                          InterpretationBox[
                           StyleBox["\"100%\"", ShowStringCharacters -> False],
                           1.0,
                           AutoDelete -> True
                          ],
                          PercentForm
                         ],
                         "SummaryItem"
                        ]
                       }
                      ],
                      RowBox[
                       {
                        TagBox["\"Tests run: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox["47", "SummaryItem"]
                       }
                      ]
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                    BaseStyle -> {
                     ShowStringCharacters -> False,
                     NumberMarks -> False,
                     PrintPrecision -> 3,
                     ShowSyntaxStyles -> False
                    }
                   ]
                  }
                 },
                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                 AutoDelete -> False,
                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                 BaselinePosition -> {1, 1}
                ],
               True ->
                GridBox[
                 {
                  {
                   PaneBox[
                    ButtonBox[
                     DynamicBox[
                      FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                     ],
                     ButtonFunction :> (Typeset`open$$ = False),
                     Appearance -> None,
                     BaseStyle -> { },
                     Evaluator -> Automatic,
                     Method -> "Preemptive"
                    ],
                    Alignment -> {Center, Center},
                    ImageSize ->
                     Dynamic[
                      {
                       Automatic,
                       Times[
                        3.5,
                        Times[
                         CurrentValue["FontCapHeight"],
                         AbsoluteCurrentValue[Magnification]^(-1)
                        ]
                       ]
                      }
                     ]
                   ],
                   GraphicsBox[
                    {
                     InsetBox[
                      BoxData[
                       FormBox[
                        PaneBox[
                         DynamicBox[
                          FEPrivate`FrontEndResource[
                           "MUnitExpressions",
                           "SuccessIcon"
                          ]
                         ],
                         Alignment -> Center,
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             3.5,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ]
                        ],
                        TraditionalForm
                       ]
                      ]
                     ]
                    },
                    PlotRange -> {{0, 1}, {0, 1}},
                    Background -> GrayLevel[0.93],
                    Axes -> False,
                    AspectRatio -> 1,
                    ImageSize ->
                     Dynamic[
                      {
                       Automatic,
                       Times[
                        3.5,
                        Times[
                         CurrentValue["FontCapHeight"],
                         AbsoluteCurrentValue[Magnification]^(-1)
                        ]
                       ]
                      }
                     ],
                    Frame -> True,
                    FrameTicks -> None,
                    FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.55]]
                   ],
                   GridBox[
                    {
                     {
                      RowBox[
                       {
                        TagBox["\"Title: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox["\"Test Report: Tests.wlt\"", "SummaryItem"]
                       }
                      ],
                      "\[SpanFromLeft]"
                     },
                     {
                      RowBox[
                       {
                        TagBox["\"Success rate: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox[
                         TagBox[
                          InterpretationBox[
                           StyleBox["\"100%\"", ShowStringCharacters -> False],
                           1.0,
                           AutoDelete -> True
                          ],
                          PercentForm
                         ],
                         "SummaryItem"
                        ]
                       }
                      ],
                      RowBox[
                       {
                        TagBox["\"Tests run: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox["47", "SummaryItem"]
                       }
                      ]
                     },
                     {
                      RowBox[
                       {
                        TagBox["\"Succeeded: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox["47", "SummaryItem"]
                       }
                      ],
                      "\[SpanFromLeft]"
                     },
                     {
                      RowBox[
                       {
                        TagBox["\"Failed: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox["0", "SummaryItem"]
                       }
                      ],
                      "\[SpanFromLeft]"
                     },
                     {
                      RowBox[
                       {
                        TagBox[
                         "\"Failed with wrong results: \"",
                         "SummaryItemAnnotation"
                        ],
                        "\[InvisibleSpace]",
                        TagBox["0", "SummaryItem"]
                       }
                      ],
                      "\[SpanFromLeft]"
                     },
                     {
                      RowBox[
                       {
                        TagBox[
                         "\"Failed with messages: \"",
                         "SummaryItemAnnotation"
                        ],
                        "\[InvisibleSpace]",
                        TagBox["0", "SummaryItem"]
                       }
                      ],
                      "\[SpanFromLeft]"
                     },
                     {
                      RowBox[
                       {
                        TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox["0", "SummaryItem"]
                       }
                      ],
                      "\[SpanFromLeft]"
                     },
                     {
                      RowBox[
                       {
                        TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"],
                        "\[InvisibleSpace]",
                        TagBox[
                         TemplateBox[
                          {"0.0069998`", "\"s\"", "seconds", "\"Seconds\""},
                          "Quantity",
                          SyntaxForm -> Mod
                         ],
                         "SummaryItem"
                        ]
                       }
                      ],
                      "\[SpanFromLeft]"
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                    BaseStyle -> {
                     ShowStringCharacters -> False,
                     NumberMarks -> False,
                     PrintPrecision -> 3,
                     ShowSyntaxStyles -> False
                    }
                   ]
                  }
                 },
                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                 AutoDelete -> False,
                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                 BaselinePosition -> {1, 1}
                ]
              },
              Dynamic[Typeset`open$$],
              ImageSize -> Automatic
             ]
            },
            "SummaryPanel"
           ],
           DynamicModuleValues :> { }
          ],
          "]"
         }
        ],
        TestReportObject[
         <|
          "Title" -> "Test Report: Tests.wlt",
          "Aborted" -> False,
          "TestResults" -> <|
           1111008062351168179 ->
            TestResultObject[
             <|
              "TestKey" -> 1111008062351168179,
              "TestID" -> None,
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                SetOptions[
                 ResourceFunction["MessageFailure"],
                 "TestMode" -> True
                ]
               ],
              "ExpectedOutput" ->
               HoldForm[KeyValuePattern["TestMode" -> True]],
              "ActualOutput" ->
               HoldForm[
                {
                 "MessageFunction" -> Automatic,
                 "Verbose" -> False,
                 "Stack" -> False,
                 "TestMode" -> True
                }
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.001,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 1976
             |>
            ],
           5495335783022680234 ->
            TestResultObject[
             <|
              "TestKey" -> 5495335783022680234,
              "TestID" -> "BasicExamples-1",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[{1, 2, 4, 7, 6, 2}, EvenQ]],
              "ExpectedOutput" -> HoldForm[{{2, 4, 6, 2}, {1, 7}}],
              "ActualOutput" -> HoldForm[{{2, 4, 6, 2}, {1, 7}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2952
             |>
            ],
           325072708626445474 ->
            TestResultObject[
             <|
              "TestKey" -> 325072708626445474,
              "TestID" -> "BasicExamples-2",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[{1, 2, 4, 7, 6, 2}, #1 > 2 & ]],
              "ExpectedOutput" -> HoldForm[{{4, 7, 6}, {1, 2, 2}}],
              "ActualOutput" -> HoldForm[{{4, 7, 6}, {1, 2, 2}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3104
             |>
            ],
           1445348469378154029 ->
            TestResultObject[
             <|
              "TestKey" -> 1445348469378154029,
              "TestID" -> "BasicExamples-3",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[{1, 2, 4, 7, 6, 2}, #1 > 2 & , 1]],
              "ExpectedOutput" -> HoldForm[{{4}, {7, 6, 1, 2, 2}}],
              "ActualOutput" -> HoldForm[{{4}, {7, 6, 1, 2, 2}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 1688
             |>
            ],
           6285064048018739319 ->
            TestResultObject[
             <|
              "TestKey" -> 6285064048018739319,
              "TestID" -> "BasicExamples-4",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[EvenQ][{1, 2, 4, 7, 6, 2}]],
              "ExpectedOutput" -> HoldForm[{{2, 4, 6, 2}, {1, 7}}],
              "ActualOutput" -> HoldForm[{{2, 4, 6, 2}, {1, 7}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2952
             |>
            ],
           7147469073901268242 ->
            TestResultObject[
             <|
              "TestKey" -> 7147469073901268242,
              "TestID" -> "BasicExamples-5",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                SelectDiscard[
                 Association[a -> 1, b -> 2, c -> 3, d -> 4],
                 #1 > 2 &
                ]
               ],
              "ExpectedOutput" ->
               HoldForm[
                {Association[c -> 3, d -> 4], Association[a -> 1, b -> 2]}
               ],
              "ActualOutput" ->
               HoldForm[
                {Association[c -> 3, d -> 4], Association[a -> 1, b -> 2]}
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3592
             |>
            ],
           4422413913967238450 ->
            TestResultObject[
             <|
              "TestKey" -> 4422413913967238450,
              "TestID" -> "Scope-1",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[{1, 2, 4, 7, x}, #1 > 2 & ]],
              "ExpectedOutput" -> HoldForm[{{4, 7}, {1, 2, x}}],
              "ActualOutput" -> HoldForm[{{4, 7}, {1, 2, x}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2976
             |>
            ],
           8047052841024713456 ->
            TestResultObject[
             <|
              "TestKey" -> 8047052841024713456,
              "TestID" -> "Scope-2",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                SelectDiscard[
                 {{1, y}, {2, x}, {3, x}, {4, z}, {5, x}},
                 MemberQ[#1, x] &
                ]
               ],
              "ExpectedOutput" ->
               HoldForm[{{{2, x}, {3, x}, {5, x}}, {{1, y}, {4, z}}}],
              "ActualOutput" ->
               HoldForm[{{{2, x}, {3, x}, {5, x}}, {{1, y}, {4, z}}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3240
             |>
            ],
           1336354087558510753 ->
            TestResultObject[
             <|
              "TestKey" -> 1336354087558510753,
              "TestID" -> "Scope-3",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                SelectDiscard[
                 {{1, y}, {2, x}, {3, x}, {4, z}, {5, x}},
                 MemberQ[#1, x] &,
                 2
                ]
               ],
              "ExpectedOutput" ->
               HoldForm[{{{2, x}, {3, x}}, {{5, x}, {1, y}, {4, z}}}],
              "ActualOutput" ->
               HoldForm[{{{2, x}, {3, x}}, {{5, x}, {1, y}, {4, z}}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 1960
             |>
            ],
           5947685637536605097 ->
            TestResultObject[
             <|
              "TestKey" -> 5947685637536605097,
              "TestID" -> "Scope-4",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                SelectDiscard[
                 {{1, y}, {2, x}, {3, x}, {4, z}, {5, x}},
                 MemberQ[#1, z] &,
                 2
                ]
               ],
              "ExpectedOutput" ->
               HoldForm[{{{4, z}}, {{1, y}, {2, x}, {3, x}, {5, x}}}],
              "ActualOutput" ->
               HoldForm[{{{4, z}}, {{1, y}, {2, x}, {3, x}, {5, x}}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2168
             |>
            ],
           2287841132882643338 ->
            TestResultObject[
             <|
              "TestKey" -> 2287841132882643338,
              "TestID" -> "Scope-5",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[Range[10], GreaterThan[3]]],
              "ExpectedOutput" ->
               HoldForm[{{4, 5, 6, 7, 8, 9, 10}, {1, 2, 3}}],
              "ActualOutput" ->
               HoldForm[{{4, 5, 6, 7, 8, 9, 10}, {1, 2, 3}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2984
             |>
            ],
           5949898058770834802 ->
            TestResultObject[
             <|
              "TestKey" -> 5949898058770834802,
              "TestID" -> "Scope-6",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[GreaterThan[3]][Range[10]]],
              "ExpectedOutput" ->
               HoldForm[{{4, 5, 6, 7, 8, 9, 10}, {1, 2, 3}}],
              "ActualOutput" ->
               HoldForm[{{4, 5, 6, 7, 8, 9, 10}, {1, 2, 3}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2984
             |>
            ],
           2140893925975213384 ->
            TestResultObject[
             <|
              "TestKey" -> 2140893925975213384,
              "TestID" -> "Scope-7",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                SelectDiscard[Unevaluated[1 + 2 + 3 + 4 + 5], OddQ]
               ],
              "ExpectedOutput" -> HoldForm[{9, 6}],
              "ActualOutput" -> HoldForm[{9, 6}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2824
             |>
            ],
           5443531277272236961 ->
            TestResultObject[
             <|
              "TestKey" -> 5443531277272236961,
              "TestID" -> "GeneralizationsAndExtensions-1",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[h[1, a, 2, b, 3], IntegerQ]],
              "ExpectedOutput" -> HoldForm[{h[1, 2, 3], h[a, b]}],
              "ActualOutput" -> HoldForm[{h[1, 2, 3], h[a, b]}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2984
             |>
            ],
           7184207101503609369 ->
            TestResultObject[
             <|
              "TestKey" -> 7184207101503609369,
              "TestID" -> "GeneralizationsAndExtensions-2",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[s = SparseArray[Table[2^i -> i, {i, 0, 5}]]],
              "ExpectedOutput" ->
               HoldForm[PatternTest[Blank[SparseArray], SparseArrayQ]],
              "ActualOutput" ->
               HoldForm[
                SparseArray[
                 Automatic,
                 {32},
                 0,
                 {1, {{0, 5}, {{2}, {4}, {8}, {16}, {32}}}, {1, 2, 3, 4, 5}}
                ]
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3576
             |>
            ],
           7927438450295607818 ->
            TestResultObject[
             <|
              "TestKey" -> 7927438450295607818,
              "TestID" -> "GeneralizationsAndExtensions-3",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[s, EvenQ]],
              "ExpectedOutput" ->
               HoldForm[
                {
                 SparseArray[
                  Automatic,
                  {29},
                  0,
                  {1, {{0, 2}, {{3}, {14}}}, {2, 4}}
                 ],
                 {1, 3, 5}
                }
               ],
              "ActualOutput" ->
               HoldForm[
                {
                 SparseArray[
                  Automatic,
                  {29},
                  0,
                  {1, {{0, 2}, {{3}, {14}}}, {2, 4}}
                 ],
                 {1, 3, 5}
                }
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3832
             |>
            ],
           8657942234021243739 ->
            TestResultObject[
             <|
              "TestKey" -> 8657942234021243739,
              "TestID" -> "GeneralizationsAndExtensions-4",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[s, OddQ]],
              "ExpectedOutput" ->
               HoldForm[
                {
                 {1, 3, 5},
                 SparseArray[
                  Automatic,
                  {29},
                  0,
                  {1, {{0, 2}, {{3}, {14}}}, {2, 4}}
                 ]
                }
               ],
              "ActualOutput" ->
               HoldForm[
                {
                 {1, 3, 5},
                 SparseArray[
                  Automatic,
                  {29},
                  0,
                  {1, {{0, 2}, {{3}, {14}}}, {2, 4}}
                 ]
                }
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3768
             |>
            ],
           1006211747367371863 ->
            TestResultObject[
             <|
              "TestKey" -> 1006211747367371863,
              "TestID" -> "GeneralizationsAndExtensions-5",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[{g1, g2} = SelectDiscard[CompleteGraph[7], OddQ]],
              "ExpectedOutput" ->
               HoldForm[
                {
                 PatternTest[Blank[Graph], GraphQ],
                 PatternTest[Blank[Graph], GraphQ]
                }
               ],
              "ActualOutput" ->
               HoldForm[
                {
                 Graph[
                  {1, 3, 5, 7},
                  {
                   Null,
                   SparseArray[
                    Automatic,
                    {4, 4},
                    0,
                    {
                     1,
                     {
                      {0, 3, 6, 9, 12},
                      {
                       {2},
                       {3},
                       {4},
                       {1},
                       {3},
                       {4},
                       {1},
                       {2},
                       {4},
                       {1},
                       {2},
                       {3}
                      }
                     },
                     Pattern
                    }
                   ]
                  },
                  {
                   GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}
                  }
                 ],
                 Graph[
                  {2, 4, 6},
                  {
                   Null,
                   SparseArray[
                    Automatic,
                    {3, 3},
                    0,
                    {
                     1,
                     {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}},
                     Pattern
                    }
                   ]
                  },
                  {
                   GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}
                  }
                 ]
                }
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0009999,
              "CPUTimeUsed" -> 0.016,
              "MemoryUsed" -> 6056
             |>
            ],
           2952101219596585327 ->
            TestResultObject[
             <|
              "TestKey" -> 2952101219596585327,
              "TestID" -> "GeneralizationsAndExtensions-6",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                IsomorphicGraphQ[
                 g1,
                 Graph[
                  {
                   TwoWayRule[1, 3],
                   TwoWayRule[1, 5],
                   TwoWayRule[1, 7],
                   TwoWayRule[3, 5],
                   TwoWayRule[3, 7],
                   TwoWayRule[5, 7]
                  }
                 ]
                ]
               ],
              "ExpectedOutput" -> HoldForm[True],
              "ActualOutput" -> HoldForm[True],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 1992
             |>
            ],
           2155864568358669669 ->
            TestResultObject[
             <|
              "TestKey" -> 2155864568358669669,
              "TestID" -> "GeneralizationsAndExtensions-7",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                IsomorphicGraphQ[
                 g2,
                 Graph[
                  {TwoWayRule[2, 4], TwoWayRule[2, 6], TwoWayRule[4, 6]}
                 ]
                ]
               ],
              "ExpectedOutput" -> HoldForm[True],
              "ActualOutput" -> HoldForm[True],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 1960
             |>
            ],
           487945547306637294 ->
            TestResultObject[
             <|
              "TestKey" -> 487945547306637294,
              "TestID" -> "Applications-1",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[((7*Pi^2)*x^2)*y^2, NumericQ]],
              "ExpectedOutput" -> HoldForm[{7*Pi^2, x^2*y^2}],
              "ActualOutput" -> HoldForm[{7*Pi^2, x^2*y^2}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3208
             |>
            ],
           3089973832764326470 ->
            TestResultObject[
             <|
              "TestKey" -> 3089973832764326470,
              "TestID" -> "PropertiesAndRelations-1",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[list = Range[10]],
              "ExpectedOutput" ->
               HoldForm[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}],
              "ActualOutput" -> HoldForm[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2928
             |>
            ],
           4796425764711365601 ->
            TestResultObject[
             <|
              "TestKey" -> 4796425764711365601,
              "TestID" -> "PropertiesAndRelations-2",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[list, LessEqualThan[4]]],
              "ExpectedOutput" ->
               HoldForm[{{1, 2, 3, 4}, {5, 6, 7, 8, 9, 10}}],
              "ActualOutput" ->
               HoldForm[{{1, 2, 3, 4}, {5, 6, 7, 8, 9, 10}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2984
             |>
            ],
           7026103089751188856 ->
            TestResultObject[
             <|
              "TestKey" -> 7026103089751188856,
              "TestID" -> "PropertiesAndRelations-3",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[Range[10], OddQ]],
              "ExpectedOutput" ->
               HoldForm[{{1, 3, 5, 7, 9}, {2, 4, 6, 8, 10}}],
              "ActualOutput" ->
               HoldForm[{{1, 3, 5, 7, 9}, {2, 4, 6, 8, 10}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2984
             |>
            ],
           3452570276794194647 ->
            TestResultObject[
             <|
              "TestKey" -> 3452570276794194647,
              "TestID" -> "PropertiesAndRelations-4",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[GatherBy[Range[10], OddQ]],
              "ExpectedOutput" ->
               HoldForm[{{1, 3, 5, 7, 9}, {2, 4, 6, 8, 10}}],
              "ActualOutput" ->
               HoldForm[{{1, 3, 5, 7, 9}, {2, 4, 6, 8, 10}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3168
             |>
            ],
           5901811064857879646 ->
            TestResultObject[
             <|
              "TestKey" -> 5901811064857879646,
              "TestID" -> "PropertiesAndRelations-5",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[Range[10], EvenQ]],
              "ExpectedOutput" ->
               HoldForm[{{2, 4, 6, 8, 10}, {1, 3, 5, 7, 9}}],
              "ActualOutput" ->
               HoldForm[{{2, 4, 6, 8, 10}, {1, 3, 5, 7, 9}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2984
             |>
            ],
           2168925396175733389 ->
            TestResultObject[
             <|
              "TestKey" -> 2168925396175733389,
              "TestID" -> "PropertiesAndRelations-6",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[GatherBy[Range[10], EvenQ]],
              "ExpectedOutput" ->
               HoldForm[{{1, 3, 5, 7, 9}, {2, 4, 6, 8, 10}}],
              "ActualOutput" ->
               HoldForm[{{1, 3, 5, 7, 9}, {2, 4, 6, 8, 10}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3088
             |>
            ],
           2932691465547570080 ->
            TestResultObject[
             <|
              "TestKey" -> 2932691465547570080,
              "TestID" -> "PropertiesAndRelations-7",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                Lookup[GroupBy[Range[10], PrimeQ], {True, False}, {}]
               ],
              "ExpectedOutput" ->
               HoldForm[{{2, 3, 5, 7}, {1, 4, 6, 8, 9, 10}}],
              "ActualOutput" ->
               HoldForm[{{2, 3, 5, 7}, {1, 4, 6, 8, 9, 10}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3016
             |>
            ],
           3815993949529005420 ->
            TestResultObject[
             <|
              "TestKey" -> 3815993949529005420,
              "TestID" -> "PropertiesAndRelations-8",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[g[1, 2, 4, 7, 8], #1 > 2 & ]],
              "ExpectedOutput" -> HoldForm[{g[4, 7, 8], g[1, 2]}],
              "ActualOutput" -> HoldForm[{g[4, 7, 8], g[1, 2]}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2968
             |>
            ],
           287406538399776378 ->
            TestResultObject[
             <|
              "TestKey" -> 287406538399776378,
              "TestID" -> "PropertiesAndRelations-9",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[GroupBy[g[1, 2, 4, 7, 8], #1 > 2 & ]],
              "ExpectedOutput" ->
               HoldForm[HoldPattern[GroupBy[g[1, 2, 4, 7, 8], #1 > 2 & ]]],
              "ActualOutput" ->
               HoldForm[GroupBy[g[1, 2, 4, 7, 8], #1 > 2 & ]],
              "ExpectedMessages" ->
               HoldForm[{MessageName[GroupBy, "list1"]}],
              "ActualMessages" -> {
               HoldForm[
                Message[
                 MessageName[GroupBy, "list1"],
                 HoldForm[g[1, 2, 4, 7, 8]]
                ]
               ]
              },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2824
             |>
            ],
           7582800176648666810 ->
            TestResultObject[
             <|
              "TestKey" -> 7582800176648666810,
              "TestID" -> "PropertiesAndRelations-10",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[SelectDiscard[{1, 2, 4, 7, x, y}, #1 > 2 & ]],
              "ExpectedOutput" -> HoldForm[{{4, 7}, {1, 2, x, y}}],
              "ActualOutput" -> HoldForm[{{4, 7}, {1, 2, x, y}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3000
             |>
            ],
           8794098527667160152 ->
            TestResultObject[
             <|
              "TestKey" -> 8794098527667160152,
              "TestID" -> "PropertiesAndRelations-11",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[Range[5], IntegerQ]],
              "ExpectedOutput" -> HoldForm[{{1, 2, 3, 4, 5}, {}}],
              "ActualOutput" -> HoldForm[{{1, 2, 3, 4, 5}, {}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2904
             |>
            ],
           7547931732732397103 ->
            TestResultObject[
             <|
              "TestKey" -> 7547931732732397103,
              "TestID" -> "PropertiesAndRelations-12",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[GatherBy[{1, 2, 4, 7, x, y}, #1 > 2 & ]],
              "ExpectedOutput" -> HoldForm[{{1, 2}, {4, 7}, {x}, {y}}],
              "ActualOutput" -> HoldForm[{{1, 2}, {4, 7}, {x}, {y}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3096
             |>
            ],
           4062752818266088882 ->
            TestResultObject[
             <|
              "TestKey" -> 4062752818266088882,
              "TestID" -> "PropertiesAndRelations-13",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[GroupBy[{1, 2, 4, 7, x, y}, #1 > 2 & ]],
              "ExpectedOutput" ->
               HoldForm[
                <|
                 False -> {1, 2},
                 True -> {4, 7},
                 x > 2 -> {x},
                 y > 2 -> {y}
                |>
               ],
              "ActualOutput" ->
               HoldForm[
                <|
                 False -> {1, 2},
                 True -> {4, 7},
                 x > 2 -> {x},
                 y > 2 -> {y}
                |>
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3704
             |>
            ],
           5615601414604116100 ->
            TestResultObject[
             <|
              "TestKey" -> 5615601414604116100,
              "TestID" -> "PropertiesAndRelations-14",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[GroupBy[Range[5], IntegerQ]],
              "ExpectedOutput" ->
               HoldForm[Association[True -> {1, 2, 3, 4, 5}]],
              "ActualOutput" ->
               HoldForm[Association[True -> {1, 2, 3, 4, 5}]],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 3072
             |>
            ],
           2540549709788052684 ->
            TestResultObject[
             <|
              "TestKey" -> 2540549709788052684,
              "TestID" -> "PropertiesAndRelations-15",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[GatherBy[Range[5], IntegerQ]],
              "ExpectedOutput" -> HoldForm[{{1, 2, 3, 4, 5}}],
              "ActualOutput" -> HoldForm[{{1, 2, 3, 4, 5}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2912
             |>
            ],
           7837439249282381219 ->
            TestResultObject[
             <|
              "TestKey" -> 7837439249282381219,
              "TestID" -> "PropertiesAndRelations-16",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[list = {1, 2, 2, 3, 3, 4}],
              "ExpectedOutput" -> HoldForm[{1, 2, 2, 3, 3, 4}],
              "ActualOutput" -> HoldForm[{1, 2, 2, 3, 3, 4}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2688
             |>
            ],
           8909383898110310338 ->
            TestResultObject[
             <|
              "TestKey" -> 8909383898110310338,
              "TestID" -> "PropertiesAndRelations-17",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[list, EvenQ]],
              "ExpectedOutput" -> HoldForm[{{2, 2, 4}, {1, 3, 3}}],
              "ActualOutput" -> HoldForm[{{2, 2, 4}, {1, 3, 3}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2952
             |>
            ],
           4708047600342542052 ->
            TestResultObject[
             <|
              "TestKey" -> 4708047600342542052,
              "TestID" -> "PropertiesAndRelations-18",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                With[ { sel = Select[list, EvenQ] },
                 {sel, DeleteElements[list, sel]}
                ]
               ],
              "ExpectedOutput" -> HoldForm[{{2, 2, 4}, {1, 3, 3}}],
              "ActualOutput" -> HoldForm[{{2, 2, 4}, {1, 3, 3}}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 1896
             |>
            ],
           7353585989273812200 ->
            TestResultObject[
             <|
              "TestKey" -> 7353585989273812200,
              "TestID" -> "PropertiesAndRelations-19",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[list = {-2, 0, 1, 3, 3, x, y}],
              "ExpectedOutput" -> HoldForm[{-2, 0, 1, 3, 3, x, y}],
              "ActualOutput" -> HoldForm[{-2, 0, 1, 3, 3, x, y}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2856
             |>
            ],
           1006250243567450342 ->
            TestResultObject[
             <|
              "TestKey" -> 1006250243567450342,
              "TestID" -> "PropertiesAndRelations-20",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[First[SelectDiscard[list, Positive]]],
              "ExpectedOutput" -> HoldForm[{1, 3, 3}],
              "ActualOutput" -> HoldForm[{1, 3, 3}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2840
             |>
            ],
           2355767036225078874 ->
            TestResultObject[
             <|
              "TestKey" -> 2355767036225078874,
              "TestID" -> "PropertiesAndRelations-21",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> SameQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[Last[SelectDiscard[list, Positive]]],
              "ExpectedOutput" -> HoldForm[{-2, 0, x, y}],
              "ActualOutput" -> HoldForm[{-2, 0, x, y}],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2928
             |>
            ],
           909045984758924719 ->
            TestResultObject[
             <|
              "TestKey" -> 909045984758924719,
              "TestID" -> "ErrorCases-1",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[]],
              "ExpectedOutput" ->
               HoldForm[Failure["SelectDiscard::ArgumentCount", Blank[]]],
              "ActualOutput" ->
               HoldForm[
                Failure[
                 "SelectDiscard::ArgumentCount",
                 <|
                  "MessageParameters" :> {HoldForm[0]},
                  "MessageTemplate" :>
                   MessageName[SelectDiscard, "ArgumentCount"]
                 |>
                ]
               ],
              "ExpectedMessages" ->
               HoldForm[{MessageName[SelectDiscard, "ArgumentCount"]}],
              "ActualMessages" -> {
               HoldForm[
                Message[
                 MessageName[SelectDiscard, "ArgumentCount"],
                 HoldForm[0]
                ]
               ]
              },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0009999,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 11856
             |>
            ],
           4945568326291935441 ->
            TestResultObject[
             <|
              "TestKey" -> 4945568326291935441,
              "TestID" -> "ErrorCases-2",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[{1, 2, 3}, OddQ, 1, 1]],
              "ExpectedOutput" ->
               HoldForm[Failure["SelectDiscard::ArgumentCount", Blank[]]],
              "ActualOutput" ->
               HoldForm[
                Failure[
                 "SelectDiscard::ArgumentCount",
                 <|
                  "MessageParameters" :> {HoldForm[4]},
                  "MessageTemplate" :>
                   MessageName[SelectDiscard, "ArgumentCount"]
                 |>
                ]
               ],
              "ExpectedMessages" ->
               HoldForm[{MessageName[SelectDiscard, "ArgumentCount"]}],
              "ActualMessages" -> {
               HoldForm[
                Message[
                 MessageName[SelectDiscard, "ArgumentCount"],
                 HoldForm[4]
                ]
               ]
              },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.001,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 11984
             |>
            ],
           2643129415554445618 ->
            TestResultObject[
             <|
              "TestKey" -> 2643129415554445618,
              "TestID" -> "ErrorCases-3",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[1, crit]],
              "ExpectedOutput" ->
               HoldForm[Failure["SelectDiscard::Normal", Blank[]]],
              "ActualOutput" ->
               HoldForm[
                Failure[
                 "SelectDiscard::Normal",
                 <|
                  "MessageParameters" :> {HoldForm[HoldForm[SelectDiscard[1, crit]]]},
                  "MessageTemplate" :> MessageName[SelectDiscard, "Normal"]
                 |>
                ]
               ],
              "ExpectedMessages" ->
               HoldForm[{MessageName[SelectDiscard, "Normal"]}],
              "ActualMessages" -> {
               HoldForm[
                Message[
                 MessageName[SelectDiscard, "Normal"],
                 HoldForm[HoldForm[SelectDiscard[1, crit]]]
                ]
               ]
              },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0010007,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 11976
             |>
            ],
           8482758700932974062 ->
            TestResultObject[
             <|
              "TestKey" -> 8482758700932974062,
              "TestID" -> "ErrorCases-4",
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" -> HoldForm[SelectDiscard[{1, 2, 3}, OddQ, "x"]],
              "ExpectedOutput" ->
               HoldForm[Failure["SelectDiscard::Count", Blank[]]],
              "ActualOutput" ->
               HoldForm[
                Failure[
                 "SelectDiscard::Count",
                 <|
                  "MessageParameters" :> {HoldForm[HoldForm[SelectDiscard[{1, 2, 3}, OddQ, "x"]]]},
                  "MessageTemplate" :> MessageName[SelectDiscard, "Count"]
                 |>
                ]
               ],
              "ExpectedMessages" ->
               HoldForm[{MessageName[SelectDiscard, "Count"]}],
              "ActualMessages" -> {
               HoldForm[
                Message[
                 MessageName[SelectDiscard, "Count"],
                 HoldForm[HoldForm[SelectDiscard[{1, 2, 3}, OddQ, "x"]]]
                ]
               ]
              },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0009994,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 12168
             |>
            ],
           3074691811415610496 ->
            TestResultObject[
             <|
              "TestKey" -> 3074691811415610496,
              "TestID" -> None,
              "TestFileName" -> "H:\\Documents\\ResourceFunctions\\Definitions\\SelectDiscard\\Tests.wlt",
              "SameTest" -> MatchQ,
              "SameMessages" -> Testing`MessageMatchQ,
              "MemoryConstraint" -> Infinity,
              "TimeConstraint" -> Infinity,
              "Outcome" -> "Success",
              "Input" ->
               HoldForm[
                SetOptions[
                 ResourceFunction["MessageFailure"],
                 "TestMode" -> False
                ]
               ],
              "ExpectedOutput" ->
               HoldForm[KeyValuePattern["TestMode" -> False]],
              "ActualOutput" ->
               HoldForm[
                {
                 "MessageFunction" -> Automatic,
                 "Verbose" -> False,
                 "Stack" -> False,
                 "TestMode" -> False
                }
               ],
              "ExpectedMessages" -> HoldForm[{}],
              "ActualMessages" -> { },
              "AbsoluteTime" -> 3.8658*^9,
              "AbsoluteTimeUsed" -> 0.0009999,
              "CPUTimeUsed" -> 0.0,
              "MemoryUsed" -> 2024
             |>
            ]
          |>,
          "TestsSucceededKeys" ->
           CompressedData[
            "\n1:eJw1k8mNFEEQReeABWABFhD7YsJInDCBAxInDuC/eNlZ0yp1l6Izf8Rf4uvP\nPz9+fXt7e/v7ia/vv//+e//Ci/IRGSnzVK3R3lc9Y9M9e1zMasQ83j9Td0tp\na5myisjouDC8e0zUeo9miF2YskmpkBjRaV/XW2/lZq1QEgXfwl71CLNQX55q\n84mUV30kWtImVCxaPbJuX/dy2k1nTqp0+h1/o2uynEKVpGy/6mbTgKjbDATc\nfT7O7+xITsMNJnLnMQV7fS230+g28cgTnq7WaGHmtaUPrwmTVtEUL1n+ufW1\njhcd2yxBo9t3Knvh7CimFo4el5fgiGpHe7WDWpcXtw1w080tGLs9vBT+hSrj\n/DIOfY9dMcAnNrkUYtje8R1S2z5cRwSE6Ctz9FZYUmw0KiZ9aImVyrnVpGRm\nHvnxgdMCCm10g3uPnNhNsCqGCB3QesasQUvM1c4+6u9DiyFWo86oABLIi0+W\nFvkJo61Iou2LFi6GVEIAGg2xq2bn2IhoF42rSPOTHqaTnWTOaoVU2nMewq6N\nDG6+2HZVBtuwG5OM8EB37vksPZIEgwohQpKLbySQhWlSNmSIPF+Z2R5cX4u1\nIczHtjvPkoyB/NHIeZ4UYsMJeok4LkD2Y06yhtkklEGBsafvKyVEiixWky1/\ntohdxsMmgXbWdVDrJRttJYBBY6Dw+I4TJyIkx8pWl3WK6/pZECUyZIsa4foI\nbQzyDDZh2x4n7EnV2eljPFcQJ7b+A7N+ywc=\n     "
           ],
          "TestsFailedWrongResultsKeys" -> { },
          "TestsFailedWithMessagesKeys" -> { },
          "TestsFailedWithErrorsKeys" -> { }
         |>
        ],
        Editable -> False,
        SelectWithContents -> True,
        Selectable -> False
       ]
      ],
      "Output",
      "Excluded",
      CellLabel -> "Out[5]="
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Basic Examples",
      "Subsection",
      CellLabel -> "In[24]:="
     ],
     Cell[
      "Separate elements that are even:",
      "Text",
      CellID -> 8382
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "SelectDiscard",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {"1", ",", "2", ",", "4", ",", "7", ",", "6", ",", "2"}
                ],
                "}"
               }
              ],
              ",",
              "EvenQ"
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 13616
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              RowBox[
               {"{", RowBox[{"2", ",", "4", ",", "6", ",", "2"}], "}"}
              ],
              ",",
              RowBox[{"{", RowBox[{"1", ",", "7"}], "}"}]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[1]="
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         "Use a pure function to test each element:",
         "Text",
         CellID -> 14609
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"1", ",", "2", ",", "4", ",", "7", ",", "6", ",", "2"}
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 10299
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"{", RowBox[{"4", ",", "7", ",", "6"}], "}"}],
                 ",",
                 RowBox[{"{", RowBox[{"1", ",", "2", ",", "2"}], "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         "Select only the first expression that satisfies the condition:",
         "Text",
         CellID -> 26940
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"1", ",", "2", ",", "4", ",", "7", ",", "6", ",", "2"}
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}],
                 ",",
                 "1"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 30188
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"{", "4", "}"}],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[{"7", ",", "6", ",", "1", ",", "2", ",", "2"}],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Use the operator form of ",
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text",
         CellID -> 1767548338
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"SelectDiscard", "[", "EvenQ", "]"}],
               "[",
               RowBox[
                {
                 "{",
                 RowBox[
                  {"1", ",", "2", ",", "4", ",", "7", ",", "6", ",", "2"}
                 ],
                 "}"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 1753741656
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {"{", RowBox[{"2", ",", "4", ",", "6", ",", "2"}], "}"}
                 ],
                 ",",
                 RowBox[{"{", RowBox[{"1", ",", "7"}], "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " operates on values in an ",
           Cell[
            BoxData[
             TemplateBox[
              {"Association", "paclet:ref/Association"},
              "RefLink",
              BaseStyle -> {"InlineFormula"}
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text",
         CellID -> 517547830
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "<|",
                   RowBox[
                    {
                     RowBox[{"a", "\[Rule]", "1"}],
                     ",",
                     RowBox[{"b", "\[Rule]", "2"}],
                     ",",
                     RowBox[{"c", "\[Rule]", "3"}],
                     ",",
                     RowBox[{"d", "\[Rule]", "4"}]
                    }
                   ],
                   "|>"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 284334899
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "\[LeftAssociation]",
                   RowBox[
                    {
                     RowBox[{"c", "\[Rule]", "3"}],
                     ",",
                     RowBox[{"d", "\[Rule]", "4"}]
                    }
                   ],
                   "\[RightAssociation]"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "\[LeftAssociation]",
                   RowBox[
                    {
                     RowBox[{"a", "\[Rule]", "1"}],
                     ",",
                     RowBox[{"b", "\[Rule]", "2"}]
                    }
                   ],
                   "\[RightAssociation]"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Scope", "Subsection", CellLabel -> "In[2]:="],
     Cell[
      TextData[
       {
        Cell[
         BoxData["SelectDiscard"],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " gives elements for which applying the criterion explicitly yields ",
        Cell[
         BoxData[
          TemplateBox[
           {"True", "paclet:ref/True"},
           "RefLink",
           BaseStyle -> {"InlineFormula"}
          ]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " in the first list and everything else in the second:"
       }
      ],
      "Text",
      CellID -> 77
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "SelectDiscard",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[{"1", ",", "2", ",", "4", ",", "7", ",", "x"}],
                "}"
               }
              ],
              ",",
              RowBox[{RowBox[{"#", ">", "2"}], "&"}]
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 26380
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              RowBox[{"{", RowBox[{"4", ",", "7"}], "}"}],
              ",",
              RowBox[{"{", RowBox[{"1", ",", "2", ",", "x"}], "}"}]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[1]="
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "Applying the criterion to the symbolic object ",
        Cell[
         BoxData["x"],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " does not explicitly yield ",
        Cell[
         BoxData[
          TemplateBox[
           {"True", "paclet:ref/True"},
           "RefLink",
           BaseStyle -> {"InlineFormula"}
          ]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        ":"
       }
      ],
      "Text",
      CellID -> 3867
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[RowBox[{"x", ">", "2"}]],
         "Input",
         CellLabel -> "In[2]:=",
         CellID -> 28044
        ],
        Cell[
         BoxData[RowBox[{"x", ">", "2"}]],
         "Output",
         CellLabel -> "Out[2]="
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Find pairs containing ",
           Cell[
            BoxData[StyleBox["x", "TI"]],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text",
         CellID -> 1706753837
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"1", ",", "y"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"2", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"3", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"4", ",", "z"}], "}"}],
                     ",",
                     " ",
                     RowBox[{"{", RowBox[{"5", ",", "x"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   RowBox[{"MemberQ", "[", RowBox[{"#", ",", "x"}], "]"}],
                   "&"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 749491960
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"2", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"3", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"5", ",", "x"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"1", ",", "y"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"4", ",", "z"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Find up to 2 pairs containing ",
           Cell[
            BoxData[StyleBox["x", "TI"]],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text",
         CellID -> 1639206112
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"1", ",", "y"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"2", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"3", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"4", ",", "z"}], "}"}],
                     ",",
                     " ",
                     RowBox[{"{", RowBox[{"5", ",", "x"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   RowBox[{"MemberQ", "[", RowBox[{"#", ",", "x"}], "]"}],
                   "&"
                  }
                 ],
                 ",",
                 "2"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 1024557115
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"2", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"3", ",", "x"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"5", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"1", ",", "y"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"4", ",", "z"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         "Fewer than the requested elements may be returned:",
         "Text",
         CellID -> 691612653
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"1", ",", "y"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"2", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"3", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"4", ",", "z"}], "}"}],
                     ",",
                     " ",
                     RowBox[{"{", RowBox[{"5", ",", "x"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   RowBox[{"MemberQ", "[", RowBox[{"#", ",", "z"}], "]"}],
                   "&"
                  }
                 ],
                 ",",
                 "2"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 1684652656
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {"{", RowBox[{"{", RowBox[{"4", ",", "z"}], "}"}], "}"}
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[{"{", RowBox[{"1", ",", "y"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"2", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"3", ",", "x"}], "}"}],
                     ",",
                     RowBox[{"{", RowBox[{"5", ",", "x"}], "}"}]
                    }
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         "Use an operator form as selection criterion:",
         "Text",
         CellID -> 625902058
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[{"Range", "[", "10", "]"}],
                 ",",
                 RowBox[{"GreaterThan", "[", "3", "]"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 870028888
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     "4",
                     ",",
                     "5",
                     ",",
                     "6",
                     ",",
                     "7",
                     ",",
                     "8",
                     ",",
                     "9",
                     ",",
                     "10"
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{"{", RowBox[{"1", ",", "2", ",", "3"}], "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Use ",
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " in operator form:"
          }
         ],
         "Text",
         CellID -> 835159684
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[{"Range", "[", "10", "]"}],
               "//",
               RowBox[
                {
                 "SelectDiscard",
                 "[",
                 RowBox[{"GreaterThan", "[", "3", "]"}],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 242927938
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     "4",
                     ",",
                     "5",
                     ",",
                     "6",
                     ",",
                     "7",
                     ",",
                     "8",
                     ",",
                     "9",
                     ",",
                     "10"
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{"{", RowBox[{"1", ",", "2", ",", "3"}], "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Separate arguments in ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "Unevaluated",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/Unevaluated",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " code:"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "Unevaluated",
                   "[",
                   RowBox[{"1", "+", "2", "+", "3", "+", "4", "+", "5"}],
                   "]"
                  }
                 ],
                 ",",
                 "OddQ"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:="
           ],
           Cell[
            BoxData[RowBox[{"{", RowBox[{"9", ",", "6"}], "}"}]],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Generalizations & Extensions",
      "Subsection",
      CellLabel -> "In[2]:="
     ],
     Cell[
      TextData[
       {
        Cell[
         BoxData["SelectDiscard"],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " works with any head, not just ",
        Cell[
         BoxData[
          TemplateBox[
           {"List", "paclet:ref/List"},
           "RefLink",
           BaseStyle -> {"InlineFormula"}
          ]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        ":"
       }
      ],
      "Text",
      CellID -> 87967147
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "SelectDiscard",
            "[",
            RowBox[
             {
              RowBox[
               {
                "f",
                "[",
                RowBox[{"1", ",", "a", ",", "2", ",", "b", ",", "3"}],
                "]"
               }
              ],
              ",",
              "IntegerQ"
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 22433
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              RowBox[{"f", "[", RowBox[{"1", ",", "2", ",", "3"}], "]"}],
              ",",
              RowBox[{"f", "[", RowBox[{"a", ",", "b"}], "]"}]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[1]="
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " works with ",
           Cell[
            BoxData[
             TemplateBox[
              {"SparseArray", "paclet:ref/SparseArray"},
              "RefLink",
              BaseStyle -> {"InlineFormula"}
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " objects:"
          }
         ],
         "Text",
         CellFrameLabels -> {{None, None}, {None, None}},
         CellID -> 165853580
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "s",
               "=",
               RowBox[
                {
                 "SparseArray",
                 "[",
                 RowBox[
                  {
                   "Table",
                   "[",
                   RowBox[
                    {
                     RowBox[{RowBox[{"2", "^", "i"}], "\[Rule]", "i"}],
                     ",",
                     RowBox[{"{", RowBox[{"i", ",", "0", ",", "5"}], "}"}]
                    }
                   ],
                   "]"
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 750594546
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["SparseArray", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          RasterBox[
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGIBIAaxJ7AxOi9wuWB/IX12WU/bXfv7faeFk0ve2DcH\nLgn7XH7RnsnPa04B12P7a1WlLiV27+ytynfHzVI6Zz/HeNEW8x9X7F8sUnwc\nuOqVfc3fJaaJYTfsWVS+/my+88w+69J2sXLf9zjVkypu08r44Uv+I/t3pn4h\nDZav7GdOndSVvZB65tNafGe3gevOLS/sb7gvX1cz7a39yYjcf/Ff39sDAM9u\nyto=\n              "
                           ],
                           {{0, 0}, {16, 1}},
                           {0, 1}
                          ],
                          AspectRatio -> 1,
                          Axes -> False,
                          Frame -> False,
                          FrameLabel -> {None, None},
                          FrameStyle ->
                           Directive[
                            Opacity[0.5],
                            Thickness[Tiny],
                            RGBColor[0.36842, 0.50678, 0.7098]
                           ],
                          FrameTicks -> {{None, None}, {None, None}},
                          GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          Method -> {
                           "AxisPadding" -> Scaled[0.02],
                           "DefaultBoundaryStyle" -> Automatic,
                           "DefaultGraphicsInteraction" -> {
                            "Version" -> 1.2,
                            "TrackMousePosition" -> {True, False},
                            "Effects" -> {
                             "Highlight" -> {"ratio" -> 2},
                             "HighlightPoint" -> {"ratio" -> 2},
                             "Droplines" -> {
                              "freeformCursorMode" -> True,
                              "placement" -> {"x" -> "All", "y" -> "None"}
                             }
                            }
                           },
                           "DefaultPlotStyle" -> Automatic,
                           "DomainPadding" -> Scaled[0.02],
                           "RangePadding" -> Scaled[0.05]
                          }
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["5", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[RowBox[{"{", "32", "}"}], "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          RasterBox[
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGIBIAaxJ7AxOi9wuWB/IX12WU/bXfv7faeFk0ve2DcH\nLgn7XH7RnsnPa04B12P7a1WlLiV27+ytynfHzVI6Zz/HeNEW8x9X7F8sUnwc\nuOqVfc3fJaaJYTfsWVS+/my+88w+69J2sXLf9zjVkypu08r44Uv+I/t3pn4h\nDZav7GdOndSVvZB65tNafGe3gevOLS/sb7gvX1cz7a39yYjcf/Ff39sDAM9u\nyto=\n              "
                           ],
                           {{0, 0}, {16, 1}},
                           {0, 1}
                          ],
                          AspectRatio -> 1,
                          Axes -> False,
                          Frame -> False,
                          FrameLabel -> {None, None},
                          FrameStyle ->
                           Directive[
                            Opacity[0.5],
                            Thickness[Tiny],
                            RGBColor[0.36842, 0.50678, 0.7098]
                           ],
                          FrameTicks -> {{None, None}, {None, None}},
                          GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          Method -> {
                           "AxisPadding" -> Scaled[0.02],
                           "DefaultBoundaryStyle" -> Automatic,
                           "DefaultGraphicsInteraction" -> {
                            "Version" -> 1.2,
                            "TrackMousePosition" -> {True, False},
                            "Effects" -> {
                             "Highlight" -> {"ratio" -> 2},
                             "HighlightPoint" -> {"ratio" -> 2},
                             "Droplines" -> {
                              "freeformCursorMode" -> True,
                              "placement" -> {"x" -> "All", "y" -> "None"}
                             }
                            }
                           },
                           "DefaultPlotStyle" -> Automatic,
                           "DomainPadding" -> Scaled[0.02],
                           "RangePadding" -> Scaled[0.05]
                          }
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["5", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[RowBox[{"{", "32", "}"}], "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Default: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["0", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Density: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["0.15625`", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Elements:\"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            TagBox[
                             TagBox[
                              GridBox[
                               {
                                {
                                 RowBox[
                                  {
                                   RowBox[{"{", "2", "}"}],
                                   "\[Rule]",
                                   StyleBox[
                                    PaneBox[
                                     "1",
                                     ContentPadding -> False,
                                     FrameMargins -> 0,
                                     StripOnInput -> True,
                                     BaselinePosition -> Baseline,
                                     ImageSize -> {{1, 300}, Automatic}
                                    ],
                                    LineBreakWithin -> False
                                   ]
                                  }
                                 ]
                                },
                                {
                                 RowBox[
                                  {
                                   RowBox[{"{", "4", "}"}],
                                   "\[Rule]",
                                   StyleBox[
                                    PaneBox[
                                     "2",
                                     ContentPadding -> False,
                                     FrameMargins -> 0,
                                     StripOnInput -> True,
                                     BaselinePosition -> Baseline,
                                     ImageSize -> {{1, 300}, Automatic}
                                    ],
                                    LineBreakWithin -> False
                                   ]
                                  }
                                 ]
                                },
                                {
                                 RowBox[
                                  {
                                   RowBox[{"{", "8", "}"}],
                                   "\[Rule]",
                                   StyleBox[
                                    PaneBox[
                                     "3",
                                     ContentPadding -> False,
                                     FrameMargins -> 0,
                                     StripOnInput -> True,
                                     BaselinePosition -> Baseline,
                                     ImageSize -> {{1, 300}, Automatic}
                                    ],
                                    LineBreakWithin -> False
                                   ]
                                  }
                                 ]
                                },
                                {
                                 RowBox[
                                  {
                                   RowBox[{"{", "16", "}"}],
                                   "\[Rule]",
                                   StyleBox[
                                    PaneBox[
                                     "4",
                                     ContentPadding -> False,
                                     FrameMargins -> 0,
                                     StripOnInput -> True,
                                     BaselinePosition -> Baseline,
                                     ImageSize -> {{1, 300}, Automatic}
                                    ],
                                    LineBreakWithin -> False
                                   ]
                                  }
                                 ]
                                },
                                {
                                 RowBox[
                                  {
                                   RowBox[{"{", "32", "}"}],
                                   "\[Rule]",
                                   StyleBox[
                                    PaneBox[
                                     "5",
                                     ContentPadding -> False,
                                     FrameMargins -> 0,
                                     StripOnInput -> True,
                                     BaselinePosition -> Baseline,
                                     ImageSize -> {{1, 300}, Automatic}
                                    ],
                                    LineBreakWithin -> False
                                   ]
                                  }
                                 ]
                                }
                               },
                               GridBoxAlignment -> {"Columns" -> {{Left}}},
                               DefaultBaseStyle -> "Column",
                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                              ],
                              "Column"
                             ],
                             "SummaryItem"
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              SparseArray[
               Automatic,
               {32},
               0,
               {1, {{0, 5}, {{2}, {4}, {8}, {16}, {32}}}, {1, 2, 3, 4, 5}}
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {"SelectDiscard", "[", RowBox[{"s", ",", "EvenQ"}], "]"}
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 1171109
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 InterpretationBox[
                  RowBox[
                   {
                    TagBox["SparseArray", "SummaryHead"],
                    "[",
                    DynamicModuleBox[
                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                     TemplateBox[
                      {
                       PaneSelectorBox[
                        {
                         False ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = True),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              RasterBox[
                               CompressedData[
                                "\n1:eJxTTMoPSmVmYGBgBGJZIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlT0u\n8b/fSh/MEbxkzz/7xBlWvaf2lwpO3alRfo9T/XAV39lt4Lpzywv7G+7L19VM\ne2t/MiL3X/zXkRcOAyUOAB6jc14=\n                "
                               ],
                               {{0, 0}, {29, 1}},
                               {0, 1}
                              ],
                              AspectRatio -> 1,
                              Axes -> False,
                              Frame -> False,
                              FrameLabel -> {None, None},
                              FrameStyle ->
                               Directive[
                                Opacity[0.5],
                                Thickness[Tiny],
                                RGBColor[0.36842, 0.50678, 0.7098]
                               ],
                              FrameTicks -> {{None, None}, {None, None}},
                              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ],
                              Method -> {
                               "AxisPadding" -> Scaled[0.02],
                               "DefaultBoundaryStyle" -> Automatic,
                               "DefaultGraphicsInteraction" -> {
                                "Version" -> 1.2,
                                "TrackMousePosition" -> {True, False},
                                "Effects" -> {
                                 "Highlight" -> {"ratio" -> 2},
                                 "HighlightPoint" -> {"ratio" -> 2},
                                 "Droplines" -> {
                                  "freeformCursorMode" -> True,
                                  "placement" -> {"x" -> "All", "y" -> "None"}
                                 }
                                }
                               },
                               "DefaultPlotStyle" -> Automatic,
                               "DomainPadding" -> Scaled[0.02],
                               "RangePadding" -> Scaled[0.05]
                              }
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["2", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox[RowBox[{"{", "29", "}"}], "SummaryItem"]
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ],
                         True ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = False),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              RasterBox[
                               CompressedData[
                                "\n1:eJxTTMoPSmVmYGBgBGJZIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlT0u\n8b/fSh/MEbxkzz/7xBlWvaf2lwpO3alRfo9T/XAV39lt4Lpzywv7G+7L19VM\ne2t/MiL3X/zXkRcOAyUOAB6jc14=\n                "
                               ],
                               {{0, 0}, {29, 1}},
                               {0, 1}
                              ],
                              AspectRatio -> 1,
                              Axes -> False,
                              Frame -> False,
                              FrameLabel -> {None, None},
                              FrameStyle ->
                               Directive[
                                Opacity[0.5],
                                Thickness[Tiny],
                                RGBColor[0.36842, 0.50678, 0.7098]
                               ],
                              FrameTicks -> {{None, None}, {None, None}},
                              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ],
                              Method -> {
                               "AxisPadding" -> Scaled[0.02],
                               "DefaultBoundaryStyle" -> Automatic,
                               "DefaultGraphicsInteraction" -> {
                                "Version" -> 1.2,
                                "TrackMousePosition" -> {True, False},
                                "Effects" -> {
                                 "Highlight" -> {"ratio" -> 2},
                                 "HighlightPoint" -> {"ratio" -> 2},
                                 "Droplines" -> {
                                  "freeformCursorMode" -> True,
                                  "placement" -> {"x" -> "All", "y" -> "None"}
                                 }
                                }
                               },
                               "DefaultPlotStyle" -> Automatic,
                               "DomainPadding" -> Scaled[0.02],
                               "RangePadding" -> Scaled[0.05]
                              }
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["2", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox[RowBox[{"{", "29", "}"}], "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Default: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["0", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Density: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["0.06896551724137931`", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Elements:\"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["\"\"", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                TagBox[
                                 TagBox[
                                  GridBox[
                                   {
                                    {
                                     RowBox[
                                      {
                                       RowBox[{"{", "3", "}"}],
                                       "\[Rule]",
                                       StyleBox[
                                        PaneBox[
                                         "2",
                                         ContentPadding -> False,
                                         FrameMargins -> 0,
                                         StripOnInput -> True,
                                         BaselinePosition -> Baseline,
                                         ImageSize -> {{1, 300}, Automatic}
                                        ],
                                        LineBreakWithin -> False
                                       ]
                                      }
                                     ]
                                    },
                                    {
                                     RowBox[
                                      {
                                       RowBox[{"{", "14", "}"}],
                                       "\[Rule]",
                                       StyleBox[
                                        PaneBox[
                                         "4",
                                         ContentPadding -> False,
                                         FrameMargins -> 0,
                                         StripOnInput -> True,
                                         BaselinePosition -> Baseline,
                                         ImageSize -> {{1, 300}, Automatic}
                                        ],
                                        LineBreakWithin -> False
                                       ]
                                      }
                                     ]
                                    }
                                   },
                                   GridBoxAlignment -> {"Columns" -> {{Left}}},
                                   DefaultBaseStyle -> "Column",
                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                  ],
                                  "Column"
                                 ],
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ]
                        },
                        Dynamic[Typeset`open$$],
                        ImageSize -> Automatic
                       ]
                      },
                      "SummaryPanel"
                     ],
                     DynamicModuleValues :> { }
                    ],
                    "]"
                   }
                  ],
                  SparseArray[
                   Automatic,
                   {29},
                   0,
                   {1, {{0, 2}, {{3}, {14}}}, {2, 4}}
                  ],
                  Editable -> False,
                  SelectWithContents -> True,
                  Selectable -> False
                 ],
                 ",",
                 RowBox[{"{", RowBox[{"1", ",", "3", ",", "5"}], "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ],
        Cell[
         "The result includes a list since only one can be sparse:",
         "Text",
         CellID -> 754035701
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {"SelectDiscard", "[", RowBox[{"s", ",", "OddQ"}], "]"}
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 346187623
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"{", RowBox[{"1", ",", "3", ",", "5"}], "}"}],
                 ",",
                 InterpretationBox[
                  RowBox[
                   {
                    TagBox["SparseArray", "SummaryHead"],
                    "[",
                    DynamicModuleBox[
                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                     TemplateBox[
                      {
                       PaneSelectorBox[
                        {
                         False ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = True),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              RasterBox[
                               CompressedData[
                                "\n1:eJxTTMoPSmVmYGBgBGJZIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlT0u\n8b/fSh/MEbxkzz/7xBlWvaf2lwpO3alRfo9T/XAV39lt4Lpzywv7G+7L19VM\ne2t/MiL3X/zXkRcOAyUOAB6jc14=\n                "
                               ],
                               {{0, 0}, {29, 1}},
                               {0, 1}
                              ],
                              AspectRatio -> 1,
                              Axes -> False,
                              Frame -> False,
                              FrameLabel -> {None, None},
                              FrameStyle ->
                               Directive[
                                Opacity[0.5],
                                Thickness[Tiny],
                                RGBColor[0.36842, 0.50678, 0.7098]
                               ],
                              FrameTicks -> {{None, None}, {None, None}},
                              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ],
                              Method -> {
                               "AxisPadding" -> Scaled[0.02],
                               "DefaultBoundaryStyle" -> Automatic,
                               "DefaultGraphicsInteraction" -> {
                                "Version" -> 1.2,
                                "TrackMousePosition" -> {True, False},
                                "Effects" -> {
                                 "Highlight" -> {"ratio" -> 2},
                                 "HighlightPoint" -> {"ratio" -> 2},
                                 "Droplines" -> {
                                  "freeformCursorMode" -> True,
                                  "placement" -> {"x" -> "All", "y" -> "None"}
                                 }
                                }
                               },
                               "DefaultPlotStyle" -> Automatic,
                               "DomainPadding" -> Scaled[0.02],
                               "RangePadding" -> Scaled[0.05]
                              }
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["2", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox[RowBox[{"{", "29", "}"}], "SummaryItem"]
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ],
                         True ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = False),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              RasterBox[
                               CompressedData[
                                "\n1:eJxTTMoPSmVmYGBgBGJZIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlT0u\n8b/fSh/MEbxkzz/7xBlWvaf2lwpO3alRfo9T/XAV39lt4Lpzywv7G+7L19VM\ne2t/MiL3X/zXkRcOAyUOAB6jc14=\n                "
                               ],
                               {{0, 0}, {29, 1}},
                               {0, 1}
                              ],
                              AspectRatio -> 1,
                              Axes -> False,
                              Frame -> False,
                              FrameLabel -> {None, None},
                              FrameStyle ->
                               Directive[
                                Opacity[0.5],
                                Thickness[Tiny],
                                RGBColor[0.36842, 0.50678, 0.7098]
                               ],
                              FrameTicks -> {{None, None}, {None, None}},
                              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ],
                              Method -> {
                               "AxisPadding" -> Scaled[0.02],
                               "DefaultBoundaryStyle" -> Automatic,
                               "DefaultGraphicsInteraction" -> {
                                "Version" -> 1.2,
                                "TrackMousePosition" -> {True, False},
                                "Effects" -> {
                                 "Highlight" -> {"ratio" -> 2},
                                 "HighlightPoint" -> {"ratio" -> 2},
                                 "Droplines" -> {
                                  "freeformCursorMode" -> True,
                                  "placement" -> {"x" -> "All", "y" -> "None"}
                                 }
                                }
                               },
                               "DefaultPlotStyle" -> Automatic,
                               "DomainPadding" -> Scaled[0.02],
                               "RangePadding" -> Scaled[0.05]
                              }
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["2", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox[RowBox[{"{", "29", "}"}], "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Default: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["0", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Density: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["0.06896551724137931`", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Elements:\"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["\"\"", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                TagBox[
                                 TagBox[
                                  GridBox[
                                   {
                                    {
                                     RowBox[
                                      {
                                       RowBox[{"{", "3", "}"}],
                                       "\[Rule]",
                                       StyleBox[
                                        PaneBox[
                                         "2",
                                         ContentPadding -> False,
                                         FrameMargins -> 0,
                                         StripOnInput -> True,
                                         BaselinePosition -> Baseline,
                                         ImageSize -> {{1, 300}, Automatic}
                                        ],
                                        LineBreakWithin -> False
                                       ]
                                      }
                                     ]
                                    },
                                    {
                                     RowBox[
                                      {
                                       RowBox[{"{", "14", "}"}],
                                       "\[Rule]",
                                       StyleBox[
                                        PaneBox[
                                         "4",
                                         ContentPadding -> False,
                                         FrameMargins -> 0,
                                         StripOnInput -> True,
                                         BaselinePosition -> Baseline,
                                         ImageSize -> {{1, 300}, Automatic}
                                        ],
                                        LineBreakWithin -> False
                                       ]
                                      }
                                     ]
                                    }
                                   },
                                   GridBoxAlignment -> {"Columns" -> {{Left}}},
                                   DefaultBaseStyle -> "Column",
                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                  ],
                                  "Column"
                                 ],
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ]
                        },
                        Dynamic[Typeset`open$$],
                        ImageSize -> Automatic
                       ]
                      },
                      "SummaryPanel"
                     ],
                     DynamicModuleValues :> { }
                    ],
                    "]"
                   }
                  ],
                  SparseArray[
                   Automatic,
                   {29},
                   0,
                   {1, {{0, 2}, {{3}, {14}}}, {2, 4}}
                  ],
                  Editable -> False,
                  SelectWithContents -> True,
                  Selectable -> False
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[3]="
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "Compare to ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "Select",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/Select",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"Select", "[", RowBox[{"s", ",", "EvenQ"}], "]"}]
            ],
            "Input",
            CellLabel -> "In[4]:="
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["SparseArray", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          RasterBox[
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJZIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlT0u\n8b/fSh/MEbxkzz/7xBlWvaf2lwpO3alRfo9T/XAV39lt4Lpzywv7G+7L19VM\ne2t/MiL3X/zXkRcOAyUOAB6jc14=\n              "
                           ],
                           {{0, 0}, {29, 1}},
                           {0, 1}
                          ],
                          AspectRatio -> 1,
                          Axes -> False,
                          Frame -> False,
                          FrameLabel -> {None, None},
                          FrameStyle ->
                           Directive[
                            Opacity[0.5],
                            Thickness[Tiny],
                            RGBColor[0.36842, 0.50678, 0.7098]
                           ],
                          FrameTicks -> {{None, None}, {None, None}},
                          GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          Method -> {
                           "AxisPadding" -> Scaled[0.02],
                           "DefaultBoundaryStyle" -> Automatic,
                           "DefaultGraphicsInteraction" -> {
                            "Version" -> 1.2,
                            "TrackMousePosition" -> {True, False},
                            "Effects" -> {
                             "Highlight" -> {"ratio" -> 2},
                             "HighlightPoint" -> {"ratio" -> 2},
                             "Droplines" -> {
                              "freeformCursorMode" -> True,
                              "placement" -> {"x" -> "All", "y" -> "None"}
                             }
                            }
                           },
                           "DefaultPlotStyle" -> Automatic,
                           "DomainPadding" -> Scaled[0.02],
                           "RangePadding" -> Scaled[0.05]
                          }
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["2", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[RowBox[{"{", "29", "}"}], "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          RasterBox[
                           CompressedData[
                            "\n1:eJxTTMoPSmVmYGBgBGJZIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlT0u\n8b/fSh/MEbxkzz/7xBlWvaf2lwpO3alRfo9T/XAV39lt4Lpzywv7G+7L19VM\ne2t/MiL3X/zXkRcOAyUOAB6jc14=\n              "
                           ],
                           {{0, 0}, {29, 1}},
                           {0, 1}
                          ],
                          AspectRatio -> 1,
                          Axes -> False,
                          Frame -> False,
                          FrameLabel -> {None, None},
                          FrameStyle ->
                           Directive[
                            Opacity[0.5],
                            Thickness[Tiny],
                            RGBColor[0.36842, 0.50678, 0.7098]
                           ],
                          FrameTicks -> {{None, None}, {None, None}},
                          GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ],
                          Method -> {
                           "AxisPadding" -> Scaled[0.02],
                           "DefaultBoundaryStyle" -> Automatic,
                           "DefaultGraphicsInteraction" -> {
                            "Version" -> 1.2,
                            "TrackMousePosition" -> {True, False},
                            "Effects" -> {
                             "Highlight" -> {"ratio" -> 2},
                             "HighlightPoint" -> {"ratio" -> 2},
                             "Droplines" -> {
                              "freeformCursorMode" -> True,
                              "placement" -> {"x" -> "All", "y" -> "None"}
                             }
                            }
                           },
                           "DefaultPlotStyle" -> Automatic,
                           "DomainPadding" -> Scaled[0.02],
                           "RangePadding" -> Scaled[0.05]
                          }
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["2", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Dimensions: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[RowBox[{"{", "29", "}"}], "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Default: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["0", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Density: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["0.06896551724137931`", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Elements:\"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            TagBox[
                             TagBox[
                              GridBox[
                               {
                                {
                                 RowBox[
                                  {
                                   RowBox[{"{", "3", "}"}],
                                   "\[Rule]",
                                   StyleBox[
                                    PaneBox[
                                     "2",
                                     ContentPadding -> False,
                                     FrameMargins -> 0,
                                     StripOnInput -> True,
                                     BaselinePosition -> Baseline,
                                     ImageSize -> {{1, 300}, Automatic}
                                    ],
                                    LineBreakWithin -> False
                                   ]
                                  }
                                 ]
                                },
                                {
                                 RowBox[
                                  {
                                   RowBox[{"{", "14", "}"}],
                                   "\[Rule]",
                                   StyleBox[
                                    PaneBox[
                                     "4",
                                     ContentPadding -> False,
                                     FrameMargins -> 0,
                                     StripOnInput -> True,
                                     BaselinePosition -> Baseline,
                                     ImageSize -> {{1, 300}, Automatic}
                                    ],
                                    LineBreakWithin -> False
                                   ]
                                  }
                                 ]
                                }
                               },
                               GridBoxAlignment -> {"Columns" -> {{Left}}},
                               DefaultBaseStyle -> "Column",
                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                              ],
                              "Column"
                             ],
                             "SummaryItem"
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              SparseArray[
               Automatic,
               {29},
               0,
               {1, {{0, 2}, {{3}, {14}}}, {2, 4}}
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[4]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"Select", "[", RowBox[{"s", ",", "OddQ"}], "]"}]
            ],
            "Input",
            CellLabel -> "In[5]:="
           ],
           Cell[
            BoxData[
             RowBox[{"{", RowBox[{"1", ",", "3", ",", "5"}], "}"}]
            ],
            "Output",
            CellLabel -> "Out[5]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Separate a ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "Dataset",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/Dataset",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "dataset",
               "=",
               RowBox[
                {
                 "Dataset",
                 "[",
                 RowBox[
                  {
                   "{",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     RowBox[
                      {
                       "<|",
                       RowBox[
                        {
                         RowBox[{"\"a\"", "\[Rule]", "1"}],
                         ",",
                         RowBox[{"\"b\"", "\[Rule]", "\"x\""}],
                         ",",
                         RowBox[{"\"c\"", "\[Rule]", RowBox[{"{", "1", "}"}]}]
                        }
                       ],
                       "|>"
                      }
                     ],
                     ",",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       "<|",
                       RowBox[
                        {
                         RowBox[{"\"a\"", "\[Rule]", "2"}],
                         ",",
                         RowBox[{"\"b\"", "\[Rule]", "\"y\""}],
                         ",",
                         RowBox[
                          {
                           "\"c\"",
                           "\[Rule]",
                           RowBox[{"{", RowBox[{"2", ",", "3"}], "}"}]
                          }
                         ]
                        }
                       ],
                       "|>"
                      }
                     ],
                     ",",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       "<|",
                       RowBox[
                        {
                         RowBox[{"\"a\"", "\[Rule]", "3"}],
                         ",",
                         RowBox[{"\"b\"", "\[Rule]", "\"z\""}],
                         ",",
                         RowBox[{"\"c\"", "\[Rule]", RowBox[{"{", "3", "}"}]}]
                        }
                       ],
                       "|>"
                      }
                     ],
                     ",",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       "<|",
                       RowBox[
                        {
                         RowBox[{"\"a\"", "\[Rule]", "4"}],
                         ",",
                         RowBox[{"\"b\"", "\[Rule]", "\"x\""}],
                         ",",
                         RowBox[
                          {
                           "\"c\"",
                           "\[Rule]",
                           RowBox[{"{", RowBox[{"4", ",", "5"}], "}"}]
                          }
                         ]
                        }
                       ],
                       "|>"
                      }
                     ],
                     ",",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       "<|",
                       RowBox[
                        {
                         RowBox[{"\"a\"", "\[Rule]", "5"}],
                         ",",
                         RowBox[{"\"b\"", "\[Rule]", "\"y\""}],
                         ",",
                         RowBox[
                          {
                           "\"c\"",
                           "\[Rule]",
                           RowBox[{"{", RowBox[{"5", ",", "6", ",", "7"}], "}"}]
                          }
                         ]
                        }
                       ],
                       "|>"
                      }
                     ],
                     ",",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       "<|",
                       RowBox[
                        {
                         RowBox[{"\"a\"", "\[Rule]", "6"}],
                         ",",
                         RowBox[{"\"b\"", "\[Rule]", "\"z\""}],
                         ",",
                         RowBox[{"\"c\"", "\[Rule]", RowBox[{"{", "}"}]}]
                        }
                       ],
                       "|>"
                      }
                     ]
                    }
                   ],
                   "}"
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:="
           ],
           Cell[
            BoxData[
             GraphicsBox[
              TagBox[
               RasterBox[
                CompressedData[
                 "\n1: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\nC+16p39hwgC+xlp3qhdCaUb88aT0cR1/pfWCc/rXrPZIpzH9qb+GBu+lGelE\noMgAmOvs3m6DNNoaOdr9QZTB1xv6JNHMjBQZADMj6W2kzxX3IyZQi4eiH10g\ngf3ISQNgZuQqgdJeNIk3c7zJjFwNUNqLxM7MiH0OkRm5AqC0F4mdswakAzSb\nKt9utxV/fjkwI8KMjJN+LLcoKelAvunFEWFGjkBpLxKrfYE/l1KRkXafP0lh\nRoQZIZMwIwJmGyixITAjAmYbKLEhMCMCZhsosSEwIwJmGyixITAjAmYbKLEh\nMCMCZhsosSEwIwJmGyixITAjAmYbKLEhdDKy3++f8djtdqpdv577RNYASmwI\nGoo0I9aAhBDHQuEZYT9y9UCJDaHTjzxDlqlQ2qHEhvDMMTuYbaDEhsCMCJht\noMSGwIwImG2gxIbAjAiYbaDEhsCMCJhtoMSGwIwImG2gxIbAjAiYbaDEhsCM\nCJhtoMSGwIwImG2gxIbAjAiYbaDEhsCMCJhtoMSGwIwImG2gxIbAjAiYbaDE\nhsCMCJhtoMSGwIwImG2gxIbAjAiYbaDEhsCMCJhtSsU+Pj7e399vNpvz/gvw\nmyPb7Xb9nRrqMvLx40dtMdsCT9uwle0yx2BGxrA96Pv7j4QbQI+gx/FNFfsH\n9NNYf3vWiow8PDzYhhTpaTe9zQQzMsbt7a1e37u7OzWw38DDDdA/YH/3q6en\nJ30L+7V0++8VKM2Ib8mt7aaRVyG2HdhNU3uUd2BGxuhvRBVuAD+gllLWj1gw\nBzeJsw0W9a0r3qiaoozYNqnaJuk+y9rxmaj+3uWtwIwM0t9XdwkDaEb0D/XI\nnRcH94k7y0a9pf3IYK3oG3m3skd5h5PaVbLd4sYGjPbTJsZl+RkZ3J99CQP0\nD6iv2AE72WkiI2MMKmqFHO16XQZ7f/k8sG2lG52ZkTHCDTBYvzEj5yJHu1XC\nOmbs/8gKg1Z2WM6/0H4zzzlsrAHGOqZ2M6JCxvzTBDna1TA2qdIfmdrrrdSZ\npf1ITv8YawA9mg1w9OZTfUqBhGTEbqR9Ra1QNKfXkdlWoSUlGTFpOTftEAPY\nLJlPag0ezbu2NYd+8zNi0V5/ZSeQTO1+t0yV6mVtqNCSkozYEOzkYkSUAW4S\n7u7uxqZHLERrLpHMzIg2i02Pr7ysE0u+drtA6XqZyW+l0JLswZcFRPVOOz/Q\nADY3qO9rtevYuqTdqey+tM74d2ZGNO/rr+mEk69dnZDqtevVUKElJZN4+vVk\n17CQAaydB0d/cmx2y1H6eMxyzMmIVaEnbzWXT8VUj0nWa9RWoSV5YlWRmXB6\niLGoAfzgndfTJct1noCqzojPhbYeEClcZ7drZ1fHLlZDhZZki/UiauwJk6UN\n4I9Tdl63nmvNCaK6jHj7tGWPMYq02xDVbp7NFVoyo7BMCTTA2EDGJkP688kW\nnDWfkK/IyJUFRMqf1/JRanOFlpSvj/Rdmm8A/U1tpYmOxopVjWHnd3zE0ekv\nzrISV5oRax/zxpsh1v8IzHxKM2JXtq2lQ6c0Ize957UyDeDj7okVFs+CfrUH\niRWrpgYLuctfZ08/cTNGi4+jlGbEH4htrtCSeRkpMoBnpD+mSNHG9Kd8UzQI\n/fvt5WdEz3Dw1oHWj0j2+toFMicjpQbQ9rG69OR76V/5Bxv1mzEXXX5GrpVS\n7T4DfN03hP7nRyq4vb0N7G2ZkXNRN+/dn7pvgiKxMzNiDRW40mcHZEbWp0i7\nDzMb/Qh/kVirlCpMbp9Ki72T6DFtOL/yXCIzInm20Whsj1hAVr6VBVJ0oc3n\nRmlStKG0uaJWGNPh/MolLjMiebZJZ2lyHmS6WIoutMr020JpRmKbyCcS1+++\nmRHJs43eu2zWpcXJ7RTkC10HMyJgtoESGwIzImC2gRIbAjMiYLaBEhsCMyJg\ntoESGwIzImC2gRIbAjMiYLaBEhsCMyJgtoESGwIzImC2gRIbQicj+/3+GY/d\nbqfa9eu5T2QNoMSGoKFIM2INSAhxLBSeEfYjVw+U2BA6/cgzZJkKpR1KbAjP\nHLOD2QZKbAjMiIDZBkpsCMyIgNkGSmwIzIiA2QZKbAjMiIDZBkpsCMyIgNkG\nSmwIzIiA2QZKbAjMiIDZBkpsCMyIgNkGSmwIzIiA2QZKbAjMiIDZBkpsCMyI\ngNkGSmwIzIiA2QZKbAjMiIDZBkpsCMyIgNkGSmwIzIiA2QZKbAjMiIDZplTs\n4+Pj/f39ZrMp+gfbN0e2222LW311qMvIx48ftel897p2NxowmJEx0k1C070V\nThrA/6q/N25zVGTk4eHBNqRIaW6b8hRmZIzb29ub4/7pmoh0U+mTBnh6etLs\n2K+1uLNqSmlGfJtg7UntNmLN2HRMmJEx+vtGFRnAti/UiAWe//pUZOTly5ed\nfWq83RotPpmRQQb31S0ywFm2wQ2notbql5e+F3OjezxlavcNxPs0JDz/Qvf3\nZzfyDQCbkUGsibRqDT27lcjUrtf6ZoSG9tidn5FBBg3AjDjemO/evYs+wTWo\n7kesFG9ro/aigiEzI2MGYEYMbRazihalC5zgGtRp93K9rTtDaT+io4/pX5sw\nQOYRLpzqjOhddLvd+pxGuwGR2oxY6VW6I/PZyRdriyNjvUCOAbwnanqJpDoj\naTV+d3fX6IyWUZER2669rSrLyBdrN4Gx1Y1MA1iIml4imdOPKNqMtk6kXxsa\nt3Yo1a5+MNVtVVlGjli9lBYQdfhYF5BpAG0iy5F2Og3N/qWEjNntpnr181pO\no1WWkSPWBOrXzBpp2gAaE8tR6y02c+7XVpFarD2kMCO2dqzj0EZr7Byxes83\nV+cPM8cMoK1k5Za2WKOVRlRG/OG30LNbiaLpUDNPo2WDZItVperq/NpgzAA6\nVLmaKZ3MphsbfOmdx4rS+FNcnvyM2BVv98k0KRFrFVTnaatSA1hwrmNKJ6fp\ntJ60RuuUGV5wNnq7yLSN3SrbrbKM/IzY6kZq+1ID2IC90TunU5QRbwr9qg1l\nMxt2a71p+ZMCOdq9ynLhKQ1V2qUZScunUgNgrrNrp+kPeaZoO7Tbn+ZoH1Sd\nyl/rZOcyJyNSaADMjBjaGv7wkn7TbjqMHO0TD/3i9CNOpgGQM3JlQGnPFzv4\n+ZEimJGrAUp7kdiZGbG1JGbkCoDSXiTWlkjq1sd1/H4FU+XCjByB0l4k1iZ7\njaKkpMP5qxmuQvmkA5T2IrHaF/hzKRUZaff5kxRmRJgRMgkzImC2gRIbAjMi\nYLaBEhsCMyJgtoESGwIzImC2gRIbAjMiYLaBEhsCMyJgtoESGwIzImC2gRIb\nAjMiYLaBEhtCJyP7/f4Zj91up9r167lPZA2gxIagoUgzYg1ICHEsFJ4R9iNX\nD5TYEDr9yDNkmQqlHUpsCM8cs4PZBkpsCMyIgNkGSmwIzIiA2QZKbAjMiIDZ\nBkpsCMyIgNkGSmwIzIiA2QZKbAjMiIDZBkpsCMyIgNkGSmwIzIiA2QZKbAjM\niIDZBkpsCMyIgNkGSmwIzIiA2QZKbAjMiIDZBkpsCMyIgNkGSmwIzIiA2QZK\nbAjMiIDZBkpsCMyIgNmmVOzj4+P9/f1msznvvwC/ObLdbtffqWF+RrQNbV+8\n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\nwfrzeINUG2Bs1CMRGck5gg3qJ+4GFfNag6+b0kVXgpajKCO+QGB9SluFlswo\nLI1wA9i79JvRa63qSWDv2qaPcPJ3ijJicrQj7pSp/sQmyHO/doP11ljy1OLJ\nF+tLIf5KqQG0c9E/mR7U+MJTeif3+qcz3M45YOf8p7s2n6uc+J2ijGi3a3L0\nqz32qc3l03T5teulUZoRG4a0tXTolGYk9ViRASxQJ6eVJBnvd+Z+9V3S5s0/\noGGXaTojS6yza5fU//iAapk5j31eSjPiZUBzhZbMfl4r3wBu6ZxBiqfP6TwG\nXHpASW5lJzWGP/crx4byD6OpukaX152K+YqJkeaFMzMjRqYBtH2sR8g8Nz2U\nH3P+AfX87bGW6d9ZKCNXRql2nwFu8TNl+WLHPj9ShJZPsb1t7AGZkUxKtds8\nZ/8DO01QJHZmRqyhQh67WvSAzMhJirT7mmyj/05IkVgrbCo8aZ9KC7yThB/Q\njmmLI9OTk8yI5NlGo7E9YgHJnFq5QIoutE8NVSRFG6o/SzyH2AOm8wPTNTMz\nInm2SSdVKv69jsuh6ELbI+sTzzJN/23N+a11QJ89O1kPMCOSZxv/BzcaXSd1\nkC90HcyIgNkGSmwIzIiA2QZKbAjMiIDZBkpsCMyIgNkGSmwIzIiA2QZKbAjM\niIDZBkpsCMyIgNkGSmwIzIiA2QZKbAidjOz3+2c8drudatev5z6RNYASG4KG\nIs2INSAhxLFQeEbYj1w9UGJD6PQjz5BlKpR2KLEhPHPMDmYbKLEhMCMCZhso\nsSEwIwJmGyixITAjAmYbKLEhMCMCZhsosSEwIwJmGyixITAjAmYbKLEhMCMC\nZhsosSEwIwJmGyixITAjAmYbKLEhMCMCZhsosSEwIwJmGyixITAjAmYbKLEh\nMCMCZhsosSEwIwJmGyixITAjAmYbKLEhMCMCZptSsY+Pj/f395vN5u3bt5sj\n2+22xQ28qpmTEW2oh4cH+9fUm9teNoUZGcN3vLW9FdJNQtvdXaKUuoxo+/iW\n3FewKwczMoZtkn53d6dh0Vvi09OT9ia2HUmL+6XWUZER31/eWs826bZ20/9d\n/pTjYUbGGNzmyfYQbPRaV1CREetBOttnW8/SaJnKjAwytq9uzl6010RpRrzd\nmh6AdMjU7juS92loc6v8jIztz86MTP++llXX189maldX3IzQ0B67zEgppRmx\nkUhDlsihuh+x1mhro/aigSczIuUZsUaz0sLnftU8jY5EjLrxSKNlZ2k/ogPP\nzNevlbqM2JbEnXqjYqf7C6EuI1Z6Nac6X6wtjvT7C+9fGp3qL6UoI16geo1h\nJYfeUuz1RufMKzJi27W3VWUZ+WLtJjB4Tc0AjV7uUuoy8uLFi85Mjk0I6+vL\nnu4ylGZEqyxbD2qryjJyxNpjJ3YTGOwsVLg5QcuJhub06ijKiHeyfW80Wpwb\npRlptMoycsSawOkHJ/RC242i0XbIZ86YPf9HF05RRmyVWcvLRqvxHLH+4ISW\nB4O/4M9aaDtc2SRnn9KMTNSoCBlRb5h5WpRpZIpVpTbM1JF7/6d3d3cTCboy\nSjNiY9X+vJ/XWi1OAudnxLyht9nlT2op8sXatR5cL273WldQmhG/kab3EO95\nG11XytRuc6HtVllGfkZsiqY/D2MD9kbnZyoozYgknynozP1qo7U4YJc82/jN\nwR517tBQTV6aEa6zV2REjjExwzidx4DbIkd7//MyKQ0ZhhkppS4jhibF7qKD\nw7qGyNE+8dAv+5HrZk5GrgYo7fli+fkRgxkRZmScwYzYChEzAgWU9iKxNhuT\nrqR//PjxCibAi2BGhBkZJ/23UNLvcRZHhBk5AqW9SKx9CMKfy/I5zIbmKObD\njAgzQiZhRgTMNlBiQ2BGBMw2UGJDYEYEzDZQYkNgRgTMNlBiQ2BGBMw2UGJD\nYEYEzDZQYkNgRgTMNlBiQ2BGBMw2UGJD8Bb78OHDbrfb7/fPeKhqHO1QYkOw\nFtOAPB/DQggZRAPy6dOnM8eVkAtGA3Luoo8QQgghhBBCCCGEEEIIIYQQQggh\nhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQghZ\nir8BnAoQ+Q==\n    "
                ],
                {{0, 208.01}, {134.01, 0}},
                {0, 255},
                ColorFunction -> RGBColor,
                ImageResolution -> {143.99, 143.99},
                SmoothingQuality -> "High"
               ],
               BoxForm`ImageTag[
                "Byte",
                ColorSpace -> "RGB",
                Interleaving -> True
               ],
               Selectable -> False
              ],
              DefaultBaseStyle -> "ImageGraphics",
              ImageSize -> Automatic,
              ImageSizeRaw -> {134.01, 208.01},
              PlotRange -> {{0, 134.01}, {0, 208.01}}
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 "dataset",
                 ",",
                 RowBox[{RowBox[{"OddQ", "[", "#a", "]"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[
            BoxData[
             GraphicsBox[
              TagBox[
               RasterBox[
                CompressedData[
                 "\n1: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\niIfuCekVPmHLy5x6VqZQx9wxqp2CoXcAzoXa73zXfM+SHwPPajFnrNFbUhwx\nqp3ipHd6Kr3dmeB0mDnTs4Ywj4fecgfP2g4S7TwJRpmSuyVsZEdHR363cAsr\ncO53FY6BZ2mBZxW089IJJVf3Le4o9trZ9pHXc0nSZWzjYWjgBs/aDhLtFEK8\n3Jk3nXJX0PVuf9U4q9yzFXqW0+5xZguelTtL869hLUa1U7rxLrXu1gJ+3em8\nqHacJckX23igs/ECGfUNpl0SPKsCQu08KcF3KOSvz+OkekZYgVl4uX81Gg+5\n3xihxSRM9iweaHRLiiPkeyZbMl1PDCZNPZckHWMSD7wLMW8a7D2bMIXhWRWQ\naz87O+MvlAdZrvcbJ3EFZrHl+zIk8cAZ4foWrdU9i9vZ+93ZEu15+NBUSnXV\n78Rg0tRzSdIlu3g4NKAqN7TeIUlheFYF5Nrpq8z333lfmkmCCnx9fc25Q7Fa\nTgpJPOStLFRznK7FrOtZeYLate8nsXaukM0bZlm+04nBJKvn8qQzjAfeikmf\ny/Vt6D5lSQrDsyqg0r6PmzqZ0QrMuUP/jvbihPFAMc9J4XQdcF3P4mG+332q\nGfkzQJp6uWD6nRhMsnouT7qF4oGbfajEjaYwPKsCcu28e5C/MuoFVbi2RRmt\nwNSbYrGjs+WSeGje/+j06UMrehYvW4z2vV0g1N5aQOHs8zsxmGT1XJh0i8ZD\nPnnrdUkKw7MqINTOE4O8ub21h9Apkgqc5x/K40pJPOTVwImXuwHW8qy893sH\nhpU02rl4cnnkaul3YjCJ6/lo0i0dD/nxvK3XJSkMz6qAUDt/X+xTeQ+h35uz\nkrgCt6ZoepHEAx8QocUkyOt2LlCuy3UTuXaOKx5NeJ8YTJp6Xkg6w3gYWgjj\nvS7d/fOSFIZnVUCivbs/J087V7nGRVDdn1W+AWQ0HnZwV1Faw7P2Z1hJOcbM\n2wy8Twwm/f1Z3XyRxwMdSY1WGIjxXCvZYuuYvGLVGk8JU3hTnpUfr9d8vlx+\nxekKRZJp7+7PyQ+x9LsZY+azm1TxgOdgtBA+b5BblWr1ZR9OB60qz2ouIns3\n7vnPGxTGQ95HUci47E30Lz8onuDZpN6JR4/PwcjN2IvfcjSqPT+4qfd1v6sM\nMz1LFQ/wrBajdbv5k39DOL1lQOVZuXPofWIwzfMsVTxkz+qmbRNq29zbbCVv\n7w8PSVJ4U57V7Fd32fE4iwX29vEKb20fw3HWaDzAs1pIfouk0LxxxllJfIPt\n9pnjWdp4oObi2aHRz6K/yj98TP8xFFQePWuvhNU+//ez5MCzWoT9Damk1J53\nvDs16CZzfj9rAicnJ4aDU3jWdgirXfs7xXM+i6fi4VkZeJZqn/8ObodMk36n\nePJncbtd2t2PI0xheFYFwmqXV+CZ96NRV5nXdr3v+4JnmSDXnvcJ+F16aKKq\n55OTjn8009bo5SkMz6pAWO3yCswpwGiTqLm26316B55lwqh2sqqLB9iwvA/P\nM6p6PifpqN2o9az2hqlSGJ5VgbDa5RWYgj8XkGme5fd5TU3gWSaMam9ue5M8\nec8Lqno+J+lsW0yVwvCsCoTVbliBgwDPMmFUe96S6nQz/xDV6vmKwLMqEFY7\nPEsLPMuEsNrhWYaErdspsHZ4lhZ4lglhtcOzJvP69evLh+ft5Jthw9btFFg7\nPEsLPMuEsNoDehbvpbm+vp68xEZ/SFZ1fHx8dXV1c3OTzxO2bqfA2uFZWuBZ\nJoTVHtCzaFhERkO2NXkX1vkD3dfD1u0UWDs8Sws8y4Sw2gN6VoZ/dlC7qYZ/\ntbD3rbB1OwXWDs/SAs8yIaz2yJ6VHh7zW/4Zvi7kcUN354Wt2ymwdniWFniW\nCWG1B/es+/t77S/owbN6CasdnqUFnmVCWO3BPSs93J6sOtuoZ30bEmoW0v7m\nzZu1L6Q2/KVTdK19IW54+fKlrWcFjDrixYsXpP329nbtC6kNSSbhJH/tC1kQ\nCumanvX8+fPPAAADcLE19KxXr16trQkASzikMc5aFIyz1r4QN2CcZQLGWWtf\nyIJUHmcFXNNJgbVjPUsL1rNMCKsd61nwLBPCaodnaYFnmRBWOzwLnmVCWO3w\nLC3wLBPCaodnwbNMCKsdnqUFnmVCWO3wLHiWCWG1w7O0wLNMCKsdngXPMiGs\ndniWFniWCWG1w7PgWSaE1Q7P0gLPMiGsdngWPMuEsNrhWVrgWSaE1Q7PgmeZ\nEFY7PEsLPMuEsNrhWVrPur6+vry87H0rbN1OgbXDs7TAs0wIqx2epfWsi4uL\nq6ur3rfC1u0UWDs8Sws8y4Sw2uFZJycnr1+/Fp7q/v7++PiY/u19N2zdToG1\nw7O0wLNMCKsdnkWDpvPzc8l5yNrI4K6vr4cOCFu3U2Dt8Cwt8CwTwmqHZxGn\np6eXl5dDoyeGhldHR0c3NzeFY8LW7RRYOzxLCzzLhLDa4VkMjbYOh0NhDEVu\ndXFxUZ5IDFu3U2Dt8Cwt8CwTwmqHZ6WHrYA86Xd3d1c+FTkXHTn0bti6nQJr\nh2dpGWoxSq7Ly0v54nIKXLdTYO3wLLah8sRgk7Ozs6dPn/a+FbZup8Da4Vla\neluMrOrwltGuYyZs3U6BtcOzCh7Uy9XVFe7P6hJWu8qzKNLOz89PT08Ls9C9\nnD5wcXEhr+ebpbfFqOuYPYtkCk8Vtm6nwNq1njU56WxRpbD5czDI5nrfktdt\nGtZRS14+QC0pH+VtFnjW6JH0jeey3Or2jMZD/sOjoyPv0TLUYpTRrHHoOTNd\nptXt3NSuOwDwLMnBhaRrHjMzHvhBE73kc6pSeGvPbqKRGl324e+R9y23CTxr\n9MiTkxP6onlc38wOSTxQ1FFe8GFDt7R7obCeVa4tXSbUbWr53NrlbcAbB54l\nOXgo6TIm8ZC7W13yOVUpvCnPolFq7kyyEXOrercteNbokb2LNap4oJjnBLQU\nUJ2hFstd4kXXs5rlBZ7lEZVnjUaUSTywE1EuF8ZZjDCFt+ZZx8fHrcbJhcvv\nZAU8q3wYfbP8FbdeV8UDj0TkU2fbpNVipJFvJOHEV/XctHWbagg3ILU5PMsp\ncs8aSrqMVTzwp0i2vApTeFOelR4WL7qveO/4SbQXZn39Chd6Vp746r4lj4dd\nehbXjcPDPL922lNVt/PWxPwffqMuCbTzMk23SamSc9I5XRiVe1Yh6ZJpPJSd\nsXtJ7jxr6DII1Q7GTSHRXpj1XXdLzxzme1YvvfGwS8/i27KmlQuVZ/GkK4/j\nInhWLsWtKOJRvN8ZZivPsoqH3MOUHLwbz8ptq7qhclNMG2dx2BRu094+Qs+a\nENjdeNilZ81B7llUmpqRFsGz0tsxbPOx3mxkNKT1uwwh96xC0hnGA2clnYqa\nlO+Eon+HKvk+PIsfvXt4WMJT/eGmmKA9zzb7deqkHGdR9Rg9YSEe5CfZMvU9\nq9sHCOJZ/DsUh8ZWTJ7rkO/M3CDacVY3X2zjgc/W3fpLTd2tbMIU3qZnUdjw\nAwxZoGvDSpM8awfpk8QVmDfFFfpXknjI/UanKxFMZc/q1u0UxrPS28Dje4Jy\nwXQdP3LP6k0683jIDtjd+tu9FUuYwtv0rKYjn52d+R2qM1rP4ocSu54VZIQV\nmA26sMdAGA+cDq5v0arsWdSY3UiL41npbQvwsyAOnhfNGbln9SbdEvFATdr6\nW97TfujbBytJ4W16FjsynYoHlfSv330ISak938fnelaQGa3A9LVy7pQfaymM\nh7ywTrngtOTW9Kw8ymj1AUJ5VvO2We+LoUnmWUNJVzMeeK9LdxpQksLb9Kwm\nPOhw3QVSad/HrCAzWoFZLP0rn5ApxwPFPJcgpw1Y07O4oahwtTb/5AnYy4eH\nZc2/kvqo9kzybJjrCpOReNZQ0tWMh3yPfPet0RTevmelt6bsd65Mrp1Hzd4n\n1TOjFTjfLatashyKB2o0nlugBnRabGt61kGA06GH3LO4JudyXeHaFkXiWUNJ\nVzMehnbaS1LYhWcVTNkF8vupOZZcT8s0kVTgvOwr7+UOxUNem5h4uRugpmcN\n3cMeZ5zFE4M8G9bde+AR4XpWb9LVjIe8pNV6XZLCtp7FW5F735LU7aGlN75f\ngEJLdTHbQehZ/H25frJiC2EF5um+7o2c2njgLHC9Y2cLv1PMzei64yTUzhnH\nPjW0muML+R6MoaTrMicehv6K5ye7ny5J4YJGMqAJI8HuA+KY0brNhk4qWtNi\neXrTb/9Z4lmcMruZFWRU92e1PEgbD/mGUKuLXwV4lgkS7TnqcoDlhZ4q17gI\n2vuzJPkyFA80ViLjK9QrtkXqYbaOyY8MbZ1TmMIFjVQuJmwbps+lwtvVMlq3\ncy2if+mjeVjKHaGD859GGtWeZwWz8CZO52fSvGc3aeMBz8FoAc8qa+fJsWaJ\nyzfy+92MYfXspia98ZC3QhUyjpoxpzBPLZJ/5R0vQ48FmPYcDCoXVBwmpz8V\nE742utS8YVsy1qCYyRbchK7E9YB9VHuv6qb8mldryMznDariAZ7VAp5VXss7\n9O21zlsynPaQ63tW+QyUp90nqQ498HmaZ3GJWOKnluV7MEhmfvge/Ydrt2JG\ntRce6h52nJURxgM8q8Vkz+Kmdp13wv0nvbdAFt7aPkt41lA8kO/woGn0DM0U\npsHXUH/A5HmDhoT9DakUWPvM389SAc9qEfY3pFJg7Ya/nyXh5OTE8Amf8Kzt\nEFa79neK53wW756FZ2XC1u0UWPuE3yme/FmccYZ3BwhTGJ5VgbDa5RV45t0x\n9/f3+7hTAJ5lQljtqno+Oeko3Xjhz/AubHkKw7MqEFa7vALnWxcnJFFzedf1\nKkyCZxkRVruqns9JuqOjo+4m9smoUhieVYGw2uUVmPeaTntUIIe63+c1NYFn\nmRBWu6qez0k6232VqhSGZ1UgrHbDChwEeJYJYbVXq+crAs+qQFjt8Cwt8CwT\nwmqHZxkStm6nwNrhWVrgWSaE1Q7PMiRs3U6BtcOztMCzTAirHZ5lSNi6nQJr\nh2dpgWeZEFY7PMuQsHU7BdYOz9ICzzIhrHZ4liFh63YKrB2epQWeZUJY7fAs\nQ8LW7RRYOzxLCzzLhLDa4VmGhK3bKbB2eJYWeJYJYbXDswzhuv1tSG5ubkj7\nmzdv1r6Q2vCXTtG19oW44eXLl7aeFTDqiBcvXpD229vbtS+kNiSZhJP8tS9k\nQSika3rW8+fPPwMADMDF1tCzXr16tbYmACzhkMY4a1Ewzlr7QtyAcZYJGGet\nfSELUnmcFXBNJwXWjvUsLVjPMiGsdqxnGRK2bqfA2uFZWuBZJoTVDs8yJGzd\nToG1w7O0wLNMCKsdnmVI2LqdAmuHZ2mBZ5kQVjs8y5CwdTsF1g7P0gLPMiGs\ndniWIWHrdgqsHZ6lBZ5lQljt8CxDwtbtFFg7PEsLPMuEsNrhWYaErdspsHZ4\nlhZ4lglhtcOzDAlbt1Ng7fAsLfAsE8Jqh2cZErZup8Da4Vla4FkmhNUOzzIk\nbN1OgbXDs7TAs0wIqx2eZUjYup0Ca4dnaYFnmRBWOzzLkLB1OwXWDs/SAs8y\nIax2eJYhYet2CqwdnqUFnmVCWO3wLEPC1u0UWDs8Sws8y4Sw2uFZhoSt2ymw\ndniWFniWCWG1w7MMCVu3U2Dt8Cwt8CwTwmqHZxkStm6nwNpVFfjp06fn5+en\np6fX19dLX1hlTh+4uLi4u7srHwnPMiGsdm09byadPErXZWueRU13OcDGW7IA\nPGv0SMqdw1vou86vLxcP9OdXV1d8qtevX087w9C1tS4ySzs6Orq/vy+cc0XP\nmt8g2wGeJTm4lXTyKF2XrXkWGf1hgJubm6UvciHgWaNHnpyc0Fd8dnZGedQ0\noyXigfKR+pats9EHafOULmDo2jJc/OlIMl8qBfQK+ULhnKt4llWDbAd4luTg\nVtLJo3RdtuZZ3GKUQRhn7QB5BeY62f2KzeOB6jCnKmcrnefi4oI/hf6v6lSF\ncRZbbXPAmB7GjKOfUt+zDBtkO8CzJAf3Jp0kStdla57V7J3uBnhW+TDKGv7e\nu2+ZxwMPKI6Pj5vn5IGGVaeIzkM1n4yg9TqPy8jOCn9b37MqNEh94FmjRw4l\nnSRK12WbnrX0xVSmrJ3qQ3ngwO96nKgRVuA8ydZ9yzYecp4u2imiPmrvR2zQ\ns+o0SH0k2gtLpX6XIeT1fCjp4FkZiWdRWQ7oWentqs3FxUX3LV4npW7wkhe4\nFDM9yzweqIWXnvdgLTRIGXprU55VoUFWQaK9sFTqd+cqPMsQiWdxc52cnOQt\nTPTvDnqAo9p5Dvno6Kj7Fk/d9NrZ9hFW4CFvMo8HXrhZtCJxJewdMm/Qsyo0\nyCpMG2dxa3QndR0hr+flpINnJY1n8fpvE2pA1841qp3ih1XTqKr1Fr/uVL5q\nnNUdS5rHA/85z/xkH6TaZbVwU873IZlNKnvW0g2yFhPWs/YxTaodZw0l3ZYn\ndjboWZz1zZ7PYfO3DJSRaOfxVGtOyfXEYBJXYJbZLfXm8cB/S3/Ic2JNWnv8\npsErWUPDltyzLVz5Kp61XIOsxQTP6t3q6Q55PR9KOkmUrsumPCs9tGRrAZTn\nzQ5u58eSTDv17rqlmCuJX+HCCszloveWEMN4yA6Yp4DYB6lLwK/PvCdFkuz8\n0YUPqulZSzfIimg9i5QenM8KMvJ6Xki60Shdl615Vi95O675VdVBqL27uMDV\nw+9kxWgF5ifGcLmQ9+umxUMu0dQxaPkgn7B3PVEOm2l5IYB7Jmy4vZvTVvGs\nhRpkRVSexfcmuE60jKSejybdaJSuiwvPys8YMb+qOgi1c2cvb+LiyPHr1ElQ\ngTl3tI9cmBYPeRzULU0maxnC3TL0EVwhe6ehanrW0g2yIirP2sesICOp55Kk\nK0fpurjwrML9Oy4Qam9NLl0+PAHM78RgElTg/MiF3s3hQ0yOB/6r3q5j4S0h\nPCgu78HLD52gg3uPXHEPhvyt7SP3LB4d09ex2eUbFZJ6Ppp0o1G6Li48Ky9h\nmF9VHeTaua/OccJh47Sjy0gqMCUIV/vunskhJsdDYQ5/fomWnIE3aRQMurJn\nLdogKyJ/bhVXb6cyuwjreTnpRqN0XTblWUORw5nl985HuWflO5J4zOV6YjCJ\nK3BrUjRjHg/8Qd1WzVNhk/d456Ff+Qyjx1T2rOUaZF2EnsXF2fVURgt5PR9K\nuiSI0nXZjmdxG1L8tAbp+YnTfvtCqjEm939yayx9bYuiuj+rteKvjQcafNGf\nlGd4cr+62YfMMyGt7ROSE7YklId+eWto4ZjKnqVqEEdItOcbSfYxK8ho78/q\nRqMkStdlO55FIcTpQ//yc7ypXuVtt5sdqEpQeRYvY+1jI9OcZzep4oENTlJm\n8/6N1tZu+pRma8tPyFy+/fmhUZmbeg5GEjeILyT7T/Kz67vPG9zgIo4QPLvJ\nEEndptFo9yFgFFqbvVNAiMqz8rSM94nBNPt5g/J4yBZTdg0mu2Gm9VRz7QlT\no6cxKnNrnpVkDeKLUe3d3wtrsuWKXQaeZYi8blOlyo8Co2zawchdu/+ksDLu\ni/nPdU/ieKDm4gGC8NroVPmc809IEkb755v1LGa0QRwxqr3wUHeMs+BZTNjf\nkEpK7XnH+2bXQOXM//0sFScnJ7aDU9sTbtyz9kRY7fj9LEPgWULtvJF7B4+R\nSfrfKZ7zWdxuhrdALnRCeFYFwmqf8DvFrRclUbou8KwKyLXn28/9zk40kVdg\nnoWbZhD8o5mGRm9+Qj6nZGc1PMuEsNpV9bybdMIoXRd4VgVGtZNVXTzAhrXl\nTo4KeQXO++6mORe1W3dX/BxsT9hc3y9P+cKzTAirXVXPW0knj9J1gWdVQHhv\nWt6ztINtJ4y8AvPPYUx+xJl5i9meMG/GGx0+w7NMCKtdVc9bSSeP0nWBZ1Vg\nVDv1anjDkt/7pnsxrMBBgGeZEFZ7tXq+IvCsCoTVDs/SAs8yIax2eJYhYet2\nCqwdnqUFnmVCWO3wLEPC1u0UWDs8Sws8y4Sw2uFZhoSt2ymwdniWFniWCWG1\nw7MMCVu3U2Dt8Cwt8CwTwmqHZxkStm6nwNrhWVrgWSaE1Q7PMiRs3U6BtcOz\ntMCzTAirHZ5lSNi6nQJrh2dpgWeZEFY7PMuQ29tbyse7u7tv4/HFF1/E1M5f\n+ps3b9a+EDdwi/3yyy/zM47ijU71zTffrK1pBb7++uuY2kkyCSf5a1/IgrDG\nCk+X4rEGAGAUw3EWALukwjjr+++/X9ufAfCByTTyTz/9tLYOAJaCwnt+jgAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\navJ/m1ONBA==\n    "
                ],
                {{0, 127.01}, {286.01, 0}},
                {0, 255},
                ColorFunction -> RGBColor,
                ImageResolution -> {143.99, 143.99},
                SmoothingQuality -> "High"
               ],
               BoxForm`ImageTag[
                "Byte",
                ColorSpace -> "RGB",
                Interleaving -> True
               ],
               Selectable -> False
              ],
              DefaultBaseStyle -> "ImageGraphics",
              ImageSize -> Automatic,
              ImageSizeRaw -> {286.01, 127.01},
              PlotRange -> {{0, 286.01}, {0, 127.01}}
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Separate a ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "Graph",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/Graph",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " by testing its vertices:"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 GraphicsBox[
                  NamespaceBox[
                   "NetworkGraphics",
                   DynamicModuleBox[
                    {
                     Typeset`graph = 
                      HoldComplete[
                       Graph[
                        {1, 2, 3, 4, 5, 6, 7},
                        {
                         Null,
                         SparseArray[
                          Automatic,
                          {7, 7},
                          0,
                          {
                           1,
                           {
                            {0, 6, 12, 18, 24, 30, 36, 42},
                            {
                             {2},
                             {3},
                             {4},
                             {5},
                             {6},
                             {7},
                             {1},
                             {3},
                             {4},
                             {5},
                             {6},
                             {7},
                             {1},
                             {2},
                             {4},
                             {5},
                             {6},
                             {7},
                             {1},
                             {2},
                             {3},
                             {5},
                             {6},
                             {7},
                             {1},
                             {2},
                             {3},
                             {4},
                             {6},
                             {7},
                             {1},
                             {2},
                             {3},
                             {4},
                             {5},
                             {7},
                             {1},
                             {2},
                             {3},
                             {4},
                             {5},
                             {6}
                            }
                           },
                           Pattern
                          }
                         ]
                        },
                        {
                         GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False},
                         VertexLabels -> {"Name"}
                        }
                       ]
                      ]
                    },
                    TagBox[
                     GraphicsGroupBox[
                      {
                       {
                        Hue[0.6, 0.7, 0.5],
                        Opacity[0.7],
                        Arrowheads[0.0],
                        ArrowBox[
                         CompressedData[
                          "\n1:eJxTTMoPSmVmYGAQBWImKPa/x1p6mOXl/htvux8t+PzYPuNlBOsco/f7412Z\nHk+oPrMfXX776kLfA0du78+NOb1yz5U3GPLnIPL2pTjksyDm26/CYb47hG9/\nEspHl6+NvbFmY+LJPQxg8AHDvejuQ5dHdx+6PLr70OXR3Ycuj+4+dPeg248u\nj24/ujy6/ejy6Paj24duPro8uvno8ujmo5uHrh9dHl0/unp0eQBAEHt7\n           "
                         ],
                         0.022203
                        ]
                       },
                       {
                        Hue[0.6, 0.2, 0.8],
                        EdgeForm[{GrayLevel[0], Opacity[0.7]}],
                        {
                         DiskBox[{-0.78183, 0.62349}, 0.022203],
                         InsetBox[
                          "1",
                          Offset[{-2.0, 1.5949}, {-0.80161, 0.63926}],
                          ImageScaled[{1.0, 0.10126}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{-0.97493, -0.22252}, 0.022203],
                         InsetBox[
                          "2",
                          Offset[{-2.0, -0.45649}, {-0.99685, -0.22753}],
                          ImageScaled[{1.0, 0.61412}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{-0.43388, -0.90097}, 0.022203],
                         InsetBox[
                          "3",
                          Offset[{-0.96315, -2.0}, {-0.44405, -0.92207}],
                          ImageScaled[{0.74079, 1.0}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.43388, -0.90097}, 0.022203],
                         InsetBox[
                          "4",
                          Offset[{0.96315, -2.0}, {0.44405, -0.92207}],
                          ImageScaled[{0.25921, 1.0}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.97493, -0.22252}, 0.022203],
                         InsetBox[
                          "5",
                          Offset[{2.0, -0.45649}, {0.99685, -0.22753}],
                          ImageScaled[{0.0, 0.61412}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.78183, 0.62349}, 0.022203],
                         InsetBox[
                          "6",
                          Offset[{2.0, 1.5949}, {0.80161, 0.63926}],
                          ImageScaled[{0.0, 0.10126}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.0, 1.0}, 0.022203],
                         InsetBox[
                          "7",
                          Offset[{0.0, 2.0}, {0.0, 1.0222}],
                          ImageScaled[{0.5, 0.0}],
                          BaseStyle -> "Graphics"
                         ]
                        }
                       }
                      }
                     ],
                     MouseAppearanceTag["NetworkGraphics"]
                    ],
                    AllowKernelInitialization -> False
                   ]
                  ],
                  DefaultBaseStyle -> {
                   "NetworkGraphics",
                   FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1.0, 0.6]
                  },
                  FormatType -> TraditionalForm,
                  FrameTicks -> None,
                  ImageSize -> {Automatic, 106.17}
                 ],
                 ",",
                 "OddQ"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 GraphicsBox[
                  NamespaceBox[
                   "NetworkGraphics",
                   DynamicModuleBox[
                    {
                     Typeset`graph = 
                      HoldComplete[
                       Graph[
                        {1, 3, 5, 7},
                        {
                         Null,
                         SparseArray[
                          Automatic,
                          {4, 4},
                          0,
                          {
                           1,
                           {
                            {0, 3, 6, 9, 12},
                            {
                             {2},
                             {3},
                             {4},
                             {1},
                             {3},
                             {4},
                             {1},
                             {2},
                             {4},
                             {1},
                             {2},
                             {3}
                            }
                           },
                           Pattern
                          }
                         ]
                        },
                        {
                         GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False},
                         ImageSize -> {Automatic, 106.17},
                         VertexLabels -> {"Name"}
                        }
                       ]
                      ]
                    },
                    TagBox[
                     GraphicsGroupBox[
                      {
                       {
                        Hue[0.6, 0.7, 0.5],
                        Opacity[0.7],
                        Arrowheads[0.0],
                        ArrowBox[
                         {
                          {{-1.0, 0.0}, {0.0, -1.0}},
                          {{-1.0, 0.0}, {1.0, 0.0}},
                          {{-1.0, 0.0}, {0.0, 1.0}},
                          {{0.0, -1.0}, {1.0, 0.0}},
                          {{0.0, -1.0}, {0.0, 1.0}},
                          {{1.0, 0.0}, {0.0, 1.0}}
                         },
                         0.022611
                        ]
                       },
                       {
                        Hue[0.6, 0.2, 0.8],
                        EdgeForm[{GrayLevel[0], Opacity[0.7]}],
                        {
                         DiskBox[{-1.0, 0.0}, 0.022611],
                         InsetBox[
                          "1",
                          Offset[{-2.0, 0.0}, {-1.0226, 0.0}],
                          ImageScaled[{1.0, 0.5}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.0, -1.0}, 0.022611],
                         InsetBox[
                          "3",
                          Offset[{0.0, -2.0}, {0.0, -1.0226}],
                          ImageScaled[{0.5, 1.0}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{1.0, 0.0}, 0.022611],
                         InsetBox[
                          "5",
                          Offset[{2.0, 0.0}, {1.0226, 0.0}],
                          ImageScaled[{0.0, 0.5}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.0, 1.0}, 0.022611],
                         InsetBox[
                          "7",
                          Offset[{0.0, 2.0}, {0.0, 1.0226}],
                          ImageScaled[{0.5, 0.0}],
                          BaseStyle -> "Graphics"
                         ]
                        }
                       }
                      }
                     ],
                     MouseAppearanceTag["NetworkGraphics"]
                    ],
                    AllowKernelInitialization -> False
                   ]
                  ],
                  DefaultBaseStyle -> {
                   "NetworkGraphics",
                   FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1.0, 0.6]
                  },
                  FormatType -> TraditionalForm,
                  FrameTicks -> None,
                  ImageSize -> {Automatic, 106.17}
                 ],
                 ",",
                 GraphicsBox[
                  NamespaceBox[
                   "NetworkGraphics",
                   DynamicModuleBox[
                    {
                     Typeset`graph = 
                      HoldComplete[
                       Graph[
                        {2, 4, 6},
                        {
                         Null,
                         SparseArray[
                          Automatic,
                          {3, 3},
                          0,
                          {
                           1,
                           {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}},
                           Pattern
                          }
                         ]
                        },
                        {
                         GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False},
                         ImageSize -> {Automatic, 106.17},
                         VertexLabels -> {"Name"}
                        }
                       ]
                      ]
                    },
                    TagBox[
                     GraphicsGroupBox[
                      {
                       {
                        Hue[0.6, 0.7, 0.5],
                        Opacity[0.7],
                        Arrowheads[0.0],
                        ArrowBox[
                         {
                          {{-0.86603, -0.5}, {0.86603, -0.5}},
                          {{-0.86603, -0.5}, {0.0, 1.0}},
                          {{0.86603, -0.5}, {0.0, 1.0}}
                         },
                         0.0204
                        ]
                       },
                       {
                        Hue[0.6, 0.2, 0.8],
                        EdgeForm[{GrayLevel[0], Opacity[0.7]}],
                        {
                         DiskBox[{-0.86603, -0.5}, 0.0204],
                         InsetBox[
                          "2",
                          Offset[{-2.0, -1.1547}, {-0.88506, -0.51099}],
                          ImageScaled[{1.0, 0.78868}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.86603, -0.5}, 0.0204],
                         InsetBox[
                          "4",
                          Offset[{2.0, -1.1547}, {0.88506, -0.51099}],
                          ImageScaled[{0.0, 0.78868}],
                          BaseStyle -> "Graphics"
                         ]
                        },
                        {
                         DiskBox[{0.0, 1.0}, 0.0204],
                         InsetBox[
                          "6",
                          Offset[{0.0, 2.0}, {0.0, 1.0204}],
                          ImageScaled[{0.5, 0.0}],
                          BaseStyle -> "Graphics"
                         ]
                        }
                       }
                      }
                     ],
                     MouseAppearanceTag["NetworkGraphics"]
                    ],
                    AllowKernelInitialization -> False
                   ]
                  ],
                  DefaultBaseStyle -> {
                   "NetworkGraphics",
                   FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1.0, 0.6]
                  },
                  FormatType -> TraditionalForm,
                  FrameTicks -> None,
                  ImageSize -> {Automatic, 106.17}
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         "Maybe support this for images? It's kind of weird and arbitrary.",
         "Text",
         "Excluded"
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              RowBox[
               {
                "selDiscardImage",
                "[",
                RowBox[{"img_Image", ",", "func_"}],
                "]"
               }
              ],
              ":=",
              "\[IndentingNewLine]",
              RowBox[
               {
                "Module",
                "[",
                RowBox[
                 {
                  RowBox[
                   {
                    "{",
                    RowBox[{"mask1", ",", "mask2", ",", "i1", ",", "i2"}],
                    "}"
                   }
                  ],
                  ",",
                  "\[IndentingNewLine]",
                  RowBox[
                   {
                    RowBox[
                     {
                      "mask1",
                      "=",
                      RowBox[
                       {
                        "ImageApply",
                        "[",
                        RowBox[
                         {
                          RowBox[{"Boole", "@*", "TrueQ", "@*", "func"}],
                          ",",
                          "img"
                         }
                        ],
                        "]"
                       }
                      ]
                     }
                    ],
                    ";",
                    "\[IndentingNewLine]",
                    RowBox[
                     {"mask2", "=", RowBox[{"ColorNegate", "@", "mask1"}]}
                    ],
                    ";",
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "i1",
                      "=",
                      RowBox[
                       {
                        "SetAlphaChannel",
                        "[",
                        RowBox[
                         {
                          RowBox[
                           {"ImageMultiply", "[", RowBox[{"img", ",", "mask1"}], "]"}
                          ],
                          ",",
                          "mask1"
                         }
                        ],
                        "]"
                       }
                      ]
                     }
                    ],
                    ";",
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "i2",
                      "=",
                      RowBox[
                       {
                        "SetAlphaChannel",
                        "[",
                        RowBox[
                         {
                          RowBox[
                           {"ImageMultiply", "[", RowBox[{"img", ",", "mask2"}], "]"}
                          ],
                          ",",
                          "mask2"
                         }
                        ],
                        "]"
                       }
                      ]
                     }
                    ],
                    ";",
                    "\[IndentingNewLine]",
                    RowBox[{"{", RowBox[{"i1", ",", "i2"}], "}"}]
                   }
                  ]
                 }
                ],
                "\[IndentingNewLine]",
                "]"
               }
              ]
             }
            ],
            ";"
           }
          ]
         ],
         "Input",
         "Excluded",
         CellLabel -> "In[31]:="
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "selDiscardImage",
               "[",
               RowBox[
                {
                 GraphicsBox[
                  TagBox[
                   RasterBox[
                    CompressedData[
                     "\n1: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\n35D/3Zc3/+WvfvCPv/js3331/h+9M/r0IPc7j1o/etZ5bxT58knxrT3viwPX\nixPXxchwdWR8drP6+Mzy+Gj10aHj0ZFztKVPxRnAjMJR1maI6fKRrU6M00W8\ndcOMNBpkuFaQZu1sOEQqFLmgjqUyxN5AcvXIunsgjafh6RwWtK39Q329KTAY\nH2i1D6pV5VZvZX2DCLZxKMaKJTiBMMUfJCUSDLBpC3ku6C+nJ+6zU0+jqgj6\niQ4b3KiaC63RTcIlHu41KfWuR4/L+kTpMqE9FJSbzFSBcBtUmtxsjlFviBpN\nKfhNCgUWSGLjsaXfVwwHqnKVVd3iNXfF3T1Ze1vSbAtAXaoWWYUMtZil5dMU\nkEjzRVpnKG0ORaUeq74raOyIAPHeoazYpafrxHKfDiS8cy4fXSp3L2R7Vwpg\nhZ1DdqmPB0t155z/+APzi4/tj962nVytVKrCSIheTKqSflnQxrNJ8SYOPKhj\n7KTsT7ci749SHx/lXp2Wf/rh+E8+O//Zpxd//cN3/s3Xr/7jr370f/79L//D\nP/udf//z7//Dz7//3/7+l//0f/3Hf/yjV985rP7TP/7VP/1v/+q//ssf/09f\nf/zr7z/70dPB96+bf/CiDy6A9w+jXzzNvxh799ua8z3TzYllPFLtbcsux+aL\nA+vZweqwp81ludmsMFeSRdPCzSjX4SW7PdRYlJ9Ly5JRXnidvukmVEvCWk2Q\ny9FicXSrzX3ydO3sQp/Joat1yt6+4vpm7fzclssxwiF8rSoFsDwb6HSO3eqq\n+gNtf6DubSm7XfnWlrzTkXQ6svNT56PrjUpRYDZMK6R3tLJJmxJmk8AsomW7\nDOEzEGJ2JlAHOL3tXUmtzx8cakGlzZbZhRpo2apinZ/IUCtNfrbECMXR6SzJ\nH4YFs+h8lzEYqw7PzfvHxk5PnIyDojoXDWNiESxokYEoMluh5VqMTINW6LJB\nZB0cq/cu9UCM5S1mbZvTO5Rsn8p2LwBBBeA4PJO09tjlLWJ9SO0fcc6ea56+\nZ336ztqT565OWxELMQoxRdIryXqVEYvAISUEtPRB3Pq4G3r/IPO9x+0vLtu/\n/O7jX33v+dcfX/7ii2c//+LFzz5/69c/fvWff/3H/+Vvf/n//uPf/dP/+u/+\n6X/5H/7zn/3o3/7k1T/946//67/46f/49Sd/+unNn31+85O391+dVn/0vP+j\nlwOQS3/3ncbL481BRXq6YwLgtrvCQU+4N1AOu/Ldvmaroy4WhZkcMDKhN8h0\neKm2NfyqHe/10IIbjIiPmYuKWmX14Z6115OBVRaOICplGiD49tvu/jZ/e1tw\nfmF69x3/tz+KHY9X2m1puyH3rsM968B3hAdjE5DneGzc39f1+7JeT3J1tQY4\nDgea4/EquCpWLRCt6t6Kdp6JnrBK4SmPML0u8plJqwp4okGuAqXsSys7wtpQ\nku9wo0V6OE8ttkXJMssXx0Xy5EASsxGDxwpET3hxMw3Nd2mjM+31i7XHb7mP\nz8ylCtPnWwoG4aEI0utb9AaWMuXb9zhlm/RMi1rp88Di3b/Qbx8pO/uS/pFs\n50K9e6kaP9YfPTEcPdKDYNMeccsdIpjGgDa+ll480928sD594d7qqqKb1EJE\nktuUJdaEGac0pGeC6YSM5/WNj06Lv/ji/OuPTv/s+89/8sHpq0f9z24GT3dL\nT/dqX3324vfeu/6bH3/xP//513//J7/31Qc3X71/+evf/fbPPnr8k3ePv/7w\n7IvL3u8+2/3h89HHx9Ufvtj+6YcHn12VPr3OvTjcPO6bjrdNZ3um00PD2ZFp\ndyBvtwRADq22PJvlBsP0dR/FsopesWHMFuwKGBPSqFkEDpWLCsbDtfOjtX5P\n3qiwsxlirUx7/Hj1k28HLi4M4335kyf2jz8Mf/4qc32+OthSDDqKTR/C513e\n3lacnID2pBjtqnZ3lN2OcKsnvrq0g5/T7yn3R+Z2VR7xk9yrMLtpmYWdsMoR\nCY8g5uI5tTijaGmzgk1tMfI7/FSbFSqT/fnfvNElT4nX2JEybSONi1eoyRot\nVaeWtrj+DDxRx1R3mPvX6kfvrr389saTl67hgTxfpRbKtEyJFIzDAwlosc0A\nWks1iMD76gPe1oHi/+PpPYMbybNsv1HoxVNIqzUzO90z3dNd3tB7770vek8C\nIEB474HMhEt47z1h6L33ZLGKZdtXmzE9dmcnVorVewrtPrkXoW/S5XSEIm5k\n/JEAWSz88tx7TiIBqMw3oxMIapyNuKdJ46zXexqMviYgaHI1YMZSKZYrQXMU\nmjy9o8LiqXH5WoOhAVRWSxx9zCVWCogNyGy3gTeqIHbQe8vY/ZXC0VoLb3An\nhGwFkHdn6WdrHr+GbhJOKWgD7Il2GXXQpeKeLAaebyW+udz43cu937/a//Z0\n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\nKJlCSY3FPuQNTGs0HVRqHnkmi8cvpTNyZfIqjbpFyC+1GXswUQ3CrUBYFQZR\nY9g4mnaS/fiIXtqu4jcq2HUiRplMUoXjzUxmFp2exf3/SjrvqDbTM+17N5NN\nNpOcbHYyM56xx73Qi+lgwAYbN2xselfvvfcu1CVASCAEAoTooiN676a6jG08\ntmc8fZLMnE2ym6/t98f33STn3Oc9Qocj6Ty/57rv65L0viJHUvBhSvEVSI4y\nesJgK3G6j9NSW2qruv2PH8JGk86Xkk+ytDEEYQiefaHKklVluM7lxCglVxnE\nWAYhCV+emB7/UULk8aBT78dHBl9NjL6eGFRyO0HOqhzpcgx312NKb50++ovT\nH7zz7pEjNxNP70y2fL83dDDV+Pls/Uab5EWg+vPV9p8OZl6tdL3dHPhmZ+xv\nr9ffbox+uzO53u/qtoll2Hv1cjyUkVuio+cO1otn27UzrepXi+1fb/btDNS+\nmmv785PxlzMt3236P5tt/Xq1+4tFHww7QAZJ89GA/e2sb9jCVZRdL447ib0W\nSc9JLksPLko5X3E1mFuS9jTg+nq166ed/j9udkAM7FKWL9YyZozEpWr6hpO7\nYKWOaFA+Xl4N+qq+NMmOy4KqwWTB7Ft2CtdcsjE9db/D3MItc1LyRg2MBYd0\nqV5G5sUUoU9h6GF4RgSCGHz4YT0umECLpjLiUdhQDCaczb4sk2bxeelUcgIB\nHwX3s/kpbA44mStV8pugPgklWUxMrOJcP5SeIk/NucknpbIJoLIEZHkYnZUo\n01ynM2KYzFgwrlzKJRU3FTKjVX5joIUw1EFtriu1Gu6JRKk4fEgl4QJeCMkl\nGC8MY8riaNwoDOY89ASHpUzNv8fEXMUWp+XdjEcW3s67nXknKyM5Jjwm+JOM\npCBsxV2jiquVs29dT/rwdz//9TtHjv/bkfMf/JPHyPzLwfSftnoe9xtWm3mv\nx2verHifL3lX/dWfLXd/+XD47cYwsHs80dljk4mQ2WpSHq0gFXEjUk2+L8Hc\naNETx9zSP+6P/Lg38mjE+cVSx18/nfxxd/i7jb6DqeY3895vV7ofD9YF7ILZ\nRvkjf+1uj61VhFWWZ3HupdBux/Pyr9JzUvLiz+UnnRMjb+0Ou/7P6+Uvlzu+\nXW3f6la3y0u7FWUBHbpbkDdZhX7UIgOCDvw1ZW60/EGUi5KtLIirwd5Ydomf\n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\nRO3h6Uv/HxmiWBw=\n      "
                    ],
                    {{0, 100.0}, {150.0, 0}},
                    {0, 255},
                    ColorFunction -> RGBColor,
                    ImageResolution -> {72, 72}
                   ],
                   BoxForm`ImageTag[
                    "Byte",
                    ColorSpace -> "RGB",
                    Interleaving -> True,
                    MetaInformation -> <|
                     "Source" -> "http://www.eol.org/pages/328605",
                     "URL" -> "http://www.wolframcdn.com/waimage/hset050/ac9/ac99116210e54c705c59c5a92e61cb14_v001s.jpg"
                    |>
                   ],
                   Selectable -> False
                  ],
                  DefaultBaseStyle -> "ImageGraphics",
                  ImageSizeRaw -> {150.0, 100.0},
                  PlotRange -> {{0, 150.0}, {0, 100.0}}
                 ],
                 ",",
                 RowBox[
                  {
                   RowBox[
                    {
                     RowBox[
                      {
                       "EuclideanDistance",
                       "[",
                       RowBox[
                        {
                         "#",
                         ",",
                         RowBox[{"{", RowBox[{"0", ",", "1", ",", "0"}], "}"}]
                        }
                       ],
                       "]"
                      }
                     ],
                     "<",
                     "0.8"
                    }
                   ],
                   "&"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            "Excluded",
            CellLabel -> "In[32]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 GraphicsBox[
                  TagBox[
                   RasterBox[
                    CompressedData[
                     "\n1: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\nPVYtrVjVt2NlvwMrOx2YWWp6b58UEw0YGm343n0V6z4/7ze420bGvn8f/rNt\nSvXh94UsPXAY27CgecoY96/oG/+EGvM3GJz5DGNz98hxJQh7P+xj7buNWJ1/\nJvludatSxoKZjSKI3MG53WJsWGqw66jBlsgttVXKue0gvV9Qzit1I0Pvnrsd\nQPxCXOuN8GRqEc43I3rSjtBhG1zRejgCNfBGmxGnhxT66uxrDbLXk3xNL7xH\njKFHVeS6SgSPGWOPm/maPjmnIPTTX3Ocfuxm09OD8viEqePMoQ6Yoj1YdzRg\nzdaEPV8P9hx92OIxXt3rwNRCHQZGStCvKJP7NqiswtxiN6bnOj+4r+J1ivEf\nnlPwt2yzmva3cyZjjNmTPwxn81N3c6bOjfe5OEftekDOFrm5E5qvpBecWnlE\n/rmPfcazy8OpD/6NuHsAuu1KbG6VYdfYyHjXLtd3Vo3Vcg51w1olMbVmKsK6\noRDb5iJipQm+ZAtS9HIntyPIXw8hkW9HhDExdtiK5HEXork2+OKNElNCh9kC\nDXJdMXGqxOmrOSSvlQieMHYe1Uuuch+Wwn9ULf1g9nQAJ8eTiHuH4dP9+Hza\nH7PFHEOwG5rhcncQVwp4M0OM4x3YcNZji1yt83Vjy9qOZW0T5taou9SlUE6W\nY3SqmhxVDuVEFdQL7ZiY+bCuGZmsxuRsPboG7jRLn4I6RVnzV3+n2dn2D753\nQl2HkYly+buhsSIMj5dCMUEtPVL6g/+Wdf19PyO2oKcXRlM9NvbF2k0FFkUO\n8sI9erhC5GIfXhuI+QdhNNytL+vFmmCoF6ZAN3SeFh7XGmw7qrBtLydvFWHT\n/AxbpmfwJloRP+zGyTV1+MtJXPDx8Kgb2Vwn8oyRGZEXGm5kbKmC1VsNs7cW\nJj/1ebJT5l1lX4wjfNYDd64OjizjZrYItlQB3Jly6v1GHJ3frY8JLfhDj8lf\nux0FxhB20pcE+5A6GmdsH4Ul2kGeaoLO30ZcdWKZOn6ankfk2SinHmN4okCu\nRSsmyjA0VoIRVRX6v2ddR/x+bLoKvcNP5O/Fe/7auKhQlkJvmMDBwRQ0mrfr\nLAMK+tWxtz5icq4Mw6pn6BM5i2NPMTBZjL6x4r/oNfTLJUg43r2Oz1K8vkOD\n8Ae7oSeH6xz1vMaKMKn5DPMLX8CgK0PQ2oSwhVwjhrUZbv5spobQ6iqxc1CJ\n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\nTkhcazsmHjdHhfQgDnKvyVIn83RX14qod0S8qMbKSjlmpgvIHzx3U4XUG61w\nOpRy2KxDcLuUCPgn4AswVtn6iSnqo+QMzm536au3ECBn6swdWN+upZYqkTXA\n+/p2YoB6jNpMxc9UT5diRPHkg8enR/mpzHU68LXBzn23JrulrzUEW2RNgdA4\n8+QspepLfua7x7hX1CD138OCvgwL+0XknjqZyyS4WdQ1b+4Vy9plodc1jGMz\nhgIsEk9bgXps0NcJf+fO8phle2H01UueFzlQO+ZyeoUvsMH3xXPDePXHDcSz\nA3It0B9ukPMIr7+ZwYuXYzgjX+VzXThMduAk3cM4OPHe98wnFQh6WuGit4zE\nu5E8GpZrzenLcZy/nsH1m3FcvCSmXilx+py/4+eJ+BdkLJqZ/eny5X7oZlqt\nQ9g9DI+7h+e8Webhe+J9Els28qzJWUPdUAO3vw4e6i47v9fObhnm5h9ge6cC\noZCSfnIKXo8SPu8YwqEZJOIaOULBaflcMDDJ56fko9HaA4t7gMd2nLjakt/X\nE1RgfPo++oc+oVb7UsbXyckHUAx/LvG6Q87bWP3+tT+R87pFj2/ktWyMdEMX\nYJykphY5d7JOXMxH7hbTTzzifr/lq2ElNZjybm5NxEpREzq3Rt29U4KlBWoo\nxk79fiW1ewPWdSUyN1Sjp8Zk3NujFtrx1Mk6K9/hIHy5AWjd9KfkSQvxvMu/\nL+YjNGv3ZX+EM2qMaKIHbk89IrE2mXP88utJPL9V4vykF8/PB/H8bBgvL0bx\n6mqCP/P4EI9HiSHkkuQdanaBKYezAQFe84FYJ7zRVvrIHpzcjOLkchD50x7y\nnwLZfK9cx87kJ+gdB3hd/nx5439pO9BSYxq53z7ub6yPOngAXvpdF4+RqNPw\n8Pr08hh6vW0yJ9tibiZOBnFyvICj3CI95Qxy6SVEgjMwG/qwuUYfud6Ive1W\nObbWeX2v1xEzjCfLpeSCOsTSd3wfiY9jbuEp1OqH2Ngo56ikNysmRz3F2nI1\ntDttmJ8u++CxGaTu3zB00mNQbwT7sGKugXqvEMoF+oS532KJGtziaofF0Ybd\nXfrTqfLvPmdi7O11PLddxPhMP7hVgr29cqyI62bpKSz0mLubhXfcRT+wdlCK\nVVMpY2adXN/bZ9yzx7pkPagp3CqxJdb8VrT0MpP/nV75V/TEv4XL1Sxx4fU0\n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\nWnOzvN/Znqle3jt3e79M5gsLzS1yxqXXo0Y6oT4SnGB11MlcdX+oA2fnk3j5\nQiPnAQRviXuMiCEwdXE5hViyV/ZVEHjaOSiUj1pjify/6Ksi8meEBzz9ehR/\n+H9X8fyPc0ic9CJ3MYg3/3sRFy8nkT0bJL4ZHw67ZZ2h6EUrhqgbtrqov2K9\nOKS+Ormcwe2r1bsclJN12dNJu/H36a/9c2w+7R1/CWz59rsRNFAf2HogahGf\nH/+H3EDPx1d3tG9thcnVwdEu7/MtMKUV9crURI5AA31eEzmqXfaESVF7C43s\n9bfLIWqHhB+7uVZLXMUTPL9HSomrdGZQ1htd3szIHp826m3Rg03gSuguO/VV\nLNcne2KJeQVR+3X6clzmGov5K9EX5vZ3aly9mpK9ksXP4p4AIq8vdz50Vy9G\nPxoXPHU0iqOzSYmrl2/ueqqcHK/JfDiP/edbn/25t4jpw9rwIjGB0+gwzqIf\nryfZ3K+VuLL5uuX9UO8wVS8xZRH3bN9/LM+fuCeNiIEhxjpfoEPeS1Dk20ei\nPRJDAlNCs2cOh6UnFH068hcT0i+KR4Et4QmF1he6Xdz/L30yLOulQ9kOREUP\n5Mthea8SkVcaP+4ndy3IIV4j6hPT1FfyHibXjI034/w/fTnxHEsPyXpMUbPx\n9e+273B1toVV8tXO+sdVk/P/l211t5JxkPrQTX9L/WvzNt/NAURaOBhHjAXI\nnRIr+SGpi4JCozubsUk9Ju7lLnSz3VUnNZTwgfFUn9TmUcZQgSXhA7+dY7h+\npZH3tEmdjsj5eV+iC1mBjdO7uonjW5XsxSDuxSZ+/t2/r+P294vyXpSiV+gx\nNdbJ8ykcUWflb0WPtQl+thKR5IDEVu5EheevNu7WtLJL0GjqMPMD+9n/I2w+\n7cer0/9801pasENdZXC0yj5N3ni37JEu8tHFPUNEL/5kvl/GQjH3KeKOxdmE\nhZW7flmix4eIawI/Cep7MTcaiHdJPhL6TKztiBoyMQ/67RB1XmKNR/QZE9gS\n/HVETrt4MSvnT8VrBPZe/HFZ/izy3sWcqugBcvxiRtaE5a7vevdlT8fJWSOS\nq06v5qgHFxgTF2G2DUCheIplzcedk/xfdXNHFDzHrTA6xT0d+nkOu7BnKYHO\nUiTrHnyxJtm/0SzWU4id7PEYPMEu7OgqoDfzeWp4MY8g+ElwUuJw6I6LOFyR\n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\nXP1xf+uG/d72N0n61UU=\n      "
                    ],
                    {{0, 100.0}, {150.0, 0}},
                    {0, 255},
                    ColorFunction -> RGBColor,
                    ImageResolution -> {72, 72}
                   ],
                   BoxForm`ImageTag[
                    "Byte",
                    ColorSpace -> "RGB",
                    Interleaving -> True,
                    MetaInformation -> <|
                     "Source" -> "http://www.eol.org/pages/328605",
                     "URL" -> "http://www.wolframcdn.com/waimage/hset050/ac9/ac99116210e54c705c59c5a92e61cb14_v001s.jpg"
                    |>
                   ],
                   Selectable -> False
                  ],
                  DefaultBaseStyle -> "ImageGraphics",
                  ImageSizeRaw -> {150.0, 100.0},
                  PlotRange -> {{0, 150.0}, {0, 100.0}}
                 ],
                 ",",
                 GraphicsBox[
                  TagBox[
                   RasterBox[
                    CompressedData[
                     "\n1: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\n8bfwfeJOSxcuwMqlD+G7CxbgmaUPY8fmFUgIcYUy+hysdj6HHIWb9FnTkq2o\nTnGDLvYU8d5DuFAeRho7ALc7ssi32BNvOY0PekulTzv3xOU8B/aL73aX4pOJ\nBtF4d4j3czz+WnelxCOm24rk7LizjLi+ygdG4s/cX4Hzb7h/KffJ5V6Ag4Q5\n7inJ/UiLI+wQfPRFlMecQWd+KPrpuYOEhWalH86TvTCp/GVVxTiKHWpN90SY\n1WbiTKdQEviOnA3ro+zRSr7QQtypg55nzg1HqyZcbBDn0nBe9WiNUhbnafWV\nJWFQlyr1XV1kt8yELcYU/55xyLZpqkGJO71lMveAr6kk8u9jpnyB+q+LW6Ul\nzsf1X1z/IywjX/bYd+bX+icexetb1uGV9U9i2yZey/EEYWrhwwvwPcLUi2se\nw/7ta5GXHCg9ZSx6DXZtXo6UQFup4azN9JV7zT3+Oc7+myk97nRmY7JagXrC\nW8yp1zCiS8D1jnzc7SuXOgLGwkfk2+6P1hK+inGLONTPp4z4xWUz+Ti9+Ehe\nPEeOz4audxXKawxWJ2K2VU02T0k+NQS5wceQ6XUQNYmuMsOJbdAAacjeoiic\nLwiHWRNK/ssN03XcOzwFXWryaWnusKh8keawEx47VwgnZ25uziDfGWlHnMof\nExXxpGcVgpWJBo3k/I2R/bw7qMfFJg2M2aGCnYsNalyhPTBrLMAAab3f26mZ\nlnzSMPl4j7jfra4i3DRrMUfXzbhW+Xy1sxW/7EduxlEUZv15jB3YuQxbVj+E\nJwhTTy/8B6wjG7TwgQV45dmlcLZ6E65Hd8Hh8DZYvbEe65Y/iB8/sgBHdz0P\nXXaUzEOdG6jHpLlM6ic2LPkGnPZtkrNgyWWnPc591815Afj1JQOqFHYyc4K1\nu5/VVjkj+fdrZvxyulnsSXnMKfGNvD6facK9kRoMVSWin+NUlhJc7ShEB3GR\n+6N1uNVdggtk53pKYwRP750vxjTxrlbCpi7WEcOEgX8mvfj5ZCNMmX5oI15k\nJl4/Qvy+iXhWTawzrjWT/2xWkQ3yIt3vg6GCYEQe2SCLc+9MKa6SH8U5wxNk\nAy/R6/HcnpHqDMnl4b59N3vJjrbkST81ruvnuorLpEX5eq+3F0p8f7ZZI/7u\nPp+H95D9NeXiY+KCV+j1h8rjpJ6iIfX/b53Xnz7SIufzaTQJ1shL+uNz58TA\n+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\n      "
                    ],
                    {{0, 100.0}, {150.0, 0}},
                    {0, 255},
                    ColorFunction -> RGBColor,
                    ImageResolution -> {72, 72}
                   ],
                   BoxForm`ImageTag[
                    "Byte",
                    ColorSpace -> "RGB",
                    Interleaving -> True,
                    MetaInformation -> <|
                     "Source" -> "http://www.eol.org/pages/328605",
                     "URL" -> "http://www.wolframcdn.com/waimage/hset050/ac9/ac99116210e54c705c59c5a92e61cb14_v001s.jpg"
                    |>
                   ],
                   Selectable -> False
                  ],
                  DefaultBaseStyle -> "ImageGraphics",
                  ImageSizeRaw -> {150.0, 100.0},
                  PlotRange -> {{0, 150.0}, {0, 100.0}}
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            "Excluded",
            CellLabel -> "Out[32]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Applications", "Subsection", CellLabel -> "In[6]:="],
     Cell[
      "Select numbers up to 100 that equal 1 modulo both 3 and 5:",
      "Text",
      CellID -> 203213298
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "SelectDiscard",
            "[",
            RowBox[
             {
              RowBox[{"Range", "[", "100", "]"}],
              ",",
              RowBox[
               {
                RowBox[
                 {
                  RowBox[
                   {
                    RowBox[{"Mod", "[", RowBox[{"#", ",", "3"}], "]"}],
                    "==",
                    "1"
                   }
                  ],
                  "&&",
                  RowBox[
                   {
                    RowBox[{"Mod", "[", RowBox[{"#", ",", "5"}], "]"}],
                    "==",
                    "1"
                   }
                  ]
                 }
                ],
                "&"
               }
              ]
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 6985
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {
                  "1",
                  ",",
                  "16",
                  ",",
                  "31",
                  ",",
                  "46",
                  ",",
                  "61",
                  ",",
                  "76",
                  ",",
                  "91"
                 }
                ],
                "}"
               }
              ],
              ",",
              RowBox[
               {
                "{",
                RowBox[
                 {
                  "2",
                  ",",
                  "3",
                  ",",
                  "4",
                  ",",
                  "5",
                  ",",
                  "6",
                  ",",
                  "7",
                  ",",
                  "8",
                  ",",
                  "9",
                  ",",
                  "10",
                  ",",
                  "11",
                  ",",
                  "12",
                  ",",
                  "13",
                  ",",
                  "14",
                  ",",
                  "15",
                  ",",
                  "17",
                  ",",
                  "18",
                  ",",
                  "19",
                  ",",
                  "20",
                  ",",
                  "21",
                  ",",
                  "22",
                  ",",
                  "23",
                  ",",
                  "24",
                  ",",
                  "25",
                  ",",
                  "26",
                  ",",
                  "27",
                  ",",
                  "28",
                  ",",
                  "29",
                  ",",
                  "30",
                  ",",
                  "32",
                  ",",
                  "33",
                  ",",
                  "34",
                  ",",
                  "35",
                  ",",
                  "36",
                  ",",
                  "37",
                  ",",
                  "38",
                  ",",
                  "39",
                  ",",
                  "40",
                  ",",
                  "41",
                  ",",
                  "42",
                  ",",
                  "43",
                  ",",
                  "44",
                  ",",
                  "45",
                  ",",
                  "47",
                  ",",
                  "48",
                  ",",
                  "49",
                  ",",
                  "50",
                  ",",
                  "51",
                  ",",
                  "52",
                  ",",
                  "53",
                  ",",
                  "54",
                  ",",
                  "55",
                  ",",
                  "56",
                  ",",
                  "57",
                  ",",
                  "58",
                  ",",
                  "59",
                  ",",
                  "60",
                  ",",
                  "62",
                  ",",
                  "63",
                  ",",
                  "64",
                  ",",
                  "65",
                  ",",
                  "66",
                  ",",
                  "67",
                  ",",
                  "68",
                  ",",
                  "69",
                  ",",
                  "70",
                  ",",
                  "71",
                  ",",
                  "72",
                  ",",
                  "73",
                  ",",
                  "74",
                  ",",
                  "75",
                  ",",
                  "77",
                  ",",
                  "78",
                  ",",
                  "79",
                  ",",
                  "80",
                  ",",
                  "81",
                  ",",
                  "82",
                  ",",
                  "83",
                  ",",
                  "84",
                  ",",
                  "85",
                  ",",
                  "86",
                  ",",
                  "87",
                  ",",
                  "88",
                  ",",
                  "89",
                  ",",
                  "90",
                  ",",
                  "92",
                  ",",
                  "93",
                  ",",
                  "94",
                  ",",
                  "95",
                  ",",
                  "96",
                  ",",
                  "97",
                  ",",
                  "98",
                  ",",
                  "99",
                  ",",
                  "100"
                 }
                ],
                "}"
               }
              ]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[1]="
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         "Select 4-tuples that read the same in reverse:",
         "Text",
         CellID -> 2682388
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "Tuples",
                   "[",
                   RowBox[
                    {RowBox[{"{", RowBox[{"a", ",", "b"}], "}"}], ",", "4"}
                   ],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   RowBox[{"#", "==", RowBox[{"Reverse", "[", "#", "]"}]}],
                   "&"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 27255
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[
                      {"{", RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"a", ",", "b", ",", "b", ",", "a"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "a", ",", "a", ",", "b"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "b", ",", "b", ",", "b"}], "}"}
                     ]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[
                      {"{", RowBox[{"a", ",", "a", ",", "a", ",", "b"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"a", ",", "a", ",", "b", ",", "a"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"a", ",", "a", ",", "b", ",", "b"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"a", ",", "b", ",", "a", ",", "a"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"a", ",", "b", ",", "a", ",", "b"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"a", ",", "b", ",", "b", ",", "b"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "a", ",", "a", ",", "a"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "a", ",", "b", ",", "a"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "a", ",", "b", ",", "b"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "b", ",", "a", ",", "a"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "b", ",", "a", ",", "b"}], "}"}
                     ],
                     ",",
                     RowBox[
                      {"{", RowBox[{"b", ",", "b", ",", "b", ",", "a"}], "}"}
                     ]
                    }
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         "Select eigenvalues that lie within the unit circle:",
         "Text",
         CellID -> 36802547
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "Eigenvalues",
                   "[",
                   RowBox[
                    {
                     "RandomReal",
                     "[",
                     RowBox[
                      {"1", ",", RowBox[{"{", RowBox[{"5", ",", "5"}], "}"}]}
                     ],
                     "]"
                    }
                   ],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[
                  {RowBox[{RowBox[{"Abs", "[", "#", "]"}], "<", "1"}], "&"}
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 5177
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[
                      {
                       "0.507777254102415`",
                       "\[VeryThinSpace]",
                       "+",
                       RowBox[{"0.22388944545101494`", " ", "\[ImaginaryI]"}]
                      }
                     ],
                     ",",
                     RowBox[
                      {
                       "0.507777254102415`",
                       "\[VeryThinSpace]",
                       "-",
                       RowBox[{"0.22388944545101494`", " ", "\[ImaginaryI]"}]
                      }
                     ],
                     ",",
                     RowBox[
                      {
                       RowBox[{"-", "0.5278690560512319`"}],
                       "+",
                       RowBox[{"0.`", " ", "\[ImaginaryI]"}]
                      }
                     ],
                     ",",
                     RowBox[
                      {
                       RowBox[{"-", "0.104087216640943`"}],
                       "+",
                       RowBox[{"0.`", " ", "\[ImaginaryI]"}]
                      }
                     ]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     "2.638539779698969`",
                     "\[VeryThinSpace]",
                     "+",
                     RowBox[{"0.`", " ", "\[ImaginaryI]"}]
                    }
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         "Separate built-in Wolfram Language symbols based on whether their names contain less than 10 characters:",
         "Text",
         CellID -> 291175424
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              RowBox[{"{", RowBox[{"short", ",", "long"}], "}"}],
              "=",
              RowBox[
               {
                "SelectDiscard",
                "[",
                RowBox[
                 {
                  RowBox[{"Names", "[", "\"System`*\"", "]"}],
                  ",",
                  RowBox[
                   {
                    RowBox[
                     {RowBox[{"StringLength", "[", "#", "]"}], "<", "10"}
                    ],
                    "&"
                   }
                  ]
                 }
                ],
                "]"
               }
              ]
             }
            ],
            ";"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 31897
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"short", "//", "Short"}]],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[
            BoxData[
             TagBox[
              RowBox[
               {
                "{",
                RowBox[
                 {
                  "\"\[FormalA]\"",
                  ",",
                  "\"\[FormalB]\"",
                  ",",
                  "\"\[FormalC]\"",
                  ",",
                  "\"\[FormalD]\"",
                  ",",
                  "\"\[FormalE]\"",
                  ",",
                  "\"\[FormalF]\"",
                  ",",
                  RowBox[{"\[LeftSkeleton]", "1750", "\[RightSkeleton]"}],
                  ",",
                  "\"$TraceOn\"",
                  ",",
                  "\"$Urgent\"",
                  ",",
                  "\"$Username\"",
                  ",",
                  "\"$UserName\"",
                  ",",
                  "\"$Version\"",
                  ",",
                  "\"\[SystemsModelDelay]\""
                 }
                ],
                "}"
               }
              ],
              Short
             ]
            ],
            "Output",
            CellLabel -> "Out[2]//Short="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"long", "//", "Short"}]],
            "Input",
            CellLabel -> "In[3]:="
           ],
           Cell[
            BoxData[
             TagBox[
              RowBox[
               {
                "{",
                RowBox[
                 {
                  "\"AASTriangle\"",
                  ",",
                  "\"AbelianGroup\"",
                  ",",
                  "\"AbortKernels\"",
                  ",",
                  RowBox[{"\[LeftSkeleton]", "5745", "\[RightSkeleton]"}],
                  ",",
                  "\"$WolframID\"",
                  ",",
                  "\"$WolframUUID\""
                 }
                ],
                "}"
               }
              ],
              Short
             ]
            ],
            "Output",
            CellLabel -> "Out[3]//Short="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         "Select numeric quantities from a product:",
         "Text",
         CellID -> 148203375
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "7",
                   " ",
                   SuperscriptBox["\[Pi]", "2"],
                   " ",
                   SuperscriptBox["x", "2"],
                   " ",
                   SuperscriptBox["y", "2"]
                  }
                 ],
                 ",",
                 "NumericQ"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 18528
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"7", " ", SuperscriptBox["\[Pi]", "2"]}],
                 ",",
                 RowBox[
                  {SuperscriptBox["x", "2"], " ", SuperscriptBox["y", "2"]}
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Properties & Relations",
      "Subsection",
      CellLabel -> "In[2]:="
     ],
     Cell[
      TextData[
       {
        "The lengths of ",
        Cell[
         BoxData[
          SubscriptBox[StyleBox["list", "TI"], StyleBox["1", "TR"]]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " and ",
        Cell[
         BoxData[
          SubscriptBox[StyleBox["list", "TI"], StyleBox["2", "TR"]]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " will always sum to the length of the original ",
        Cell[
         BoxData[StyleBox["list", "TI"]],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        ":"
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "SelectDiscard",
            "[",
            RowBox[{RowBox[{"Range", "[", "10", "]"}], ",", "PrimeQ"}],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:="
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              RowBox[
               {"{", RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}
              ],
              ",",
              RowBox[
               {
                "{",
                RowBox[
                 {"1", ",", "4", ",", "6", ",", "8", ",", "9", ",", "10"}
                ],
                "}"
               }
              ]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[1]="
        ]
       },
       Open
      ]
     ],
     Cell[
      "When specifying a maximum, the second list can contain elements that satisfy the given condition:",
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "SelectDiscard",
            "[",
            RowBox[
             {
              RowBox[{"Range", "[", "10", "]"}],
              ",",
              "PrimeQ",
              ",",
              "2"
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[2]:="
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              RowBox[{"{", RowBox[{"2", ",", "3"}], "}"}],
              ",",
              RowBox[
               {
                "{",
                RowBox[
                 {
                  "5",
                  ",",
                  "7",
                  ",",
                  "1",
                  ",",
                  "4",
                  ",",
                  "6",
                  ",",
                  "8",
                  ",",
                  "9",
                  ",",
                  "10"
                 }
                ],
                "}"
               }
              ]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[2]="
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " is similar to ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "TakeDrop",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/TakeDrop",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " except it takes/drops elements using the given function:"
          }
         ],
         "Text",
         CellID -> 107253
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"list", "=", RowBox[{"Range", "[", "10", "]"}]}]
            ],
            "Input",
            CellLabel -> "In[1]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 "1",
                 ",",
                 "2",
                 ",",
                 "3",
                 ",",
                 "4",
                 ",",
                 "5",
                 ",",
                 "6",
                 ",",
                 "7",
                 ",",
                 "8",
                 ",",
                 "9",
                 ",",
                 "10"
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {"list", ",", RowBox[{"LessEqualThan", "[", "4", "]"}]}
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {"{", RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"TakeDrop", "[", RowBox[{"list", ",", "4"}], "]"}]
            ],
            "Input",
            CellLabel -> "In[3]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {"{", RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[3]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "For ",
           Cell[
            BoxData[StyleBox["crit", "TI"]],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " that always return ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "True",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/True",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " or ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "False",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/False",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ", ",
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " is very similar to ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "GatherBy",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/GatherBy",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text",
         CellID -> 739256672
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[{RowBox[{"Range", "[", "10", "]"}], ",", "OddQ"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 1493988409
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "GatherBy",
               "[",
               RowBox[{RowBox[{"Range", "[", "10", "]"}], ",", "OddQ"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "However, the first list returned by ",
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " always corresponds to elements ",
           Cell[
            BoxData[
             SubscriptBox[StyleBox["e", "TI"], StyleBox["i", "TI"]]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " where ",
           Cell[
            BoxData[
             RowBox[
              {
               StyleBox["crit", "TI"],
               "[",
               SubscriptBox[StyleBox["e", "TI"], StyleBox["i", "TI"]],
               "]"
              }
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " gives ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "True",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/True",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[{RowBox[{"Range", "[", "10", "]"}], ",", "EvenQ"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 439190605
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[3]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "GatherBy",
               "[",
               RowBox[{RowBox[{"Range", "[", "10", "]"}], ",", "EvenQ"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[4]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[4]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Similar results can be obtained with ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "GroupBy",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/GroupBy",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text",
         CellID -> 1584147402
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "Lookup",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "GroupBy",
                   "[",
                   RowBox[{RowBox[{"Range", "[", "10", "]"}], ",", "PrimeQ"}],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[{"{", RowBox[{"True", ",", "False"}], "}"}],
                 ",",
                 RowBox[{"{", "}"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {"{", RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"1", ",", "4", ",", "6", ",", "8", ",", "9", ",", "10"}
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "However, ",
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " works on expressions with any head:"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "g",
                   "[",
                   RowBox[{"1", ",", "2", ",", "4", ",", "7", ",", "8"}],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"g", "[", RowBox[{"4", ",", "7", ",", "8"}], "]"}],
                 ",",
                 RowBox[{"g", "[", RowBox[{"1", ",", "2"}], "]"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "GroupBy",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/GroupBy",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " does not:"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "GroupBy",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "g",
                   "[",
                   RowBox[{"1", ",", "2", ",", "4", ",", "7", ",", "8"}],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:="
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               "GroupBy",
               "list1",
               "\"The argument \\!\\(\\*RowBox[{\\\"g\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\"}], \\\"]\\\"}]\\) is not a valid list of Associations or rules or lists of rules.\"",
               2,
               3,
               4,
               34066263318475515365,
               "Local"
              },
              "MessageTemplate"
             ]
            ],
            "Message",
            "MSG",
            CellLabel -> "During evaluation of In[3]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "GroupBy",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "g",
                   "[",
                   RowBox[{"1", ",", "2", ",", "4", ",", "7", ",", "8"}],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#1", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[3]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " always gives two lists:"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"1", ",", "2", ",", "4", ",", "7", ",", "x", ",", "y"}
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"{", RowBox[{"4", ",", "7"}], "}"}],
                 ",",
                 RowBox[
                  {"{", RowBox[{"1", ",", "2", ",", "x", ",", "y"}], "}"}
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[{RowBox[{"Range", "[", "5", "]"}], ",", "IntegerQ"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{"{", "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "Compare with ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "GatherBy",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/GatherBy",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " and ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "GroupBy",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/GroupBy",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "GatherBy",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"1", ",", "2", ",", "4", ",", "7", ",", "x", ",", "y"}
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"{", RowBox[{"1", ",", "2"}], "}"}],
                 ",",
                 RowBox[{"{", RowBox[{"4", ",", "7"}], "}"}],
                 ",",
                 RowBox[{"{", "x", "}"}],
                 ",",
                 RowBox[{"{", "y", "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[3]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "GroupBy",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"1", ",", "2", ",", "4", ",", "7", ",", "x", ",", "y"}
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[{RowBox[{"#", ">", "2"}], "&"}]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[4]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "\[LeftAssociation]",
               RowBox[
                {
                 RowBox[
                  {
                   "False",
                   "\[Rule]",
                   RowBox[{"{", RowBox[{"1", ",", "2"}], "}"}]
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "True",
                   "\[Rule]",
                   RowBox[{"{", RowBox[{"4", ",", "7"}], "}"}]
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   RowBox[{"x", ">", "2"}],
                   "\[Rule]",
                   RowBox[{"{", "x", "}"}]
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   RowBox[{"y", ">", "2"}],
                   "\[Rule]",
                   RowBox[{"{", "y", "}"}]
                  }
                 ]
                }
               ],
               "\[RightAssociation]"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[4]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "GroupBy",
               "[",
               RowBox[{RowBox[{"Range", "[", "5", "]"}], ",", "IntegerQ"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[5]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "\[LeftAssociation]",
               RowBox[
                {
                 "True",
                 "\[Rule]",
                 RowBox[
                  {
                   "{",
                   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}],
                   "}"
                  }
                 ]
                }
               ],
               "\[RightAssociation]"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[5]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "GatherBy",
               "[",
               RowBox[{RowBox[{"Range", "[", "5", "]"}], ",", "IntegerQ"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[6]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 "{",
                 RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}],
                 "}"
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[6]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "Similar results can be obtained with a combination of ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "Select",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/Select",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " and ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "DeleteElements",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle ->
                Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"],
                  {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                  {"Link"}
                 ]
                ],
               ButtonData -> "paclet:ref/DeleteElements",
               ContentPadding -> False
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text"
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              "list",
              "=",
              RowBox[
               {
                "{",
                RowBox[
                 {"1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4"}
                ],
                "}"
               }
              ]
             }
            ],
            ";"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:="
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {"SelectDiscard", "[", RowBox[{"list", ",", "EvenQ"}], "]"}
             ]
            ],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"{", RowBox[{"2", ",", "2", ",", "4"}], "}"}],
                 ",",
                 RowBox[{"{", RowBox[{"1", ",", "3", ",", "3"}], "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "With",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     "sel",
                     "=",
                     RowBox[
                      {"Select", "[", RowBox[{"list", ",", "EvenQ"}], "]"}
                     ]
                    }
                   ],
                   "}"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     "sel",
                     ",",
                     RowBox[
                      {"DeleteElements", "[", RowBox[{"list", ",", "sel"}], "]"}
                     ]
                    }
                   ],
                   "}"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:="
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[{"{", RowBox[{"2", ",", "2", ",", "4"}], "}"}],
                 ",",
                 RowBox[{"{", RowBox[{"1", ",", "3", ",", "3"}], "}"}]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[3]="
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData["SelectDiscard"],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " tends to perform better with large lists:"
          }
         ],
         "Text"
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              "list",
              "=",
              RowBox[
               {"RandomInteger", "[", RowBox[{"100", ",", "10000"}], "]"}
              ]
             }
            ],
            ";"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[2]:="
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "First",
               "[",
               RowBox[
                {
                 "RepeatedTiming",
                 "[",
                 RowBox[
                  {"SelectDiscard", "[", RowBox[{"list", ",", "EvenQ"}], "]"}
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:="
           ],
           Cell[
            BoxData["0.00613685859375`"],
            "Output",
            CellLabel -> "Out[3]="
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "First",
               "[",
               RowBox[
                {
                 "RepeatedTiming",
                 "[",
                 RowBox[
                  {
                   "With",
                   "[",
                   RowBox[
                    {
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         "sel",
                         "=",
                         RowBox[
                          {"Select", "[", RowBox[{"list", ",", "EvenQ"}], "]"}
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     ",",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         "sel",
                         ",",
                         RowBox[
                          {"DeleteElements", "[", RowBox[{"list", ",", "sel"}], "]"}
                         ]
                        }
                       ],
                       "}"
                      }
                     ]
                    }
                   ],
                   "]"
                  }
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[4]:="
           ],
           Cell[
            BoxData["0.40092115`"],
            "Output",
            CellLabel -> "Out[4]="
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter"
        ],
        Cell[
         TextData[
          {
           "The first list returned by ",
           Cell[
            BoxData[
             RowBox[
              {
               "SelectDiscard",
               "[",
               RowBox[
                {StyleBox["list", "TI"], ",", StyleBox["crit", "TI"]}
               ],
               "]"
              }
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " is equivalent to what's returned by ",
           Cell[
            BoxData[
             RowBox[
              {
               TagBox[
                ButtonBox[
                 StyleBox[
                  "Select",
                  "SymbolsRefLink",
                  ShowStringCharacters -> True,
                  FontFamily -> "Source Sans Pro"
                 ],
                 BaseStyle ->
                  Dynamic[
                   FEPrivate`If[
                    CurrentValue["MouseOver"],
                    {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                    {"Link"}
                   ]
                  ],
                 ButtonData -> "paclet:ref/Select",
                 ContentPadding -> False
                ],
                MouseAppearanceTag["LinkHand"]
               ],
               "[",
               RowBox[
                {StyleBox["list", "TI"], ",", StyleBox["crit", "TI"]}
               ],
               "]"
              }
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text"
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              "list",
              "=",
              RowBox[
               {
                "{",
                RowBox[
                 {
                  RowBox[{"-", "2"}],
                  ",",
                  "0",
                  ",",
                  "1",
                  ",",
                  "3",
                  ",",
                  "3",
                  ",",
                  "x",
                  ",",
                  "y"
                 }
                ],
                "}"
               }
              ]
             }
            ],
            ";"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:="
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "First",
                 "[",
                 RowBox[
                  {
                   "SelectDiscard",
                   "[",
                   RowBox[{"list", ",", "Positive"}],
                   "]"
                  }
                 ],
                 "]"
                }
               ],
               "===",
               RowBox[
                {"Select", "[", RowBox[{"list", ",", "Positive"}], "]"}
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:="
           ],
           Cell[BoxData["True"], "Output", CellLabel -> "Out[2]="]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "The second list is effectively equivalent to ",
           Cell[
            BoxData[
             RowBox[
              {
               TagBox[
                ButtonBox[
                 StyleBox[
                  "Select",
                  "SymbolsRefLink",
                  ShowStringCharacters -> True,
                  FontFamily -> "Source Sans Pro"
                 ],
                 BaseStyle ->
                  Dynamic[
                   FEPrivate`If[
                    CurrentValue["MouseOver"],
                    {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                    {"Link"}
                   ]
                  ],
                 ButtonData -> "paclet:ref/Select",
                 ContentPadding -> False
                ],
                MouseAppearanceTag["LinkHand"]
               ],
               "[",
               RowBox[
                {
                 StyleBox["list", "TI"],
                 ",",
                 RowBox[
                  {
                   TagBox[
                    ButtonBox[
                     StyleBox[
                      "Not",
                      "SymbolsRefLink",
                      ShowStringCharacters -> True,
                      FontFamily -> "Source Sans Pro"
                     ],
                     BaseStyle ->
                      Dynamic[
                       FEPrivate`If[
                        CurrentValue["MouseOver"],
                        {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                        {"Link"}
                       ]
                      ],
                     ButtonData -> "paclet:ref/Not",
                     ContentPadding -> False
                    ],
                    MouseAppearanceTag["LinkHand"]
                   ],
                   "@*",
                   TagBox[
                    ButtonBox[
                     StyleBox[
                      "TrueQ",
                      "SymbolsRefLink",
                      ShowStringCharacters -> True,
                      FontFamily -> "Source Sans Pro"
                     ],
                     BaseStyle ->
                      Dynamic[
                       FEPrivate`If[
                        CurrentValue["MouseOver"],
                        {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
                        {"Link"}
                       ]
                      ],
                     ButtonData -> "paclet:ref/TrueQ",
                     ContentPadding -> False
                    ],
                    MouseAppearanceTag["LinkHand"]
                   ],
                   "@*",
                   StyleBox["crit", "TI"]
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           ":"
          }
         ],
         "Text"
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "Last",
                 "[",
                 RowBox[
                  {
                   "SelectDiscard",
                   "[",
                   RowBox[{"list", ",", "Positive"}],
                   "]"
                  }
                 ],
                 "]"
                }
               ],
               "===",
               RowBox[
                {
                 "Select",
                 "[",
                 RowBox[
                  {
                   "list",
                   ",",
                   RowBox[{"Not", "@*", "TrueQ", "@*", "Positive"}]
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:="
           ],
           Cell[BoxData["True"], "Output", CellLabel -> "Out[3]="]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Possible Issues",
      "Subsection",
      CellLabel -> "In[7]:="
     ],
     Cell[
      TextData[
       {
        "When specifying a limit, the second list can contain elements ",
        Cell[
         BoxData[
          SubscriptBox[StyleBox["e", "TI"], StyleBox["i", "TI"]]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " where ",
        Cell[
         BoxData[
          RowBox[
           {
            StyleBox["crit", "TI"],
            "[",
            SubscriptBox[StyleBox["e", "TI"], StyleBox["i", "TI"]],
            "]"
           }
          ]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        " is ",
        Cell[
         BoxData[
          TagBox[
           ButtonBox[
            StyleBox[
             "True",
             "SymbolsRefLink",
             ShowStringCharacters -> True,
             FontFamily -> "Source Sans Pro"
            ],
            BaseStyle ->
             Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"],
               {"Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]},
               {"Link"}
              ]
             ],
            ButtonData -> "paclet:ref/True",
            ContentPadding -> False
           ],
           MouseAppearanceTag["LinkHand"]
          ]
         ],
         "InlineFormula",
         FontFamily -> "Source Sans Pro"
        ],
        ":"
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "SelectDiscard",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {"1", ",", "2", ",", "4", ",", "7", ",", "6", ",", "2"}
                ],
                "}"
               }
              ],
              ",",
              "EvenQ",
              ",",
              "2"
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[1]:="
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              RowBox[{"{", RowBox[{"2", ",", "4"}], "}"}],
              ",",
              RowBox[
               {"{", RowBox[{"6", ",", "2", ",", "1", ",", "7"}], "}"}
              ]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[1]="
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ]
 },
 WindowStatusArea -> Automatic,
 DockedCells -> {
  Cell[
   BoxData[TemplateBox[{}, "ToolsGridTemplate"]],
   "DockedCell",
   CellFrameMargins -> {{0, 0}, {2, 2}},
   CellFrame -> {{0, 0}, {1, 0}}
  ]
 },
 TaggingRules -> <|
  "InformationPopupMenuItemAdded" -> True,
  "NotebookIndexQ" -> True,
  "NotebookLastIndexed" ->
   DateObject[
    {2022, 7, 2, 16, 17, 47.376},
    "Instant",
    "Gregorian",
    -4.0
   ],
  "NotebookUUID" -> "76700812-c244-4ac6-bbfc-dc5e4786172f",
  "AutoUpdate" -> True,
  "TryRealOnly" -> False
 |>,
 FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "FunctionResourceDefinitionStyles.nb",
   CharacterEncoding -> "UTF-8"
  ],
 ExpressionUUID -> "76700812-c244-4ac6-bbfc-dc5e4786172f"
]