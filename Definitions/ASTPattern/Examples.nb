Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ResetContextPath", "[", " ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", " ", "\"\<Global`*\>\"", " ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"Block", "[", " ", 
  RowBox[{
   RowBox[{"{", " ", "$ContextPath", " ", "}"}], ",", "\n", "    ", 
   RowBox[{
    RowBox[{"Get", " ", "@", " ", 
     RowBox[{"FileNameJoin", " ", "@", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", " ", "]"}], ",", " ", 
        "\"\<Definition.wl\>\""}], " ", "}"}]}]}], ";", "\n", "    ", 
    RowBox[{"TestReport", " ", "@", " ", 
     RowBox[{"FileNameJoin", " ", "@", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", " ", "]"}], ",", " ", 
        "\"\<Tests.wlt\>\""}], " ", "}"}]}]}]}]}], "\n", 
  "]"}]}], "Code", "Excluded",
 InitializationCell->False,
 CellChangeTimes->{{3.8539530988603687`*^9, 3.853953107023597*^9}, {
  3.854021261560169*^9, 3.8540212670498*^9}, {3.8540229863350143`*^9, 
  3.854023006351633*^9}, {3.8540231537854605`*^9, 3.8540231686285753`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"433311d1-1e34-4f34-936d-160622cabadf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015226326882`, {0., 10.869015226326882`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             InsetBox[
              PaneBox[
               DynamicBox[
                FEPrivate`FrontEndResource["MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache -> {16., {4., 8.}}], Alignment -> Center, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]], AspectRatio -> 1, Axes -> False, 
             Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Tests.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869015226326882`, {0., 10.869015226326882`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             InsetBox[
              PaneBox[
               DynamicBox[
                FEPrivate`FrontEndResource["MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache -> {16., {4., 8.}}], Alignment -> Center, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]], AspectRatio -> 1, Axes -> False, 
             Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Tests.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0520001`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity"], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Tests.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     5897387495558162528 -> 
      TestResultObject[<|
        "TestKey" -> 5897387495558162528, "TestID" -> 
         "Set-MessageFailure-TestMode@@Definitions/ASTPattern/Tests.wlt:4,1-9,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> MatchQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           SetOptions[
            ResourceFunction["MessageFailure"], "TestMode" -> True]], 
         "ExpectedOutput" -> HoldForm[
           KeyValuePattern["TestMode" -> True]], "ActualOutput" -> 
         HoldForm[{
           "MessageFunction" -> Automatic, "Verbose" -> False, "Stack" -> 
            False, "TestMode" -> True}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869768859`16.639519307999052*^9, "AbsoluteTimeUsed" -> 
         0.0010002`4.150601848043636, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3656|>], 6933719997753556257 -> 
      TestResultObject[<|
        "TestKey" -> 6933719997753556257, "TestID" -> 
         "Initialize-Needs-CodeParser@@Definitions/ASTPattern/Tests.wlt:11,1-\
15,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["CodeParser`"]], "ExpectedOutput" -> HoldForm[Null], 
         "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869778861`16.639519307999166*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3080|>], 
      8712430094622112923 -> 
      TestResultObject[<|
        "TestKey" -> 8712430094622112923, "TestID" -> 
         "RF-Context-Helper-Definition@@Definitions/ASTPattern/Tests.wlt:17,1-\
30,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Attributes[$CellContext`setDef] = {HoldFirst}; $CellContext`setDef[
              Pattern[$CellContext`sym, 
               Blank[Symbol]]] := 
            If[Context[$CellContext`sym] =!= 
              Context[$CellContext`ASTPattern], $CellContext`sym = 
               Symbol[Context[$CellContext`ASTPattern] <> SymbolName[
                   Unevaluated[$CellContext`sym]]]; 
              HoldPattern[$CellContext`sym] -> $CellContext`sym, Nothing]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869778861`16.639519307999166*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 4448|>], 9154058624839859436 -> 
      TestResultObject[<|
        "TestKey" -> 9154058624839859436, "TestID" -> 
         "RF-Context-Helper-Set@@Definitions/ASTPattern/Tests.wlt:32,1-37,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> MatchQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           
           Map[$CellContext`setDef, {$CellContext`FromAST, \
$CellContext`EquivalentNodeQ}]], "ExpectedOutput" -> HoldForm[
           Alternatives[{}, {
             Blank[Rule], 
             Blank[Rule]}]], "ActualOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869778861`16.639519307999166*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3112|>], 2406156733209307871 -> 
      TestResultObject[<|
        "TestKey" -> 2406156733209307871, "TestID" -> 
         "TestParse-Definition@@Definitions/ASTPattern/Tests.wlt:39,1-49,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Attributes[$CellContext`testParse] = {
             HoldRest}; $CellContext`testParse[
              Pattern[$CellContext`str, 
               Blank[]]] := Part[
              CodeParser`CodeParse[$CellContext`str], 2, 
              1]; $CellContext`testParse[
              Pattern[$CellContext`str, 
               Blank[]], 
              Pattern[$CellContext`patt, 
               Blank[]]] := MatchQ[
              $CellContext`testParse[$CellContext`str], 
              $CellContext`ASTPattern[
               HoldPattern[$CellContext`patt]]]; Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869788861`16.639519307999276*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4576|>], 
      907163817663145219 -> 
      TestResultObject[<|
        "TestKey" -> 907163817663145219, "TestID" -> 
         "Context-CodeParse@@Definitions/ASTPattern/Tests.wlt:54,1-58,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`CodeParse]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869788861`16.639519307999276*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 7539010221538970098 -> 
      TestResultObject[<|
        "TestKey" -> 7539010221538970098, "TestID" -> 
         "Context-LeafNode@@Definitions/ASTPattern/Tests.wlt:60,1-64,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`LeafNode]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869788861`16.639519307999276*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 659470101702172090 -> 
      TestResultObject[<|
        "TestKey" -> 659470101702172090, "TestID" -> 
         "Context-CallNode@@Definitions/ASTPattern/Tests.wlt:66,1-70,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`CallNode]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869788861`16.639519307999276*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 7452285898664468330 -> 
      TestResultObject[<|
        "TestKey" -> 7452285898664468330, "TestID" -> 
         "Context-Source@@Definitions/ASTPattern/Tests.wlt:72,1-76,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`Source]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869798861`16.63951930799939*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 5342452800246339970 -> 
      TestResultObject[<|
        "TestKey" -> 5342452800246339970, "TestID" -> 
         "Leaf-Call@@Definitions/ASTPattern/Tests.wlt:81,1-89,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            Blank[Integer]]], "ExpectedOutput" -> HoldForm[
           Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
            Alternatives[Integer, 
             CodeParser`LeafNode[Symbol, 
              Alternatives["Integer", "System`Integer"], 
              Blank[]]], 
            Blank[], 
            Blank[]]], "ActualOutput" -> HoldForm[
           Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
            Alternatives[Integer, 
             CodeParser`LeafNode[Symbol, 
              Alternatives["Integer", "System`Integer"], 
              Blank[]]], 
            Blank[], 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869798861`16.63951930799939*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3832|>], 
      4353731506781237097 -> 
      TestResultObject[<|
        "TestKey" -> 4353731506781237097, "TestID" -> 
         "Leaf-PatternTest@@Definitions/ASTPattern/Tests.wlt:91,1-95,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            PatternTest[
             Blank[Integer], IntegerQ]]], "ExpectedOutput" -> HoldForm[
           CodeParser`LeafNode[Integer, 
            Blank[], 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`LeafNode[Integer, 
            Blank[], 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869798861`16.63951930799939*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4040|>], 
      6957187185817891964 -> 
      TestResultObject[<|
        "TestKey" -> 6957187185817891964, "TestID" -> 
         "Leaf-Symbol@@Definitions/ASTPattern/Tests.wlt:97,1-101,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[$CellContext`x]], "ExpectedOutput" -> 
         HoldForm[
           CodeParser`LeafNode[Symbol, 
            Alternatives["x", "Global`x"], 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`LeafNode[Symbol, 
            Alternatives["x", "Global`x"], 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869808861`16.639519307999503*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3352|>], 
      8517133364414844184 -> 
      TestResultObject[<|
        "TestKey" -> 8517133364414844184, "TestID" -> 
         "HoldPattern@@Definitions/ASTPattern/Tests.wlt:103,1-111,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            HoldPattern[
             Identity[
              Blank[]]]]], "ExpectedOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["Identity", "System`Identity"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["Identity", "System`Identity"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869808861`16.639519307999503*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4296|>], 
      555880752344496715 -> 
      TestResultObject[<|
        "TestKey" -> 555880752344496715, "TestID" -> 
         "Invisible-Nested@@Definitions/ASTPattern/Tests.wlt:113,1-117,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            $CellContext`f[
             $CellContext`ASTPattern[
              Blank[]], 
             $CellContext`ASTPattern[
              Blank[]]]]], "ExpectedOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869808861`16.639519307999503*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3520|>], 
      784732931999397152 -> 
      TestResultObject[<|
        "TestKey" -> 784732931999397152, "TestID" -> 
         "Bound-Nested@@Definitions/ASTPattern/Tests.wlt:119,1-130,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            $CellContext`f[
             $CellContext`ASTPattern[
              Blank[], 
              Pattern[$CellContext`a, 
               Blank[]]], 
             $CellContext`ASTPattern[
              Blank[], 
              Pattern[$CellContext`b, 
               Blank[]]]], 
            Pattern[$CellContext`c, 
             Blank[]]]], "ExpectedOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`a, 
               Blank[]]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`b, 
               Blank[]]]}, 
            Pattern[$CellContext`c, 
             Blank[]]]], "ActualOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`a, 
               Blank[]]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`b, 
               Blank[]]]}, 
            Pattern[$CellContext`c, 
             Blank[]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023186981886`16.639519307999617*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4504|>], 
      2684048128355005180 -> 
      TestResultObject[<|
        "TestKey" -> 2684048128355005180, "TestID" -> 
         "Duplicate-Pattern-Symbols-1@@Definitions/ASTPattern/Tests.wlt:135,1-\
139,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Count[
            CodeParser`CodeParse["{{1,1},{2,2}}"], 
            $CellContext`ASTPattern[{
              Pattern[$CellContext`a, 
               Blank[]], 
              Pattern[$CellContext`a, 
               Blank[]]}], Infinity]], "ExpectedOutput" -> HoldForm[2], 
         "ActualOutput" -> HoldForm[2], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023186981886`16.639519307999617*^9, "AbsoluteTimeUsed" -> 
         0.0019999`4.451523278228987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5496|>], 1757249608367389419 -> 
      TestResultObject[<|
        "TestKey" -> 1757249608367389419, "TestID" -> 
         "Duplicate-Pattern-Symbols-2@@Definitions/ASTPattern/Tests.wlt:141,1-\
149,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Count[
            CodeParser`CodeParse["{{{1,1},{2,2}},{{1,1},{2,2}}}"], 
            $CellContext`ASTPattern[{
              Pattern[$CellContext`a, 
               Blank[]], 
              Pattern[$CellContext`a, 
               Blank[]]}], Infinity]], "ExpectedOutput" -> HoldForm[5], 
         "ActualOutput" -> HoldForm[5], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869838859`16.63951930799984*^9, "AbsoluteTimeUsed" -> 
         0.003`4.62763625255165, "CPUTimeUsed" -> 0., "MemoryUsed" -> 5560|>],
       5329337340716323895 -> 
      TestResultObject[<|
        "TestKey" -> 5329337340716323895, "TestID" -> 
         "Duplicate-Pattern-Symbols-3@@Definitions/ASTPattern/Tests.wlt:151,1-\
159,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Cases[
            CodeParser`CodeParse[
            "{{1,1,1},{1,1},{1,1,1,2},{2,2,2}}"], $CellContext`ASTPattern[
              Pattern[$CellContext`expr, {
                Pattern[$CellContext`a, 
                 Blank[]], 
                Pattern[$CellContext`a, 
                 Blank[]], 
                Pattern[$CellContext`a, 
                 Blank[]]}]] :> $CellContext`FromAST[$CellContext`expr], 
            Infinity]], "ExpectedOutput" -> HoldForm[{{1, 1, 1}, {2, 2, 2}}], 
         "ActualOutput" -> HoldForm[{{1, 1, 1}, {2, 2, 2}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869868859`16.63951930800018*^9, 
         "AbsoluteTimeUsed" -> 0.002`4.451544993495968, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3448|>], 4258532520418220805 -> 
      TestResultObject[<|
        "TestKey" -> 4258532520418220805, "TestID" -> 
         "Two-Arguments@@Definitions/ASTPattern/Tests.wlt:164,1-172,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            Pattern[$CellContext`id, 
             Blank[String]], 
            Pattern[$CellContext`as1, 
             Blank[]]]], "ExpectedOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Alternatives[String, 
              CodeParser`LeafNode[Symbol, 
               Alternatives["String", "System`String"], 
               Blank[]]], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ActualOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Alternatives[String, 
              CodeParser`LeafNode[Symbol, 
               Alternatives["String", "System`String"], 
               Blank[]]], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869888859`16.639519308000406*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4080|>], 
      1461176011808469498 -> 
      TestResultObject[<|
        "TestKey" -> 1461176011808469498, "TestID" -> 
         "Nested-Meta-Bindings@@Definitions/ASTPattern/Tests.wlt:174,1-189,2",
          "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Cases[
            CodeParser`CodeParse[
            
            "VerificationTest[1 + 1, 2, TestID -> \"Addition\", SameTest -> \
SameQ]"], $CellContext`ASTPattern[
              Condition[
               HoldPattern[
                VerificationTest[
                 BlankSequence[], TestID -> $CellContext`ASTPattern[
                   Pattern[$CellContext`id, 
                    Blank[String]], 
                   Pattern[$CellContext`as1, 
                    Blank[]]], 
                 BlankNullSequence[]]], 
               StringQ[$CellContext`id]], 
              Pattern[$CellContext`as2, 
               Blank[]]] :> 
            Lookup[{$CellContext`as1, $CellContext`as2}, CodeParser`Source], 
            Infinity]], "ExpectedOutput" -> 
         HoldForm[{{{{1, 38}, {1, 48}}, {{1, 1}, {1, 68}}}}], "ActualOutput" -> 
         HoldForm[{{{{1, 38}, {1, 48}}, {{1, 1}, {1, 68}}}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869898861`16.63951930800052*^9, 
         "AbsoluteTimeUsed" -> 0.0020003`4.45161013278293, "CPUTimeUsed" -> 
         0., "MemoryUsed" -> 3928|>], 8083771004247715188 -> 
      TestResultObject[<|
        "TestKey" -> 8083771004247715188, "TestID" -> 
         "Meta-Unknown-Head@@Definitions/ASTPattern/Tests.wlt:191,1-195,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            Pattern[$CellContext`id, 
             Blank[]], 
            Pattern[$CellContext`as1, 
             Blank[]]]], "ExpectedOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Blank[], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ActualOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Blank[], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869918864`16.639519308000747*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3648|>], 
      2798721317233094830 -> 
      TestResultObject[<|
        "TestKey" -> 2798721317233094830, "TestID" -> 
         "TestParse-VerificationTest@@Definitions/ASTPattern/Tests.wlt:200,1-\
204,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["VerificationTest[x,y]", 
            VerificationTest[
             BlankNullSequence[]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869918864`16.639519308000747*^9, "AbsoluteTimeUsed" -> 
         0.002`4.451544993495968, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4712|>], 7612083921316488852 -> 
      TestResultObject[<|
        "TestKey" -> 7612083921316488852, "TestID" -> 
         "TestParse-Normal@@Definitions/ASTPattern/Tests.wlt:206,1-210,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[x,y]", 
            $CellContext`f[
             Blank[], 
             Blank[]]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869938864`16.639519308000967*^9, "AbsoluteTimeUsed" -> 
         0.0009997`4.150384689940255, "CPUTimeUsed" -> 0.016000000000000014`, 
         "MemoryUsed" -> 4448|>], 313972716093152582 -> 
      TestResultObject[<|
        "TestKey" -> 313972716093152582, "TestID" -> 
         "TestParse-Atom-Real@@Definitions/ASTPattern/Tests.wlt:212,1-216,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["2.5", 
            Blank[Real]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869958862`16.639519308001194*^9, "AbsoluteTimeUsed" -> 
         0.0009996`4.150341245286399, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3936|>], 7005536708175638947 -> 
      TestResultObject[<|
        "TestKey" -> 7005536708175638947, "TestID" -> 
         "TestParse-Atom-Integer@@Definitions/ASTPattern/Tests.wlt:218,1-222,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["2", 
            Blank[Integer]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869968858`16.639519308001304*^9, "AbsoluteTimeUsed" -> 
         0.0010003`4.1506452666372144, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3984|>], 8655220183867058069 -> 
      TestResultObject[<|
        "TestKey" -> 8655220183867058069, "TestID" -> 
         "TestParse-Atom-String@@Definitions/ASTPattern/Tests.wlt:224,1-228,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["\"hello\"", 
            Blank[String]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869988863`16.639519308001532*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4144|>], 6783776213647455586 -> 
      TestResultObject[<|
        "TestKey" -> 6783776213647455586, "TestID" -> 
         "TestParse-Atom-Symbol@@Definitions/ASTPattern/Tests.wlt:230,1-234,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["x", 
            Blank[Symbol]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869998863`16.639519308001642*^9, "AbsoluteTimeUsed" -> 
         0.0009998`4.150428130248559, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3872|>], 816865204650829757 -> 
      TestResultObject[<|
        "TestKey" -> 816865204650829757, "TestID" -> 
         "TestParse-Atom-Rational@@Definitions/ASTPattern/Tests.wlt:236,1-240,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           With[{$CellContext`expr = 2/3}, 
            $CellContext`testParse["2/3", $CellContext`expr]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231870018861`16.63951930800187*^9, 
         "AbsoluteTimeUsed" -> 0.0010001`4.15055842510885, "CPUTimeUsed" -> 
         0., "MemoryUsed" -> 4976|>], 2907107794444957797 -> 
      TestResultObject[<|
        "TestKey" -> 2907107794444957797, "TestID" -> 
         "TestParse-Atom-Complex@@Definitions/ASTPattern/Tests.wlt:242,1-246,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           With[{$CellContext`expr = 2 + 3 I}, 
            $CellContext`testParse["2 + 3 I", $CellContext`expr]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231870038865`16.639519308002097*^9, 
         "AbsoluteTimeUsed" -> 0.0019995`4.451436406301528, "CPUTimeUsed" -> 
         0., "MemoryUsed" -> 4936|>], 8868154888725522663 -> 
      TestResultObject[<|
        "TestKey" -> 8868154888725522663, "TestID" -> 
         "TestParse-Pattern@@Definitions/ASTPattern/Tests.wlt:248,1-252,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            Pattern[$CellContext`x, 
             Blank[Integer]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187005886`16.63951930800232*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4096|>], 3864539799504511156 -> 
      TestResultObject[<|
        "TestKey" -> 3864539799504511156, "TestID" -> 
         "TestParse-Nested-Pattern@@Definitions/ASTPattern/Tests.wlt:254,1-\
258,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[5]", 
            Pattern[$CellContext`e, 
             $CellContext`f[
              Pattern[$CellContext`x, 
               Blank[Integer]]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187006886`16.639519308002434*^9, "AbsoluteTimeUsed" -> 
         0.0020002`4.451588420772831, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5072|>], 2579880981337850190 -> 
      TestResultObject[<|
        "TestKey" -> 2579880981337850190, "TestID" -> 
         "TestParse-Condition-1@@Definitions/ASTPattern/Tests.wlt:260,1-264,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[5]", 
            Condition[
             $CellContext`f[
              Pattern[$CellContext`x, 
               Blank[Integer]]], 
             Positive[$CellContext`x]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870088862`16.639519308002658*^9, "AbsoluteTimeUsed" -> 
         0.002`4.451544993495968, "CPUTimeUsed" -> 0.016000000000000014`, 
         "MemoryUsed" -> 3464|>], 6928783014809508645 -> 
      TestResultObject[<|
        "TestKey" -> 6928783014809508645, "TestID" -> 
         "TestParse-Condition-2@@Definitions/ASTPattern/Tests.wlt:266,1-270,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[5]", 
            Condition[
             $CellContext`f[
              Pattern[$CellContext`x, 
               Blank[Integer]]], 
             Negative[$CellContext`x]]]], "ExpectedOutput" -> HoldForm[False],
          "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870108862`16.639519308002885*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3168|>], 7776121120638357072 -> 
      TestResultObject[<|
        "TestKey" -> 7776121120638357072, "TestID" -> 
         "TestParse-Condition-3@@Definitions/ASTPattern/Tests.wlt:272,1-279,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse[
           "VerificationTest[1+1, 2, TestID -> \"test\"]", 
            Condition[
             VerificationTest[
              BlankSequence[], TestID -> Pattern[$CellContext`id, 
                Blank[]], 
              BlankNullSequence[]], 
             StringQ[$CellContext`id]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870128861`16.63951930800311*^9, "AbsoluteTimeUsed" -> 
         0.0009997`4.150384689940255, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3352|>], 7442183042912551960 -> 
      TestResultObject[<|
        "TestKey" -> 7442183042912551960, "TestID" -> 
         "TestParse-Condition-4@@Definitions/ASTPattern/Tests.wlt:281,1-288,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse[
           "VerificationTest[1+1, 2, TestID -> Automatic]", 
            Condition[
             VerificationTest[
              BlankSequence[], TestID -> Pattern[$CellContext`id, 
                Blank[]], 
              BlankNullSequence[]], 
             StringQ[$CellContext`id]]]], "ExpectedOutput" -> HoldForm[False],
          "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870148861`16.639519308003333*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3328|>], 8593663584502502144 -> 
      TestResultObject[<|
        "TestKey" -> 8593663584502502144, "TestID" -> 
         "TestParse-PatternTest-1@@Definitions/ASTPattern/Tests.wlt:290,1-294,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            PatternTest[
             Blank[Integer], IntegerQ]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870168863`16.63951930800356*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3688|>], 4543118123278565208 -> 
      TestResultObject[<|
        "TestKey" -> 4543118123278565208, "TestID" -> 
         "TestParse-PatternTest-2@@Definitions/ASTPattern/Tests.wlt:296,1-300,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            PatternTest[
             Pattern[$CellContext`x, 
              Blank[Integer]], IntegerQ]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870178862`16.63951930800367*^9, "AbsoluteTimeUsed" -> 
         0.0020003`4.45161013278293, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3672|>], 5181749392886667861 -> 
      TestResultObject[<|
        "TestKey" -> 5181749392886667861, "TestID" -> 
         "TestParse-PatternTest-3@@Definitions/ASTPattern/Tests.wlt:302,1-306,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            Condition[
             Pattern[$CellContext`x, 
              Blank[]], 
             IntegerQ[$CellContext`x]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870198865`16.639519308003898*^9, "AbsoluteTimeUsed" -> 
         0.0009998`4.150428130248559, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3088|>], 170584252648549992 -> 
      TestResultObject[<|
        "TestKey" -> 170584252648549992, "TestID" -> 
         "TestParse-Except-1@@Definitions/ASTPattern/Tests.wlt:308,1-312,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Integer]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187021886`16.639519308004125*^9, "AbsoluteTimeUsed" -> 
         0.0010001`4.15055842510885, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4760|>], 5901541051884337485 -> 
      TestResultObject[<|
        "TestKey" -> 5901541051884337485, "TestID" -> 
         "TestParse-Except-2@@Definitions/ASTPattern/Tests.wlt:314,1-318,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Real]]]]], "ExpectedOutput" -> HoldForm[False], 
         "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870228861`16.639519308004235*^9, "AbsoluteTimeUsed" -> 
         0.0020004`4.451631843707617, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4792|>], 583682963263439423 -> 
      TestResultObject[<|
        "TestKey" -> 583682963263439423, "TestID" -> 
         "TestParse-Except-3@@Definitions/ASTPattern/Tests.wlt:320,1-324,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Integer], 
              Blank[Real]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870248865`16.639519308004463*^9, "AbsoluteTimeUsed" -> 
         0.0009995`4.150297796286123, "CPUTimeUsed" -> 0.015000000000000568`, 
         "MemoryUsed" -> 5392|>], 2118227091666834973 -> 
      TestResultObject[<|
        "TestKey" -> 2118227091666834973, "TestID" -> 
         "TestParse-Except-4@@Definitions/ASTPattern/Tests.wlt:326,1-330,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Integer], 
              Blank[String]]]]], "ExpectedOutput" -> HoldForm[False], 
         "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870268862`16.63951930800469*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5472|>], 5601218938690331369 -> 
      TestResultObject[<|
        "TestKey" -> 5601218938690331369, "TestID" -> 
         "TestParse-Except-5@@Definitions/ASTPattern/Tests.wlt:332,1-336,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[\"hello\"]", 
            $CellContext`f[
             Except[
              Blank[Integer], 
              Blank[String]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870278861`16.6395193080048*^9, "AbsoluteTimeUsed" -> 
         0.0020001`4.451566707677213, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5392|>], 4333676819781669502 -> 
      TestResultObject[<|
        "TestKey" -> 4333676819781669502, "TestID" -> 
         "TestParse-PatternSequence-1@@Definitions/ASTPattern/Tests.wlt:338,1-\
342,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{a,b,c,d,c,d,a,b}", {
             Pattern[$CellContext`x, 
              BlankSequence[]], 
             PatternSequence[$CellContext`c, $CellContext`d, $CellContext`c], 
             Pattern[$CellContext`y, 
              BlankSequence[]]}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870298862`16.639519308005028*^9, "AbsoluteTimeUsed" -> 
         0.0019999`4.451523278228987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         6352|>], 4015300347626598236 -> 
      TestResultObject[<|
        "TestKey" -> 4015300347626598236, "TestID" -> 
         "TestParse-PatternSequence-3@@Definitions/ASTPattern/Tests.wlt:344,1-\
348,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{a,b,a,b,a,b,a,b,a,b}", {
             Repeated[
              PatternSequence[
               Pattern[$CellContext`x, 
                Blank[]], 
               Pattern[$CellContext`x, 
                Blank[]]]]}]], "ExpectedOutput" -> HoldForm[False], 
         "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870318861`16.639519308005248*^9, "AbsoluteTimeUsed" -> 
         0.0020001`4.451566707677213, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         6320|>], 5397355103116662808 -> 
      TestResultObject[<|
        "TestKey" -> 5397355103116662808, "TestID" -> 
         "Reused-Pattern-Bindings-1@@Definitions/ASTPattern/Tests.wlt:350,1-\
354,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{1,1,2,2}", 
            $CellContext`ASTPattern[{
              Pattern[$CellContext`x, 
               Blank[]], 
              Pattern[$CellContext`x, 
               Blank[]], 
              Pattern[$CellContext`y, 
               Blank[]], 
              Pattern[$CellContext`y, 
               Blank[]]}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870338862`16.639519308005475*^9, "AbsoluteTimeUsed" -> 
         0.0010002`4.150601848043636, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         6880|>], 6607831332145459392 -> 
      TestResultObject[<|
        "TestKey" -> 6607831332145459392, "TestID" -> 
         "Nested-ASTPattern-Held@@Definitions/ASTPattern/Tests.wlt:356,1-363,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["1+1", 
            $CellContext`ASTPattern[
             
             HoldPattern[$CellContext`ASTPattern[1] + $CellContext`ASTPattern[
               1]]]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870358861`16.639519308005703*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4368|>], 1984084337656061317 -> 
      TestResultObject[<|
        "TestKey" -> 1984084337656061317, "TestID" -> 
         "Reused-Bindings-Condition@@Definitions/ASTPattern/Tests.wlt:365,1-\
369,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{1,1}", 
            $CellContext`ASTPattern[
             Condition[{
               Pattern[$CellContext`x, 
                Blank[]], 
               Pattern[$CellContext`x, 
                Blank[]]}, 
              IntegerQ[$CellContext`x]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187036886`16.639519308005813*^9, "AbsoluteTimeUsed" -> 
         0.0020002`4.451588420772831, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3272|>], 3199565014317971860 -> 
      TestResultObject[<|
        "TestKey" -> 3199565014317971860, "TestID" -> 
         "FromAST-Bindings@@Definitions/ASTPattern/Tests.wlt:374,1-389,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Cases[
            CodeParser`CodeParse[
            "VerificationTest[1 + 1, 2, TestID -> \"Addition\", SameTest -> \
SameQ]"], $CellContext`ASTPattern[
              Condition[
               HoldPattern[
                VerificationTest[
                 BlankSequence[], TestID -> $CellContext`ASTPattern[
                   Pattern[$CellContext`id, 
                    Blank[String]], 
                   Pattern[$CellContext`as1, 
                    Blank[]]], 
                 BlankNullSequence[]]], 
               StringQ[$CellContext`id]], 
              Pattern[$CellContext`as2, 
               Blank[]]] :> $CellContext`FromAST[$CellContext`id], Infinity]],
          "ExpectedOutput" -> HoldForm[{"Addition"}], "ActualOutput" -> 
         HoldForm[{"Addition"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870388862`16.63951930800604*^9, "AbsoluteTimeUsed" -> 
         0.002`4.451544993495968, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3640|>], 6840058010111794540 -> 
      TestResultObject[<|
        "TestKey" -> 6840058010111794540, "TestID" -> 
         "EquivalentNodeQ-1@@Definitions/ASTPattern/Tests.wlt:394,1-408,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Enclose[
            Apply[$CellContext`EquivalentNodeQ, 
             ConfirmMatch[
              Cases[
               CodeParser`CodeParse["{f[x],f[x]}"], 
               $CellContext`ASTPattern[
                Blank[][
                 Blank[]]], Infinity], {
               Blank[], 
               Blank[]}]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870418858`16.639519308006378*^9, "AbsoluteTimeUsed" -> 
         0.0010005`4.150732090804218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3544|>], 415609042826955174 -> 
      TestResultObject[<|
        "TestKey" -> 415609042826955174, "TestID" -> 
         "FromAST-Sequence-1@@Definitions/ASTPattern/Tests.wlt:413,1-417,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{a,a,a}", 
            $CellContext`ASTPattern[
             Condition[{
               Pattern[$CellContext`x, 
                Repeated[
                 Blank[]]]}, 
              SameQ[$CellContext`x]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870438862`16.6395193080066*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3296|>], 818340795497030278 -> 
      TestResultObject[<|
        "TestKey" -> 818340795497030278, "TestID" -> 
         "Reset-MessageFailure-TestMode@@Definitions/ASTPattern/Tests.wlt:431,\
1-436,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> MatchQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           SetOptions[
            ResourceFunction["MessageFailure"], "TestMode" -> False]], 
         "ExpectedOutput" -> HoldForm[
           KeyValuePattern["TestMode" -> False]], "ActualOutput" -> 
         HoldForm[{
           "MessageFunction" -> Automatic, "Verbose" -> False, "Stack" -> 
            False, "TestMode" -> False}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870458862`16.63951930800683*^9, "AbsoluteTimeUsed" -> 
         0.0010001`4.15055842510885, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3640|>]|>, "TestsSucceededKeys" -> CompressedData["
1:eJwtlMmtFEEQRP8BC8ACPMh9MQGJEyZwQOLEAfwXr7paGs2S1ZUZERkxX3/+
+fErPj4+/n7i7fvvv/++feFLzrZPx2bmaFnaPPVa99bd7U7P5KCf+rRauMhG
manamj/11QzJKYvxndzweuoWUprV7ibr0tz/9vk8L63lo13lGmm6z+MMW1Gh
dTrImDPP40XH5kBbTJtWch/npg0cpiqixv3W08M4GhGLcofFrYent2tK9ah5
y/bLNluBRivtWd2Kyza11d1prjG8TTxwjlgjneYRsdWaT7kn2m396OZL1a4G
NSHBwEFJkdS5aLSzjesyjkCz8YqQpwc449HIOMmL3nI4SxOAmMnIrWuUIqQo
jSdqY+8O+eXdKoIYfDL31q132tQREsGWjb1qltLU9xxVzAz4Dy1XyBhY2CCc
ci4ttpMJckGzrIP/tUglWxEdHw5zpC4tNAdO0b2CxSFhPe2xHVcgVSlj26/T
7FhEujeOxsmXt/3UYDbgtZ1BGOipMy1wT++mRKriutsnoTsYiUX2pOjrnVob
EAmLFa6c25dWHx2wtsDJs6VfuhEGJ8RcZTAekdcj62DIiRTjpXG9ExnORrCZ
MfYQvOqzBiVvyAyTQpS6idCjFSs2pM/AQXdskocMPa6ZgAGH14KYBrXwR3n4
xptDgGMNjK30Hg/SfdtgD+AvKq04G32XEsfdjaJLIoocyB0bTCXmHiyM8I29
eT4K42IVuDGBiL3/F0W2aevwz8hD73pz8f4DvIBQx3R3W2QEUVCfClGZV80T
leMZoo6nl17y0A3WSerDxgBJLOP1zpyYLIK1uKD0f19k30Q=
     "], "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output", "Excluded",
 CellChangeTimes->{3.854023187065888*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"5295b0df-3db5-4cb2-a5b4-d228105895ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellLabel->"In[2]:=",ExpressionUUID->"578f2a63-2f74-45c5-b05d-cc0673e4d67d"],

Cell[TextData[{
 "Create an AST pattern that will match any ",
 Cell[BoxData["CallNode"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "af22b6c2-17c7-4d29-8661-d28af98c7b5b"],
 " or ",
 Cell[BoxData["LeafNode"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2690e46f-9505-4f74-9a67-91ef4d8d46d1"],
 " generated by ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["CodeParse", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:CodeParser/ref/CodeParse",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f91184d2-c737-44a8-9a67-f9ae5d1bc069"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539530607962*^9, 3.853953076640094*^9}, {
  3.854013617957526*^9, 3.8540136303503723`*^9}, {3.8540138256105824`*^9, 
  3.854013858173915*^9}, {3.854013940308746*^9, 
  3.8540139435948935`*^9}},ExpressionUUID->"ab803820-cb82-4eeb-8000-\
bb6331eb10e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", "_", "]"}]], "Input",
 CellChangeTimes->{3.8539530580083337`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"361445bc-6c22-4526-ae99-adb9bf5cd056"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
  RowBox[{"_", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{
  3.853953116334871*^9, 3.8539552698797708`*^9, 3.8539553012115946`*^9, 
   3.8539561778950815`*^9, 3.8539567064933624`*^9, 3.853957552741788*^9, 
   3.8539583046462755`*^9, 3.8539583457225943`*^9, 3.853958389724491*^9, 
   3.853958566726469*^9, 3.853958693999267*^9, {3.853958749483903*^9, 
   3.853958771822261*^9}, 3.85395936768093*^9, 3.8539594201580925`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"972fa1ec-c9b9-4e28-b165-0b29625040ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "076021e2-1976-47dd-abb2-fc90c3efd473"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"811179cd-3491-4496-892f-\
1e87112ea82e"],

Cell["Specify a head:", "Text",
 CellChangeTimes->{{3.853953129241638*^9, 
  3.8539531315664196`*^9}},ExpressionUUID->"32594e0f-0366-49e2-b989-\
cd81992ad36e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", "_head", "]"}]], "Input",
 CellChangeTimes->{
  3.853953127508353*^9, {3.853956167933463*^9, 3.8539561687105627`*^9}, {
   3.853959415870312*^9, 3.853959416210515*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0014619a-7d68-4769-be0e-85642f0964d5"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"head\"\>", "|", "\<\"Global`head\"\>"}], ",", "_"}], "]"}], 
   ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{
  3.8539530148472004`*^9, 3.8539531330399914`*^9, 3.853955269883772*^9, 
   3.8539553012248487`*^9, 3.853956177910081*^9, 3.8539567065073643`*^9, 
   3.853957552756785*^9, 3.85395830466029*^9, 3.853958345743595*^9, 
   3.8539583897444906`*^9, 3.8539585667434683`*^9, 3.8539586940192633`*^9, {
   3.8539587495039034`*^9, 3.8539587718362627`*^9}, 3.8539593677059307`*^9, 
   3.853959420166094*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"51acbe5b-7aa6-495e-87ca-f9e823c08d99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "bf5a405f-2b2e-41ca-9b3d-16a19d268603"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"44174d14-ba23-4cc3-9d36-\
e01f9c3c6162"],

Cell["A function with two arguments:", "Text",
 CellChangeTimes->{{3.8539552843267484`*^9, 
  3.8539552903151016`*^9}},ExpressionUUID->"3e742070-59ac-48c1-bff1-\
1e136a2f2c35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", 
   RowBox[{"_", ",", "_"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853955293675892*^9, 3.853955296206617*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c6bf5ce9-4eda-45a3-829f-d7a67ad5a05a"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8539552980983863`*^9, 3.8539553012378488`*^9}, 
   3.8539561779150815`*^9, 3.8539567065223637`*^9, 3.8539575527717867`*^9, 
   3.8539583046663775`*^9, 3.853958345764598*^9, 3.853958389766491*^9, 
   3.853958566757468*^9, 3.853958694024263*^9, {3.853958749509903*^9, 
   3.85395877185226*^9}, 3.8539593677299275`*^9, 3.8539594362347336`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"970c9c66-dbd8-4ff4-a894-d054ccb227ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "594e210e-1b9e-442a-9de5-416a6afee205"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"75ac6f77-1114-4891-8201-\
81d21eab2abd"],

Cell["A function with any number of arguments:", "Text",
 CellChangeTimes->{{3.8539552843267484`*^9, 3.8539552903151016`*^9}, {
  3.85395935339021*^9, 
  3.8539593551892276`*^9}},ExpressionUUID->"896393c0-0fd0-4993-8470-\
228c82ca21ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", "___", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.853959360722892*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"1ef854a1-4e1a-464d-9a2c-bdf9cf6061c3"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8539593638315086`*^9, 3.853959370253462*^9}, 
   3.853959438742938*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a4b40892-7685-4a42-ba22-a3958c437903"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f7e35396-0ace-4541-8988-8182c8351cc4"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"5103785d-2b14-4bf1-898a-\
e5bd828569f1"],

Cell[TextData[{
 "A named ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Pattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Pattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8a697955-b461-4b61-9ea9-009bd0ba02d3"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539532314198513`*^9, 
  3.853953265827901*^9}},ExpressionUUID->"426f844c-07dd-4d1a-9953-\
4edb7f2364de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", "a_Integer", "]"}]], "Input",
 CellChangeTimes->{{3.853953236855129*^9, 3.8539532388586226`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b5eec055-fb92-4722-82dc-6ffc43bedc15"],

Cell[BoxData[
 RowBox[{"a", ":", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
   RowBox[{
    RowBox[{"Integer", "|", 
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", 
       RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", "_"}],
       "]"}]}], ",", "_", ",", "_"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.8539532396330733`*^9, {3.85395532520807*^9, 3.8539553505852747`*^9}, 
   3.8539561456559477`*^9, 3.8539567122490597`*^9, 3.8539575577783947`*^9, 
   3.853958306962576*^9, 3.853958345800598*^9, 3.8539583897984915`*^9, 
   3.8539585709276915`*^9, 3.8539586940562673`*^9, {3.853958749532903*^9, 
   3.8539587718662634`*^9}, 3.853959377336836*^9, 3.8539594408811626`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a476caab-367c-4306-b5f6-6058ac279130"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "af3cfb1e-a1b7-4fff-87bf-627c9c06c5c6"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"a24dfb12-f3f6-44d3-b710-\
e96ac14408b7"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Repeated", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Repeated",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2fcf4b54-9b6e-4241-a599-0bbc3366391a"],
 " pattern:"
}], "Text",
 CellChangeTimes->{{3.853959286711318*^9, 
  3.8539592949647903`*^9}},ExpressionUUID->"aaa63084-bfba-49bb-ae8d-\
5fe444a67f6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"_Integer", "?", "IntegerQ"}], "|", 
      RowBox[{"_String", "?", "StringQ"}]}], ")"}], ".."}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"a73b1b6f-ab6c-4abe-9dfd-dc23c05e67f1"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"List\"\>", "|", "\<\"System`List\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Integer", ",", "_", ",", "_"}], "]"}], "|", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"String", ",", "_", ",", "_"}], "]"}]}], ")"}], ".."}], "}"}],
    ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{{3.8539592981011686`*^9, 3.853959312976812*^9}, 
   3.8539593888207026`*^9, 3.853959446875128*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"ffa7cb38-b0dd-4cd1-aae4-6494ee9a3c34"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "47514dfe-4a47-49cf-b27d-b9b601e92b90"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"d55d9774-d6d0-415e-9ca7-\
93d68b95c850"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Verbatim", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Verbatim",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3f40cef7-72de-400e-b420-0f210435a5db"],
 " pattern:"
}], "Text",
 CellChangeTimes->{{3.8540155287104645`*^9, 
  3.8540155349596124`*^9}},ExpressionUUID->"4a7384ff-6ddc-49d0-96ed-\
710cea9c7e02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"Verbatim", "[", "_Integer", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540155426386495`*^9, 3.854015550318524*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5795359e-6211-4639-adbb-39cb1ecdafbb"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"Blank\"\>", "|", "\<\"System`Blank\"\>"}], ",", "_"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", 
      RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", "_"}], 
     "]"}], "}"}], ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854015554220561*^9, 3.854015942508485*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"3cb6518d-4812-4ee9-b532-90b471acff61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0ca9d831-d002-4e77-a483-bdd27782583d"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"ae91aee4-10b0-4ecc-b5b7-\
92c513fe8749"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["PatternSequence", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/PatternSequence",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "044e67a5-6ede-4eb7-9bd9-0a6e7a5f3c74"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540161937860584`*^9, 
  3.8540161997023516`*^9}},ExpressionUUID->"cfa20356-2023-44dd-9f44-\
7aac8fc0e1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"{", 
   RowBox[{"___", ",", 
    RowBox[{"PatternSequence", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "___"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.854016204746464*^9, 3.8540162352941957`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"cd0c686a-5174-4e17-8b17-091ad31a6781"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"List\"\>", "|", "\<\"System`List\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], ",", 
     RowBox[{"PatternSequence", "[", 
      RowBox[{
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Symbol", ",", 
         RowBox[{"\<\"x\"\>", "|", "\<\"Global`x\"\>"}], ",", "_"}], "]"}], 
       ",", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Symbol", ",", 
         RowBox[{"\<\"y\"\>", "|", "\<\"Global`y\"\>"}], ",", "_"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}]}], "}"}], ",", "_"}],
   "]"}]], "Output",
 CellChangeTimes->{3.8540162375101995`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"3af117a4-9bec-4c56-b9e2-bba3e5cd52d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "184d7307-e6c2-4098-87e7-7cbdab11e188"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"5db62ad1-f469-47bc-9fa1-\
5b637aed8122"],

Cell[TextData[{
 "A pattern for unevaluated code wrapped in ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6fdfb2b7-187d-4ccd-a6d9-95c74bbd257f"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540181418539095`*^9, 3.8540181554566755`*^9}, {
  3.854018203862276*^9, 
  3.8540182101897364`*^9}},ExpressionUUID->"654520e2-6f8a-48f0-85a4-\
86f1e23567e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"HoldPattern", "[", 
   RowBox[{"1", "+", "1"}], "]"}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"9fc981dd-a045-47f3-9669-8ccae9d04d04"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"Plus\"\>", "|", "\<\"System`Plus\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}], ",", 
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}]}], "}"}], ",", 
   "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854018110706929*^9, 3.854018159340761*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"df5ac99f-65af-419a-8e22-6396e31016f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "641a2bbc-2bb4-4acf-85ae-b1910f03d05b"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"2d925425-b9d6-4cd4-bfc1-\
c61642b93168"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["PatternTest", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/PatternTest",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5036598c-9e68-425e-bb4d-0bf18a91a66d"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539533303893356`*^9, 
  3.8539533357744226`*^9}},ExpressionUUID->"4cdfc7fd-2c34-4a19-9022-\
62acac104f3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_", "?", "test"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539533412880263`*^9, 3.853953342026178*^9}, 
   3.8539553370251894`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"9d2b744f-0da9-409e-843d-e0b004a04a7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
    RowBox[{"_", ",", "_", ",", "_"}], "]"}], ")"}], "?", 
  InterpretationBox[
   FrameBox[
    TooltipBox["test",
     RowBox[{
       TagBox["ASTPatternTest", HoldForm], "[", "test", "]"}]],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.368417, 0.506779, 0.709798],
    RoundingRadius->3],
   $CellContext`ASTPatternTest[$CellContext`test]]}]], "Output",
 CellChangeTimes->{
  3.853953343653387*^9, {3.853955328592116*^9, 3.853955350605275*^9}, 
   3.8539561456619473`*^9, 3.853956712259058*^9, 3.853957557788395*^9, 
   3.853958308680732*^9, 3.853958345827598*^9, 3.8539583898264904`*^9, 
   3.8539585709536986`*^9, 3.853958694082266*^9, {3.853958749540904*^9, 
   3.853958771886259*^9}, 3.8539593818821554`*^9, 3.8539594468411264`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"20c31163-5eb4-429b-bee8-3fc82831c262"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "51c26b04-6506-4b5c-89f8-66514191d4f1"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"a44d5b3e-429f-4efe-8f90-\
bf68b4e8cb96"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Condition", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Condition",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a2461643-21a9-4f7b-a811-585172963e03"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539532572136736`*^9, 
  3.8539532698970346`*^9}},ExpressionUUID->"d8e7383e-c506-437d-a875-\
375a4fedb381"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"a_", "/;", 
   RowBox[{"test", "[", "a", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8539532533094015`*^9, 3.8539532552154484`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6dc3050b-d94c-4225-81a9-252a68a7702b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", ":", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
    RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "/;", 
  InterpretationBox[
   FrameBox[
    TagBox[
     TooltipBox[
      RowBox[{"test", "[", "a", "]"}],
      RowBox[{
        TagBox["ASTCondition", HoldForm], "[", 
        RowBox[{
          RowBox[{"{", "a", "}"}], ",", 
          RowBox[{"test", "[", 
            RowBox[{"ASTConditionValue", "[", "1", "]"}], "]"}]}], "]"}]],
     Annotation[#, 
      HoldForm[$CellContext`ASTCondition][{$CellContext`a}, 
       $CellContext`test[
        $CellContext`ASTConditionValue[1]]], "Tooltip"]& ],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.880722, 0.611041, 0.142051],
    RoundingRadius->3],
   $CellContext`ASTCondition[{$CellContext`a}, 
    $CellContext`test[
     $CellContext`ASTConditionValue[1]]]]}]], "Output",
 CellChangeTimes->{
  3.8539532784997387`*^9, {3.8539553268160543`*^9, 3.8539553506112747`*^9}, 
   3.8539561456869497`*^9, 3.8539567122840586`*^9, 3.8539575578143954`*^9, 
   3.85395823632251*^9, 3.8539583107121525`*^9, 3.853958345836631*^9, 
   3.8539583898344903`*^9, 3.8539585833195252`*^9, 3.853958698547388*^9, {
   3.8539587495659018`*^9, 3.853958771904261*^9}, 3.8539593848215637`*^9, 
   3.853959446849128*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"adec78dc-c374-4e04-91dd-8116e0358d55"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "36f67392-cf52-45b9-8094-aa9efdac0365"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"32c44b2a-0322-46f4-8591-\
0db3ff3b26a6"],

Cell["Duplicate pattern bindings:", "Text",
 CellChangeTimes->{{3.853956108575596*^9, 3.853956140852723*^9}, {
  3.853959307006792*^9, 
  3.8539593085245996`*^9}},ExpressionUUID->"94b90002-6425-4e15-b12f-\
18207c9956a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"{", 
   RowBox[{"a_", ",", "a_", ",", "a_"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.853956091816716*^9, 3.8539561063291345`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"06c2d180-41d6-4330-9947-7c8683a10d25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CodeParser`CallNode", "[", 
   RowBox[{
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", 
      RowBox[{"\<\"List\"\>", "|", "\<\"System`List\"\>"}], ",", "_"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], ",", 
      RowBox[{"a$14885", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], ",", 
      RowBox[{"a$14886", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}]}], "}"}], ",", "_"}], 
   "]"}], "/;", 
  InterpretationBox[
   FrameBox[
    TooltipBox[
     RowBox[{"a", 
      StyleBox["\[TildeEqual]",
       FontWeight->"Heavy",
       FontColor->RGBColor[1, 0.5, 0]], "a$14885", 
      StyleBox["\[TildeEqual]",
       FontWeight->"Heavy",
       FontColor->RGBColor[1, 0.5, 0]], "a$14886"}],
     TagBox[
      RowBox[{
        TagBox["EquivalentNodeQ", HoldForm], "[", 
        RowBox[{"a", ",", "a$14885", ",", "a$14886"}], "]"}], HoldForm]],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.560181, 0.691569, 0.194885],
    RoundingRadius->3],
   $CellContext`EquivalentNodeQ[$CellContext`a, $CellContext`a$14885, \
$CellContext`a$14886]]}]], "Output",
 CellChangeTimes->{
  3.853956095831703*^9, 3.8539561456939516`*^9, 3.8539567195184946`*^9, 
   3.8539575578233957`*^9, 3.8539583133083396`*^9, 3.8539583480716963`*^9, 
   3.853958389858492*^9, 3.853958701251005*^9, {3.8539587495959034`*^9, 
   3.853958771923261*^9}, 3.8539593107505918`*^9, 3.8539593924938765`*^9, 
   3.8539594468831263`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7dc38c97-73f7-4875-bf14-42174067601b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "29dcf9ab-672b-42f3-8865-33188338f059"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"749a3a52-4370-4d08-9ca5-\
bbb581b5840b"],

Cell["Nested patterns:", "Text",
 CellChangeTimes->{{3.8539564370383615`*^9, 
  3.853956440166623*^9}},ExpressionUUID->"f807a7d3-364f-40ee-a2b7-\
d65da297a743"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"expr", ":", 
   RowBox[{"f", "[", 
    RowBox[{"_", ",", 
     RowBox[{"ASTPattern", "[", "arg_", "]"}], ",", "_"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8539563899581537`*^9, 3.8539564227462473`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"023b805e-51ce-4954-8b44-4126785b52e8"],

Cell[BoxData[
 RowBox[{"expr", ":", 
  RowBox[{"CodeParser`CallNode", "[", 
   RowBox[{
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", 
      RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
      RowBox[{"arg", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{
  3.8539564238632374`*^9, 3.853956719541495*^9, 3.853957567678649*^9, 
   3.8539583517307744`*^9, 3.853958389867491*^9, 3.853958709003215*^9, {
   3.8539587496199017`*^9, 3.8539587719422607`*^9}, 3.8539593953289585`*^9, 
   3.853959446906128*^9, 3.8540183040061064`*^9, 3.8540190373637013`*^9, 
   3.854019125557418*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f7b4eb6c-b940-4324-92b4-f67a6bea1477"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellLabel->"In[2]:=",ExpressionUUID->"4e4d557a-ac20-4f8d-83e9-2dbbdb5beb71"],

Cell[TextData[{
 "Use the second argument of ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f18130f1-d81f-48b6-95f4-c63d821f7d82"],
 " to match node metadata:"
}], "Text",
 CellChangeTimes->{{3.8539541475403337`*^9, 3.853954160662478*^9}, 
   3.8539544948724084`*^9},ExpressionUUID->"c7242716-3de4-4c65-9b14-\
8402f1158466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<f[x_]:=x+y;\\ny=1;\>\"", "]"}], 
   ",", 
   RowBox[{
    RowBox[{"ASTPattern", "[", 
     RowBox[{"_", ",", 
      RowBox[{"KeyValuePattern", "[", 
       RowBox[{"\"\<Definitions\>\"", "->", "defs_"}], "]"}]}], "]"}], ":>", 
    "defs"}], ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{
  3.85395404438877*^9, {3.8539544892374396`*^9, 3.8539545399657173`*^9}, {
   3.8539545812075934`*^9, 3.853954583842742*^9}, {3.853954641123514*^9, 
   3.8539546427611704`*^9}, {3.853954758271051*^9, 3.8539548483340373`*^9}, {
   3.8539568143910303`*^9, 3.85395682053382*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"88ade386-71a1-44ca-8e33-f170f418dcac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", "\<\"y\"\>", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8539548525869*^9, 3.8539553573150015`*^9, 
  3.8539568253824835`*^9, 3.853958781680317*^9, 3.8539588407781086`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"8077fecd-ea11-4eb6-8366-e9717d029248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ca569fc9-6a5a-4e0d-b2b5-0c31734e1494"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"5ee2859b-128f-4267-9e15-\
a530923afb36"],

Cell["Match only nodes that start on a particular line:", "Text",
 CellChangeTimes->{{3.8539542907148843`*^9, 
  3.853954303204687*^9}},ExpressionUUID->"c782c54e-ea2e-44cb-b421-\
97bb38dc1a06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\\n2+2\\n3+3\>\"", "]"}], ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"_", ",", 
     RowBox[{"KeyValuePattern", "[", 
      RowBox[{"CodeParser`Source", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "_"}], "}"}], ",", "_"}], "}"}]}], "]"}]}], "]"}],
    ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{
  3.85395404438877*^9, {3.8539543119607663`*^9, 3.853954316828023*^9}, 
   3.8539548654885454`*^9, {3.8539568310332994`*^9, 3.8539568375588026`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f109ebe9-f944-4de3-9945-1fb696ee3bf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", "\<\"Plus\"\>", ",", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"CodeParser`Source", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], 
          "\[RightAssociation]"}]}], "]"}], ",", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"CodeParser`Source", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], 
          "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.853954320877051*^9, 3.8539543389146805`*^9}, 
   3.8539548672365804`*^9, 3.8539553614967976`*^9, 3.853956839620733*^9, 
   3.853958840819109*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"231c2d2b-7cb5-4023-9d00-9f8861aa07c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "4d926ae2-2e30-4acc-9882-573fb8a30286"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"0e435881-3615-425b-a4d3-\
69d9d7381ee7"],

Cell["Bind parts of metadata in pattern names:", "Text",
 CellChangeTimes->{{3.8539543511589384`*^9, 
  3.8539543615264187`*^9}},ExpressionUUID->"ee7136be-982f-45e6-b70c-\
055d1ab58c55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ast", "=", 
  RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.853954026633562*^9, 3.853954065021411*^9}, {
  3.8539543671374464`*^9, 3.853954367983822*^9}, {3.853956844528837*^9, 
  3.853956847444027*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c900066b-cad5-4f37-8307-e752b7b589f7"],

Cell[BoxData[
 RowBox[{"CodeParser`ContainerNode", "[", 
  RowBox[{"String", ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", "\<\"Plus\"\>", ",", 
        RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8539540403211875`*^9, 3.8539540656120133`*^9}, 
   3.8539541654461904`*^9, {3.853954370584797*^9, 3.85395440628231*^9}, 
   3.8539544534107113`*^9, 3.853954875089409*^9, 3.853955366342969*^9, {
   3.8539568494821215`*^9, 3.853956857996665*^9}, 3.853958840865108*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4aff7523-def0-4094-8de8-3c721a828621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rule", "=", 
  RowBox[{
   RowBox[{"ASTPattern", "[", 
    RowBox[{"node_Plus", ",", 
     RowBox[{"meta", ":", 
      RowBox[{"KeyValuePattern", "[", 
       RowBox[{"CodeParser`Source", "->", "src_"}], "]"}]}]}], "]"}], ":>", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<String\>\"", "->", 
      RowBox[{"CodeParser`ToFullFormString", "[", "node", "]"}]}], ",", 
     RowBox[{"\"\<Source\>\"", "->", "src"}], ",", 
     RowBox[{"\"\<Metadata\>\"", "->", "meta"}]}], "|>"}]}]}]], "Input",
 CellChangeTimes->{{3.853954019890253*^9, 3.8539540243435745`*^9}, {
  3.8539540555487995`*^9, 3.8539541289886503`*^9}, {3.853954395117795*^9, 
  3.8539544495925627`*^9}, {3.8539568524233665`*^9, 3.8539568544973803`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9411e2d3-c925-4807-bfde-162cff64c435"],

Cell[BoxData[
 RowBox[{
  RowBox[{"node", ":", 
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", 
       RowBox[{"\<\"Plus\"\>", "|", "\<\"System`Plus\"\>"}], ",", "_"}], 
      "]"}], ",", "_", ",", 
     RowBox[{"meta", ":", 
      RowBox[{"KeyValuePattern", "[", 
       RowBox[{"CodeParser`Source", "\[Rule]", "src_"}], "]"}]}]}], "]"}]}], 
  "\[RuleDelayed]", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{"\<\"String\"\>", "\[Rule]", 
     RowBox[{"CodeParser`ToFullFormString", "[", "node", "]"}]}], ",", 
    RowBox[{"\<\"Source\"\>", "\[Rule]", "src"}], ",", 
    RowBox[{"\<\"Metadata\"\>", "\[Rule]", "meta"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.8539540566699753`*^9, 3.853954130399675*^9}, 
   3.8539541654621916`*^9, {3.853954384405614*^9, 3.85395440630431*^9}, 
   3.8539544534307103`*^9, 3.8539548751104136`*^9, 3.85395536636497*^9, 
   3.853956858017665*^9, 3.853958840888109*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"635d3d6a-68a1-488f-997e-bed1a86d4ba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", "rule", ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.853954094924288*^9, 3.8539540980972223`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"858be51a-978b-400d-ac16-c851ed418087"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"String\"\>", "\[Rule]", "\<\"Plus[1, 1]\"\>"}], ",", 
    RowBox[{"\<\"Source\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"\<\"Metadata\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{{3.8539540985294447`*^9, 3.8539541313743515`*^9}, 
   3.8539541654771976`*^9, {3.8539543869992743`*^9, 3.8539544095559344`*^9}, 
   3.85395445515919*^9, 3.853954875115409*^9, 3.8539553663849707`*^9, 
   3.853956860362438*^9, 3.8539588408951087`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"3ff5086b-135e-4af8-bb48-50fad7d4ff68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Options", "Subsection",
 CellLabel->"In[4]:=",ExpressionUUID->"e9563be6-3afe-4252-82e5-1345ef6f03e6"],

Cell[CellGroupData[{

Cell["Applications", "Subsection",
 CellLabel->"In[9]:=",ExpressionUUID->"f82d2c28-fcdb-49a6-ba96-7ec42f2587c6"],

Cell["\<\
Parse a Wolfram Language file to get an abstract syntax tree:\
\>", "Text",
 CellChangeTimes->{{3.8539534642994647`*^9, 
  3.853953480979247*^9}},ExpressionUUID->"21c08b9e-5b7b-44f1-8de3-\
beb3f4dc6e47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"ast", "=", 
   RowBox[{"CodeParser`CodeParse", "[", 
    RowBox[{
     RowBox[{"File", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
     RowBox[{
     "\"\<SourceConvention\>\"", "->", "\"\<SourceCharacterIndex\>\""}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8540141162910113`*^9, 3.8540141185194893`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b8e55449-d450-4549-9dbe-8ae9ccb5ae3a"],

Cell[BoxData[
 TagBox[
  RowBox[{"CodeParser`ContainerNode", "[", 
   RowBox[{"File", ",", 
    RowBox[{"{", 
     RowBox[{"CodeParser`PackageNode", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"String", ",", "\<\"\\\"Collatz`\\\"\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"14", ",", "23"}], "}"}]}], "\[RightAssociation]"}]}], 
         "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CodeParser`CallNode", "[", 
          RowBox[{
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Symbol", ",", "\<\"Set\"\>", ",", 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"CodeParser`CallNode", "[", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "]"}], 
             ",", 
             RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "}"}], 
           ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"27", ",", "202"}], "}"}]}], ",", 
             RowBox[{"\<\"Definitions\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"CodeParser`LeafNode", "[", 
                RowBox[{"Symbol", ",", "\<\"Collatz\"\>", ",", 
                 RowBox[{"\[LeftAssociation]", 
                  RowBox[{"CodeParser`Source", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"27", ",", "33"}], "}"}]}], 
                  "\[RightAssociation]"}]}], "]"}], "}"}]}]}], 
            "\[RightAssociation]"}]}], "]"}], ",", 
         RowBox[{"CodeParser`ContextNode", "[", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"CodeParser`Source", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "406"}], "}"}]}], "\[RightAssociation]"}]}], 
      "]"}], "}"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "406"}], "}"}]}], ",", 
      RowBox[{"\<\"FileName\"\>", 
       "\[Rule]", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\
\\\\13.0\\\\Documentation\\\\English\\\\System\\\\ExampleData\\\\Collatz.m\"\>\
"}]}], "\[RightAssociation]"}]}], "]"}],
  Short[#, 3]& ]], "Output",
 CellChangeTimes->{3.8540141415807953`*^9},
 CellLabel->
  "Out[1]//Short=",ExpressionUUID->"eb31c116-61b4-49e2-b04a-6df6035327e2"]
}, Open  ]],

Cell["Extract all nodes from the AST that correspond to a pattern:", "Text",
 CellChangeTimes->{{3.853953542673546*^9, 3.853953551289359*^9}, {
  3.85395364436016*^9, 
  3.853953653196205*^9}},ExpressionUUID->"1807cbb2-5872-4071-ab4e-\
1cec87d37c79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nodes", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"ast", ",", 
    RowBox[{"ASTPattern", "[", 
     RowBox[{"Collatz", "[", 
      RowBox[{"_Plus", "|", "_Times"}], "]"}], "]"}], ",", "Infinity"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8539535525673885`*^9, 3.85395356296513*^9}, {
   3.853953658135634*^9, 3.853953695527049*^9}, 3.8539537504242115`*^9, {
   3.854014164779305*^9, 3.854014165542304*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"71e84744-8243-4588-848e-eaac8b141cb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", "\<\"Collatz\"\>", ",", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"CodeParser`Source", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"275", ",", "281"}], "}"}]}], "\[RightAssociation]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"Plus\"\>", ",", 
          RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CodeParser`CallNode", "[", 
           RowBox[{
            RowBox[{"CodeParser`LeafNode", "[", 
             RowBox[{"Symbol", ",", "\<\"Times\"\>", ",", 
              RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Integer", ",", "\<\"3\"\>", ",", 
                RowBox[{"\[LeftAssociation]", 
                 RowBox[{"CodeParser`Source", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"283", ",", "283"}], "}"}]}], 
                 "\[RightAssociation]"}]}], "]"}], ",", 
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Symbol", ",", "\<\"n\"\>", ",", 
                RowBox[{"\[LeftAssociation]", 
                 RowBox[{"CodeParser`Source", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"285", ",", "285"}], "}"}]}], 
                 "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"283", ",", "285"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"289", ",", "289"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"283", ",", "289"}], "}"}]}], "\[RightAssociation]"}]}], 
       "]"}], "}"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"275", ",", "290"}], "}"}]}], "\[RightAssociation]"}]}], 
    "]"}], ",", 
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", "\<\"Collatz\"\>", ",", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"CodeParser`Source", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"347", ",", "353"}], "}"}]}], "\[RightAssociation]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"Times\"\>", ",", 
          RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"n\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"355", ",", "355"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"CodeParser`CallNode", "[", 
           RowBox[{
            RowBox[{"CodeParser`LeafNode", "[", 
             RowBox[{"Symbol", ",", "\<\"Power\"\>", ",", 
              RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
                RowBox[{"\[LeftAssociation]", 
                 RowBox[{"CodeParser`Source", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"357", ",", "357"}], "}"}]}], 
                 "\[RightAssociation]"}]}], "]"}], ",", 
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Integer", ",", "\<\"-1\"\>", ",", 
                RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"355", ",", "357"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"355", ",", "357"}], "}"}]}], "\[RightAssociation]"}]}], 
       "]"}], "}"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"347", ",", "358"}], "}"}]}], "\[RightAssociation]"}]}], 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853953563528862*^9, {3.853953671698307*^9, 3.85395369605105*^9}, 
   3.853953751226714*^9, 3.853955385838209*^9, {3.8539568855470657`*^9, 
   3.8539569014036503`*^9}, 3.853958849722723*^9, 3.853959628380316*^9, 
   3.854014171466421*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"bb66f5ca-85a4-4ecf-b807-5911dfdf6e1c"]
}, Open  ]],

Cell["Convert to expressions:", "Text",
 CellChangeTimes->{{3.8540141905091143`*^9, 
  3.854014194295802*^9}},ExpressionUUID->"054b6a03-49da-4dfb-a9b9-\
5a7702d57fa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  RowBox[{
   RowBox[{"CodeParser`ToFullFormString", "/@", "nodes"}], ",", "InputForm", 
   ",", "Hold"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540141737834735`*^9, 3.8540141878169503`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1c12e382-6ef1-4305-8ae2-9cc9d2674755"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{"Collatz", "[", 
     RowBox[{
      RowBox[{"3", " ", "n"}], "+", "1"}], "]"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"Collatz", "[", 
     FractionBox["n", "2"], "]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.854014197357769*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0e8be3e8-6fbf-483c-b1b9-e073c6e2bfba"]
}, Open  ]],

Cell["Extract source positions:", "Text",
 CellChangeTimes->{{3.8539537983049703`*^9, 3.8539538102891474`*^9}, {
  3.8539538955537825`*^9, 
  3.8539538956927843`*^9}},ExpressionUUID->"77dfa179-4a75-4fec-8d71-\
c5c6f287af81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"ast", ",", 
    RowBox[{
     RowBox[{"ASTPattern", "[", 
      RowBox[{
       RowBox[{"Collatz", "[", "_", "]"}], ",", 
       RowBox[{"KeyValuePattern", "[", 
        RowBox[{"CodeParser`Source", "->", "src_"}], "]"}]}], "]"}], ":>", 
     "src"}], ",", "Infinity"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.853953756338521*^9, 3.8539538145680733`*^9}, 
   3.8539539001147175`*^9, 3.8539568958998537`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"80393bac-e3b5-4fb2-83db-0bdb29876ce5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"225", ",", "234"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"244", ",", "261"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"275", ",", "290"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"317", ",", "334"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"347", ",", "358"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8539537821806097`*^9, 3.8539538162830915`*^9, 3.853953905936763*^9, 
   3.853955389081101*^9, {3.853956892000842*^9, 3.8539569014106503`*^9}, 
   3.8539588536310825`*^9, 3.8539596329874444`*^9, 3.854014215202568*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"913020a6-73b1-4ee5-93f4-285031b6dd40"]
}, Open  ]],

Cell["Extract the corresponding parts of the file as strings:", "Text",
 CellChangeTimes->{{3.853953843350602*^9, 3.8539538445423775`*^9}, {
  3.8540142382854276`*^9, 
  3.8540142569174967`*^9}},ExpressionUUID->"8a494b0e-4646-4465-acb8-\
005ed28e0fce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringTake", "[", 
  RowBox[{
   RowBox[{"ReadString", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   "pos"}], "]"}]], "Input",
 CellChangeTimes->{{3.85395382473895*^9, 3.8539538358385754`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b3fcd8de-f0ba-444f-81fb-b50bdb0770a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Collatz[1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[3 n + 1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[n/2]\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.853953836510722*^9, 3.853953908580479*^9, 
  3.85395539072535*^9, 3.853956903997796*^9, 3.853958853668083*^9, 
  3.8539596330174446`*^9, 3.8540142588015146`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"4888b2fa-fc57-489f-b1d0-f8eac91c92d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1452ec6f-8a70-40ab-bb65-909aadefb018"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"7c68397e-70fd-4d00-abfe-\
8ee9e3a5e9ad"],

Cell["Create a CodeCases function:", "Text",
 CellChangeTimes->{{3.854016907882264*^9, 
  3.8540169423818336`*^9}},ExpressionUUID->"ae4c3785-c28b-451c-9d26-\
24cf997eac8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CodeCases", "[", 
    RowBox[{"file_File", ",", "patt_"}], "]"}], ":=", 
   RowBox[{"CodeCases", "[", 
    RowBox[{
     RowBox[{"ReadString", "[", "file", "]"}], ",", "patt"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CodeCases", "[", 
    RowBox[{"string_String", ",", "patt_"}], "]"}], ":=", 
   RowBox[{"StringTake", "[", 
    RowBox[{"string", ",", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"CodeParser`CodeParse", "[", 
        RowBox[{"string", ",", 
         RowBox[{
         "\"\<SourceConvention\>\"", "\[Rule]", 
          "\"\<SourceCharacterIndex\>\""}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"ASTPattern", "[", 
         RowBox[{"patt", ",", 
          RowBox[{"KeyValuePattern", "[", 
           RowBox[{"CodeParser`Source", "\[Rule]", "src_"}], "]"}]}], "]"}], 
        "\[RuleDelayed]", "src"}], ",", "Infinity"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8540165192667413`*^9, 3.8540165634636626`*^9}, {
  3.854016713315529*^9, 3.854016725725747*^9}, {3.8540167744269595`*^9, 
  3.8540167749691477`*^9}, {3.854016805833043*^9, 3.8540168199896455`*^9}, {
  3.854016887631993*^9, 3.85401688799609*^9}, {3.8540175951573963`*^9, 
  3.8540176201316137`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b8d920a6-a3ff-4d86-ae35-00a46bac647b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CodeCases", "[", 
  RowBox[{
   RowBox[{"File", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   "_Collatz"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540167298669343`*^9, 3.854016731891554*^9}, {
  3.8540168312730775`*^9, 3.8540168335244193`*^9}, {3.854016871895134*^9, 
  3.854016873920781*^9}, {3.8540169506844788`*^9, 3.854016952163786*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9a3e338a-4975-4dd8-92e5-04b907b98ecf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Collatz[1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[3 n + 1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[n/2]\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.854016878487005*^9, 3.8540168904794393`*^9}, 
   3.854016959561883*^9, 3.8540170507606273`*^9, 3.854017656441534*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f45786c4-97a9-4880-8f16-8df40aa2264b"]
}, Open  ]],

Cell["Compare to string matching:", "Text",
 CellChangeTimes->{{3.854017063479702*^9, 
  3.8540170940321913`*^9}},ExpressionUUID->"4a9a5553-ab7a-4389-a8c8-\
c45737a080f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{
   RowBox[{"ReadString", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   RowBox[{"Shortest", "[", 
    RowBox[{"\"\<Collatz[\>\"", "~~", "___", "~~", "\"\<]\>\""}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.854016966426883*^9, 3.8540169997722917`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3bc36ffa-4892-4801-8da7-07a7f2549787"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Collatz[n]\"\>", ",", "\<\"Collatz[1]\"\>", 
   ",", "\<\"Collatz[n_Integer]\"\>", ",", "\<\"Collatz[3 n + 1]\"\>", 
   ",", "\<\"Collatz[n_Integer]\"\>", ",", "\<\"Collatz[n/2]\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.854016993983466*^9, 3.8540170002953143`*^9}, 
   3.8540176611308193`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"36335fc1-b81d-491c-819c-bdcf51e67c30"]
}, Open  ]],

Cell["This incorrectly matched part of the usage message as code:", "Text",
 CellChangeTimes->{{3.8540171100081463`*^9, 
  3.8540171317159557`*^9}},ExpressionUUID->"4a8692d4-4597-430c-ae4a-\
8343a2d1c779"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadString", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"8fc79c6b-29d8-4e62-86e8-f769d57394bc"],

Cell[BoxData["\<\"BeginPackage[\\\"Collatz`\\\"]\\n\\nCollatz::usage =\\n     \
   \\\"Collatz[n] gives a list of the iterates in the 3n+1 problem,\\n        \
starting from n. The conjecture is that this sequence always\\n        \
terminates.\\\"\\n\\nBegin[\\\"`Private`\\\"]\\n\\nCollatz[1] := \
{1}\\n\\nCollatz[n_Integer]  := Prepend[Collatz[3 n + 1], n] /; OddQ[n] && n \
> 0\\n\\nCollatz[n_Integer] := Prepend[Collatz[n/2], n] /; EvenQ[n] && n > \
0\\n\\nEnd[ ]\\n\\nEndPackage[ ]\"\>"], "Output",
 CellChangeTimes->{3.8540170140882797`*^9, 3.854017665270161*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a14b1c5e-d84f-4973-a435-6405b206b4b0"]
}, Open  ]],

Cell["\<\
When matching against the AST, there's no need to account for different types \
of input syntax:\
\>", "Text",
 CellChangeTimes->{{3.8540171589260206`*^9, 
  3.854017246796621*^9}},ExpressionUUID->"b2f9cf85-919f-4e10-90e4-\
76f3bd713282"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CodeCases", "[", 
  RowBox[{
   RowBox[{"File", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   RowBox[{"And", "[", 
    RowBox[{"_", ",", "_"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.854017146053875*^9, 3.8540171467669477`*^9}, {
  3.8540173628940663`*^9, 3.8540173661041813`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"93cc3e20-4af5-4391-887e-fdc964ff73d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"OddQ[n] && n > 0\"\>", ",", "\<\"EvenQ[n] && n > 0\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.854017151445318*^9, 3.854017368394704*^9, 
  3.8540176704072022`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f0e20e7b-2b3a-45cf-854c-23570481fe53"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties and Relations", "Subsection",
 CellLabel->"In[4]:=",ExpressionUUID->"42f1a48d-5a1e-4643-b7c2-1786c83ebfce"],

Cell[TextData[{
 "The single-argument form of ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "963cac8f-4545-4f07-a49d-eda0320cc21e"],
 " is effectively invisible to an outer ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2179dc11-fa70-4ef5-a54b-0c6dd60d3208"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540197326934133`*^9, 
  3.8540197702801685`*^9}},ExpressionUUID->"dd9042ac-1429-46d7-a5cf-\
6b10400e7074"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"ASTPattern", "[", "_", "]"}], ",", 
    RowBox[{"ASTPattern", "[", "_", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540196703751907`*^9, 3.8540196906870685`*^9}, {
  3.85401978172867*^9, 3.8540198104677906`*^9}, {3.854019848272435*^9, 
  3.854019849121706*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ce16fe36-90b2-4a4f-b001-dcef178a8696"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.8540196924787493`*^9, {3.854019774961713*^9, 3.854019813667624*^9}, 
   3.8540198520972457`*^9, 3.854019938216982*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6dce26b8-f682-44a9-a28f-01031cd51d76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", 
   RowBox[{"_", ",", "_"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540196971783047`*^9, 3.8540196983666954`*^9}, {
  3.8540197871515803`*^9, 3.8540198175481753`*^9}, {3.854019854161*^9, 
  3.854019854566101*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"319383d8-9ba6-43eb-8d23-67cf3cec86c4"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.85401969921912*^9, {3.8540197749757123`*^9, 3.854019818155385*^9}, 
   3.854019855894945*^9, 3.8540199382209806`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"ea60c677-e25f-47c8-add5-eb7bc0cee114"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "===", "%%"}]], "Input",
 CellChangeTimes->{{3.8540199402091503`*^9, 3.85401994168615*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c069ce02-8720-4edb-9db3-8dd0970c1a8d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854019942155223*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2d04bbff-eed6-464e-9b06-23e91927a6af"]
}, Open  ]],

Cell["\<\
The two-argument form inserts the corresponding metadata patterns:\
\>", "Text",
 CellChangeTimes->{{3.8540198677168407`*^9, 
  3.8540198953088756`*^9}},ExpressionUUID->"6d94b472-973b-49e4-8938-\
5414bd9348fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"ASTPattern", "[", 
      RowBox[{"_", ",", "a_"}], "]"}], ",", 
     RowBox[{"ASTPattern", "[", 
      RowBox[{"_", ",", "b_"}], "]"}]}], "]"}], ",", "c_"}], "]"}]], "Input",
 CellChangeTimes->{{3.854019794808504*^9, 3.8540198626790533`*^9}, {
  3.854019965829482*^9, 3.854019966329649*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5649507a-9ba6-4279-9161-bcadc7431597"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "a_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "b_"}], "]"}]}], "}"}], ",", "c_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.854019836015241*^9, 3.8540198982902727`*^9, 
  3.8540199746783104`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"afa75911-ddfa-4f51-b20b-59d96b57cc36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7c5e2e20-c22c-4bfc-8091-d82ee235acec"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"7772e6fa-a78e-4441-afd6-\
aaa33021eaa3"],

Cell["Get an AST node corresponding to a simple expression:", "Text",
 CellChangeTimes->{{3.854014457224232*^9, 
  3.8540144778019648`*^9}},ExpressionUUID->"2cafd971-8e55-4226-9240-\
d0c5b3c1f90a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"node", "=", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<f[1]\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"05246025-12d6-4daf-bc9f-1925afe65af1"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.854014481920702*^9, 3.854014604467166*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"b86f6fd5-1c43-49f6-a70d-f4055f7ac5bd"]
}, Open  ]],

Cell[TextData[{
 "For simple patterns, the performance of matching an ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9c86d142-c4d5-4edf-96f7-a0053eb5db9b"],
 " is comparable to normal pattern matching:"
}], "Text",
 CellChangeTimes->{{3.854014496718206*^9, 
  3.85401459336065*^9}},ExpressionUUID->"f51cade5-8505-40d6-8067-\
55ebe6aee256"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simple", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"f", "[", "_Integer", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8540145681127343`*^9, 3.854014569017516*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b35cec2f-243f-49f0-b71c-dd5893489ed8"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
     RowBox[{
      RowBox[{"Integer", "|", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Symbol", ",", 
         RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", 
         "_"}], "]"}]}], ",", "_", ",", "_"}], "]"}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8540146044701705`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5128c815-dfb1-455c-a671-311c6bca0f8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"node", ",", "simple"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.854014610948518*^9, 3.8540146117017055`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0ac93ee3-a160-4a25-b61d-694eeaa0dcbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.214991569519043`*^-7", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.854014616826976*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"944a4429-2ff0-4e5f-b4b1-f4a1bf51e888"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], ",", 
    RowBox[{"f", "[", "_Integer", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540142883777266`*^9, 3.8540142994296703`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"43c82208-82ca-4f17-80ee-518bf236385f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.199738025665283`*^-7", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.854014302537816*^9, 3.854014623424017*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"9a505483-10f8-491d-bf50-c9270eef810c"]
}, Open  ]],

Cell[TextData[{
 "Matching patterns that require evaluation typically incur significant cost \
as an ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c0993d6c-6a4b-4765-862b-314ece1096f4"],
 ":"
}], "Text",
 CellChangeTimes->{{3.854014639402794*^9, 3.854014668845174*^9}, {
  3.854014746524516*^9, 
  3.8540147476677904`*^9}},ExpressionUUID->"4006c5b3-d54d-45fb-9e00-\
544c4aa4518a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"f", "[", 
    RowBox[{"x_Integer", "/;", 
     RowBox[{"IntegerQ", "[", "x", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.854014331159177*^9, 3.8540143399094114`*^9}, {
  3.8540143703047886`*^9, 3.854014376362107*^9}, {3.854014675281684*^9, 
  3.8540146910223193`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"19550d4e-313c-4247-ba7a-18665d81c506"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{
        RowBox[{"Integer", "|", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Symbol", ",", 
           RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", 
           "_"}], "]"}]}], ",", "_", ",", "_"}], "]"}]}], "/;", 
     InterpretationBox[
      FrameBox[
       TagBox[
        TooltipBox[
         RowBox[{"IntegerQ", "[", "x", "]"}],
         RowBox[{
           TagBox["ASTCondition", HoldForm], "[", 
           RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"IntegerQ", "[", 
               RowBox[{"ASTConditionValue", "[", "1", "]"}], "]"}]}], "]"}]],
        Annotation[#, 
         HoldForm[$CellContext`ASTCondition][{$CellContext`x}, 
          IntegerQ[
           $CellContext`ASTConditionValue[1]]], "Tooltip"]& ],
       FrameMargins->{{4, 4}, {1, 1}},
       FrameStyle->RGBColor[0.880722, 0.611041, 0.142051],
       RoundingRadius->3],
      $CellContext`ASTCondition[{$CellContext`x}, 
       IntegerQ[
        $CellContext`ASTConditionValue[1]]]]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.854014341499154*^9, 3.8540143797079296`*^9, 
  3.854014410032863*^9, 3.854014692943969*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"467bf7f5-41e8-4a3a-940d-d5ecfb71f99b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"node", ",", "patt"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.854014346132574*^9, 3.8540143965784883`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"3798a317-6681-457c-8218-5f6c579deea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000016477584838867186`", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.854014352511509*^9, {3.854014384422637*^9, 3.854014412133899*^9}, 
   3.854014703003306*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c8b81846-6dc6-400a-ae90-9ccf94c3946c"]
}, Open  ]],

Cell["Compare to normal pattern matching:", "Text",
 CellChangeTimes->{{3.8540147186472445`*^9, 
  3.8540147236662226`*^9}},ExpressionUUID->"f8ec60b8-6961-4720-9086-\
ffb347f179a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x_Integer", "/;", 
      RowBox[{"IntegerQ", "[", "x", "]"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540147068805246`*^9, 3.8540147111621084`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0734be19-78ba-491c-8360-f505f32d7f09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.814590930938721`*^-7", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.854014714295602*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"4874907c-2cc1-4e42-bb3f-59fa156a85fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "965293cf-5d2d-42fc-9082-3823707acae8"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"b8e798f1-7cc1-4eee-aab7-\
e772c22d2cef"],

Cell["Some pattern tests allow for optimized patterns:", "Text",
 CellChangeTimes->{{3.853953144766021*^9, 
  3.853953152017762*^9}},ExpressionUUID->"059f8aa4-6dd5-4374-a450-\
8a223fc1f059"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_Integer", "?", "IntegerQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539531387803607`*^9, 3.8539531403579073`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5e003a9e-e693-49bf-9ea5-8f1eced66e5b"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"Integer", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{
  3.8539530212325945`*^9, 3.853953156477867*^9, {3.8539553137884254`*^9, 
   3.853955350579275*^9}, 3.853956145629947*^9, {3.8539562015994644`*^9, 
   3.85395621496259*^9}, 3.853956315160878*^9, 3.8539569148459315`*^9, 
   3.85395885932101*^9, 3.8539596378788137`*^9, 3.854014270050947*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"769148d0-1087-411a-b8d6-e45cc07b32e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_Integer", "?", "AtomQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539562088410263`*^9, 3.8539562098562517`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5cddb44f-f4b5-4fdd-827e-d008ccfda4d1"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"Integer", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{3.8539562149815893`*^9, 3.8539563151658783`*^9, 
  3.8539569148509293`*^9, 3.8539588593390102`*^9, 3.8539596378848114`*^9, 
  3.854014270054948*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"4e6138a2-5a7f-49ec-b68c-dc71332c5488"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_String", "?", "StringQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539561860714383`*^9, 3.853956189698398*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a021fd1d-6134-4e4b-a549-b10e01466ffb"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"String", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{{3.8539562016224637`*^9, 3.8539562149865885`*^9}, 
   3.853956315181878*^9, 3.8539569148659277`*^9, 3.8539588593440094`*^9, 
   3.853959637907813*^9, 3.854014270076949*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"54a8a6a5-4948-4c92-b57d-d6d3fb607ddf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_String", "?", "AtomQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.853956194946329*^9, 3.8539561959184637`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"530f6a72-bdf2-4116-b983-8e434183248f"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"String", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{{3.8539562016294622`*^9, 3.85395621499259*^9}, 
   3.8539563151978784`*^9, 3.8539569148809314`*^9, 3.853958859350009*^9, 
   3.8539596379128103`*^9, 3.85401427008095*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6254c235-24e9-4c13-aed8-7465cae1367f"]
}, Open  ]],

Cell["\<\
This will only work for certain pattern tests that appear literally:\
\>", "Text",
 CellChangeTimes->{{3.85395625539868*^9, 
  3.853956334043253*^9}},ExpressionUUID->"0cc3a742-64d1-45c0-ac52-\
9e103ab72f2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myIntegerQ", "=", "IntegerQ"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_Integer", "?", "myIntegerQ"}], "]"}]}], "Input",
 CellChangeTimes->{{3.853956266088846*^9, 3.8539562707592316`*^9}, {
  3.8539563109218483`*^9, 3.8539563119186745`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a3919c15-c25c-444b-885a-a57f6687176c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
    RowBox[{
     RowBox[{"Integer", "|", 
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", 
        RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", 
        "_"}], "]"}]}], ",", "_", ",", "_"}], "]"}], ")"}], "?", 
  InterpretationBox[
   FrameBox[
    TooltipBox["myIntegerQ",
     RowBox[{
       TagBox["ASTPatternTest", HoldForm], "[", "myIntegerQ", "]"}]],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.368417, 0.506779, 0.709798],
    RoundingRadius->3],
   $CellContext`ASTPatternTest[$CellContext`myIntegerQ]]}]], "Output",
 CellChangeTimes->{3.8539562806582713`*^9, 3.8539563152028785`*^9, 
  3.8539569202744513`*^9, 3.853958861633808*^9, 3.8539596395015135`*^9, 
  3.85401427010695*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"06b9b0db-2b60-4ccb-b58c-a16936c93aca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a19886eb-49a1-4f2f-ab7d-4c0dba2359ab"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"e3cc07b9-b971-46e5-b5a0-\
90487cfc6273"],

Cell[TextData[{
 "Pattern bindings that stay within ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6dd482ae-8a10-4197-a937-bd3d2aa1909b"],
 " correspond to expressions:"
}], "Text",
 CellChangeTimes->{{3.853955457883066*^9, 3.853955476907748*^9}, 
   3.853955525522358*^9, {3.8539588842674413`*^9, 
   3.853958889291543*^9}},ExpressionUUID->"9bc391cb-2cd8-41a4-87d8-\
1715875a3f65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ast", "=", 
   RowBox[{"CodeParser`CodeParse", "[", "\"\<1+2\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"x_Integer", "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{"x", ",", "\"\<Inside\>\""}], "]"}], ";", " ", "True"}], 
      ")"}]}], "]"}], ",", "Infinity"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8539554447529497`*^9, {3.8539569368398156`*^9, 3.8539569382132435`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6ee4d1e4-e71a-46ab-8248-6f386758f5f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Inside\"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.853959645144621*^9},ExpressionUUID->"8427c27c-155f-4614-b2fa-\
73a4ba71cf76"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Inside\"\>",
   "EchoLabel"], "  ", "2"}]], "Echo",
 CellChangeTimes->{
  3.8539596451626205`*^9},ExpressionUUID->"d537a9a8-46fc-47de-b197-\
98b1d1f14287"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.853955040228239*^9, 3.853955400336178*^9, 
  3.85395548438492*^9, 3.853955528727067*^9, 3.8539569448801203`*^9, 
  3.85395886788966*^9, 3.853959645175621*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"124339eb-4453-4b02-b72f-c7b02a15913d"]
}, Open  ]],

Cell[TextData[{
 "Once a value passes outside of ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e205707c-4934-45b2-8f9a-407cc75e15b1"],
 ", the binding corresponds to the AST node:"
}], "Text",
 CellChangeTimes->{{3.853955457883066*^9, 
  3.853955522600884*^9}},ExpressionUUID->"ec351da0-0b7b-4671-b576-\
1d35056f7932"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", 
   RowBox[{
    RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{"x", ",", "\"\<Outside\>\""}], "]"}], ";", " ", "True"}], 
     ")"}]}], ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539555333020544`*^9, 3.853955538170771*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"38c9771d-b12f-4356-8ad6-03728d6c2246"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Outside\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"CodeParser`LeafNode", "[", 
   RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"CodeParser`Source", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
    "]"}]}]], "Echo",
 CellChangeTimes->{
  3.8539596482685175`*^9},ExpressionUUID->"53be7eca-3802-418d-b6b3-\
a4ea323f7db3"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Outside\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"CodeParser`LeafNode", "[", 
   RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"CodeParser`Source", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
    "]"}]}]], "Echo",
 CellChangeTimes->{
  3.8539596482775173`*^9},ExpressionUUID->"d13384d4-a4f5-4648-8885-\
3134e08e46d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8539555438600593`*^9, 3.8539569502950535`*^9, 
  3.8539588734691577`*^9, 3.853959648290517*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f4df1d8a-6311-46b2-8fe0-dde9f0bf6306"]
}, Open  ]],

Cell[TextData[{
 "Note that all instances of the pattern symbol appear below ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c9a1a250-f2a0-4ac1-8b73-adcc06824425"],
 " in this case:"
}], "Text",
 CellChangeTimes->{{3.8539556613015027`*^9, 
  3.853955679908372*^9}},ExpressionUUID->"4a8f0e1e-d375-48da-a27f-\
ccf9b01c21b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"x_Integer", "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{"x", ",", "\"\<Inside\>\""}], "]"}], ";", " ", "True"}], 
      ")"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539556534438133`*^9, 3.8539556551782837`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a764a5b9-56ea-4289-8096-ab6e997afde2"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.4683323874382121`, 4.1952353926806065`}, {
     1.4683323874382121`, 3.356188314144485}, {1.4683323874382121`, 
     2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
     0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
     0.8390470785361213, 0.}, {2.517141235608364, 1.6780941570722425`}, {
     2.0976176963403033`, 0.8390470785361215}, {1.6780941570722425`, 0.}, {
     2.517141235608364, 0.}, {2.9366647748764243`, 0.8390470785361215}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {2, 3}, {3, 4}, {3, 8}, {4, 5}, {4, 6}, {6, 7}, {8, 
        9}, {8, 12}, {9, 10}, {9, 11}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Hold", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"Hold", "[", 
            RowBox[{"ASTPattern", "[", 
              RowBox[{"x_Integer", "/;", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"Echo", "[", 
                    RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
                  ")"}]}], "]"}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Hold[
           $CellContext`ASTPattern[
            Condition[
             Pattern[$CellContext`x, 
              Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]]]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["ASTPattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{"ASTPattern", "[", 
            RowBox[{"x_Integer", "/;", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"Echo", "[", 
                    RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
                ")"}]}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`ASTPattern[
           Condition[
            Pattern[$CellContext`x, 
             Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Condition", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          RowBox[{"x_Integer", "/;", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"Echo", "[", 
                  RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
              ")"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Condition[
           Pattern[$CellContext`x, 
            Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Pattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["x_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Pattern[$CellContext`x, 
           Blank[Integer]]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Blank", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox["_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Blank[Integer]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["Integer",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["Integer", HoldForm]],
        Annotation[#, 
         HoldForm[Integer], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["CompoundExpression", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox[
          RowBox[{
            RowBox[{"Echo", "[", 
              RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
          HoldForm]],
        Annotation[#, 
         HoldForm[Echo[$CellContext`x, "Inside"]; True], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Echo", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox[
          RowBox[{"Echo", "[", 
            RowBox[{"x", ",", "\"Inside\""}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Echo[$CellContext`x, "Inside"]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["\<\"Inside\"\>",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["\"Inside\"", HoldForm]],
        Annotation[#, 
         HoldForm["Inside"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["True",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["True", HoldForm]],
        Annotation[#, 
         HoldForm[True], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.4683323874382121`, 4.1952353926806065`}, {
      1.4683323874382121`, 3.356188314144485}, {1.4683323874382121`, 
      2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
      0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
      0.8390470785361213, 0.}, {2.517141235608364, 1.6780941570722425`}, {
      2.0976176963403033`, 0.8390470785361215}, {1.6780941570722425`, 0.}, {
      2.517141235608364, 0.}, {2.9366647748764243`, 0.8390470785361215}}]& ],
   AspectRatio->NCache[Rational[2, 5] 3^Rational[1, 2], 0.6928203230275509],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[
   Hold[
    $CellContext`ASTPattern[
     Condition[
      Pattern[$CellContext`x, 
       Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]]]],
  Editable->False]], "Output",
 CellChangeTimes->{3.853955752364499*^9, 3.85395695528798*^9, 
  3.853958917411629*^9, 3.853959651146524*^9},
 CellLabel->
  "Out[4]//TreeForm=",ExpressionUUID->"79622a84-0da6-462d-9c1c-fd74e5a56cd3"]
}, Open  ]],

Cell[TextData[{
 "In this case, there is an ",
 Cell[BoxData["x"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "645030fa-e838-4109-82eb-72914fab2daf"],
 " that's \"lifted\" out of the ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e22296de-58e3-4872-a832-ea8be5a455c6"],
 ", which is why it appears as an AST node:"
}], "Text",
 CellChangeTimes->{{3.853955688153039*^9, 3.8539557261836367`*^9}, {
  3.853958929081952*^9, 
  3.853958934032545*^9}},ExpressionUUID->"86791e33-3838-4c69-be95-\
c227481578f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{"x", ",", "\"\<Outside\>\""}], "]"}], ";", " ", "True"}], 
     ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539555670230784`*^9, 3.853955613470399*^9}, 
   3.853955685041553*^9, {3.8539557331242*^9, 3.853955735878713*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e3cce0bb-6b4a-438d-a6a8-7d73ba32f9fd"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.4683323874382121`, 4.1952353926806065`}, {
     1.4683323874382121`, 3.356188314144485}, {0.41952353926806063`, 
     2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
     0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
     0.8390470785361213, 0.}, {2.517141235608364, 2.517141235608364}, {
     2.0976176963403033`, 1.6780941570722425`}, {1.6780941570722425`, 
     0.8390470785361215}, {2.517141235608364, 0.8390470785361215}, {
     2.9366647748764243`, 1.6780941570722425`}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {2, 3}, {2, 8}, {3, 4}, {4, 5}, {4, 6}, {6, 7}, {8, 
        9}, {8, 12}, {9, 10}, {9, 11}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Hold", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"Hold", "[", 
            RowBox[{
              RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"Echo", "[", 
                    RowBox[{"x", ",", "\"Outside\""}], "]"}], ";", "True"}], 
                ")"}]}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Hold[
           Condition[
            $CellContext`ASTPattern[
             Pattern[$CellContext`x, 
              Blank[Integer]]], Echo[$CellContext`x, "Outside"]; True]]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Condition", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{
            RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"Echo", "[", 
                  RowBox[{"x", ",", "\"Outside\""}], "]"}], ";", "True"}], 
              ")"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Condition[
           $CellContext`ASTPattern[
            Pattern[$CellContext`x, 
             Blank[Integer]]], Echo[$CellContext`x, "Outside"]; True]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["ASTPattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          RowBox[{"ASTPattern", "[", "x_Integer", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`ASTPattern[
           Pattern[$CellContext`x, 
            Blank[Integer]]]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Pattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["x_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Pattern[$CellContext`x, 
           Blank[Integer]]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Blank", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox["_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Blank[Integer]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["Integer",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["Integer", HoldForm]],
        Annotation[#, 
         HoldForm[Integer], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["CompoundExpression", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox[
          RowBox[{
            RowBox[{"Echo", "[", 
              RowBox[{"x", ",", "\"Outside\""}], "]"}], ";", "True"}], 
          HoldForm]],
        Annotation[#, 
         HoldForm[Echo[$CellContext`x, "Outside"]; True], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Echo", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox[
          RowBox[{"Echo", "[", 
            RowBox[{"x", ",", "\"Outside\""}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Echo[$CellContext`x, "Outside"]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["\<\"Outside\"\>",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["\"Outside\"", HoldForm]],
        Annotation[#, 
         HoldForm["Outside"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["True",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["True", HoldForm]],
        Annotation[#, 
         HoldForm[True], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.4683323874382121`, 4.1952353926806065`}, {
      1.4683323874382121`, 3.356188314144485}, {0.41952353926806063`, 
      2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
      0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
      0.8390470785361213, 0.}, {2.517141235608364, 2.517141235608364}, {
      2.0976176963403033`, 1.6780941570722425`}, {1.6780941570722425`, 
      0.8390470785361215}, {2.517141235608364, 0.8390470785361215}, {
      2.9366647748764243`, 1.6780941570722425`}}]& ],
   AspectRatio->NCache[Rational[3, 7]^Rational[1, 2], 0.6546536707079771],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[
   Hold[
    Condition[
     $CellContext`ASTPattern[
      Pattern[$CellContext`x, 
       Blank[Integer]]], Echo[$CellContext`x, "Outside"]; True]]],
  Editable->False]], "Output",
 CellChangeTimes->{3.8539557524005013`*^9, 3.8539569582276697`*^9, 
  3.853958923188289*^9, 3.8539596545191813`*^9},
 CellLabel->
  "Out[5]//TreeForm=",ExpressionUUID->"b61015ee-83c4-4d28-b02d-4da1695c5618"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 CellLabel->"In[6]:=",ExpressionUUID->"603ab048-f01d-4c0b-af88-9281dfd4f7a4"],

Cell[TextData[{
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "847c937a-8fc6-4854-9d5c-6cdb1f1f4c43"],
 " cannot generalize to all possible WL patterns:"
}], "Text",
 CellChangeTimes->{{3.853955772288334*^9, 
  3.8539557880635443`*^9}},ExpressionUUID->"3c7049a9-d4fb-4894-910e-\
e360e4d6ecc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ast", "=", 
  RowBox[{
  "CodeParser`CodeParse", "[", "\"\<{f[1],f[1],f[1]}\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8539558115138683`*^9, 3.8539558345682545`*^9}, {
  3.8539569635848813`*^9, 3.853956965481393*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5007a8ec-5954-4fca-9ea1-0cc900ba7002"],

Cell[BoxData[
 RowBox[{"CodeParser`ContainerNode", "[", 
  RowBox[{"String", ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", "\<\"List\"\>", ",", 
        RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CodeParser`CallNode", "[", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{"CodeParser`Source", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], 
              "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`CallNode", "[", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "7"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{"CodeParser`Source", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "9"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}], 
              "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "7"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "11"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`CallNode", "[", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "12"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "13"}], "}"}]}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{"CodeParser`Source", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "14"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "15"}], "}"}]}], "}"}]}], 
              "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "16"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "17"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.853955836753396*^9, 3.853955944047716*^9, 
  3.8539569670245795`*^9, 3.8539589433164005`*^9, 3.853959660220187*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4cafaec6-8742-4843-813a-ac1221e6ed31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "a_", "]"}], ".."}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.853955791945881*^9, 3.8539558064897375`*^9}, {
  3.8539558443030844`*^9, 3.8539558480479774`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"394f39ab-3bca-4a2a-9abc-cf21603e483a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8539558512570047`*^9, 3.8539559440627174`*^9, 
  3.853956970997777*^9, 3.853958944747585*^9, 3.8539596662422256`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f4644c81-185f-4e67-b75a-8e2bb6d86e5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "a_", "]"}], ".."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8539558545762873`*^9, 3.853955865785961*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b10baf8f-b602-47ac-93be-d0973def68b4"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.853955866865613*^9, 3.8539559440677147`*^9, 
  3.8539569740495872`*^9, 3.853958945453696*^9, 3.8539596675674753`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ac35c1b9-ed61-46de-ad9e-6750d581ef2c"]
}, Open  ]],

Cell["\<\
In this case, the pattern binding prevents matching, since the metadata will \
always be different between nodes:\
\>", "Text",
 CellChangeTimes->{{3.853955912733098*^9, 
  3.8539559370605717`*^9}},ExpressionUUID->"56b787d4-6cbc-44ae-92d1-\
df6d00148c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "_", "]"}], ".."}], "}"}], "]"}], ",", "Infinity"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8539559520863523`*^9, 3.8539559896767645`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"7bccfc90-fade-442a-8858-7267d895a09e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CodeParser`CallNode", "[", 
   RowBox[{
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", "\<\"List\"\>", ",", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{"CodeParser`Source", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "4"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], 
            "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], 
         "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "7"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{"CodeParser`Source", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "9"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}], 
            "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "11"}], "}"}]}], "}"}]}], 
         "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "13"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{"CodeParser`Source", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "14"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "15"}], "}"}]}], "}"}]}], 
            "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "12"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "16"}], "}"}]}], "}"}]}], 
         "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"CodeParser`Source", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "17"}], "}"}]}], "}"}]}], 
     "\[RightAssociation]"}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{{3.853955956329247*^9, 3.853955991195162*^9}, 
   3.853956982784605*^9, 3.8539589473975425`*^9, 3.853959673463917*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5bb6a45a-eada-4d1c-bfd0-05593d735c46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "All", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853956007230383*^9, 3.853956020763901*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"442f59c7-3787-4595-9926-8c1f20017962"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}]}], "}"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "16"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.853956022912642*^9, 3.853956985443907*^9, 
  3.8539589490988584`*^9, 3.853959676067833*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"39fbf998-ba63-4f26-bf76-f21904600be8"]
}, Open  ]],

Cell["Without any repeated binding this pattern will match:", "Text",
 CellChangeTimes->{{3.8539560565122814`*^9, 
  3.8539560746940227`*^9}},ExpressionUUID->"65818f0c-004f-48f8-a7a3-\
523df5552545"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "_", "]"}], ".."}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.853955898685937*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"427fe742-00df-4e4d-a86c-e9665cb2ffdd"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.853955903236388*^9, 3.8539569981146793`*^9, 
  3.853958950778644*^9, 3.853959678185835*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d5f7d4c5-0757-4b22-b43a-25163a242f02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c7e54f85-cac7-4670-8df7-8d3e108a031e"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"20d75605-8335-4a1c-8d56-\
0880b0ee1124"],

Cell[TextData[{
 "Not all raw patterns are supported by ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1d28096a-cc3c-4df6-9235-bed04cb4aa9f"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540160449418507`*^9, 
  3.854016058480034*^9}},ExpressionUUID->"83097512-1afe-4e2c-ac76-\
e22ca1d8c701"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"node", "=", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<f[x -> 1]\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.854015093072421*^9, 3.8540150991523137`*^9}, {
  3.854016005925674*^9, 3.8540160123474445`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3345df94-fad4-437d-9a2c-d77969a5d179"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", "\<\"Rule\"\>", ",", 
        RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"x\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "9"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "9"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{{3.8540150959089613`*^9, 3.8540150997174363`*^9}, 
   3.8540151978130364`*^9, 3.854015374400508*^9, 3.8540160153689394`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"27fd3d11-74df-4ef0-a23b-ec12cde350f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"f", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.854015500978978*^9, 3.8540155054466085`*^9}, {
  3.8540160200964956`*^9, 3.854016020561495*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6d01e854-4752-41cf-a5e2-8777e1d10823"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", 
        RowBox[{"\<\"OptionsPattern\"\>", 
         "|", "\<\"System`OptionsPattern\"\>"}], ",", "_"}], "]"}], ",", 
      RowBox[{"{", "}"}], ",", "_"}], "]"}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8540155064278793`*^9, 3.854015989858686*^9, 
  3.854016021126541*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"859847b6-889b-4b37-8b78-11462e4b6bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"node", ",", "patt"}], "]"}]], "Input",
 CellChangeTimes->{{3.854016022238611*^9, 3.854016024901718*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a3ac96c2-eda1-4ea4-b5ac-b12db4497437"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.854016025301757*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c4459fff-abd1-4b38-9fcf-c6fc13a7b2d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", "->", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8540160622140045`*^9, 3.854016071587333*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c9f061a5-4da5-41b0-a117-f2fb3b6c1697"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8540160721123304`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"bbfd06cc-3acb-45df-a56a-45daac65f77c"]
}, Open  ]],

Cell["Unsupported patterns are represented verbatim:", "Text",
 CellChangeTimes->{{3.854016091573642*^9, 
  3.854016105076605*^9}},ExpressionUUID->"be9eac6c-4f53-4082-8636-\
297aff741118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CodeParser`CodeParse", "[", "\"\<f[OptionsPattern[]]\>\"", "]"}],
     "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "patt"}], "]"}]], "Input",
 CellChangeTimes->{{3.854016111491602*^9, 3.85401612128329*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"1adb7e31-dba4-4d24-a6a6-44c8524ae765"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854016122172269*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a52d9750-d592-4ac2-a335-615c0683e927"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ",", 
   RowBox[{"Verbatim", "[", 
    RowBox[{"f", "[", 
     RowBox[{"OptionsPattern", "[", "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.854016133023932*^9, 3.8540161420683856`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"6481c50a-9d74-425e-95c0-cd124940cda0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854016144769384*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ddf229f0-d91a-497c-b9c9-e90935044305"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "98735427-93f2-49d4-a2db-951acdaef77a"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"c0c5f12e-d634-4025-9e03-\
23a55ea0302a"],

Cell[TextData[{
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b1392247-f440-4703-9833-5814902113e9"],
 " ignores the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Unevaluated", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Unevaluated",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3e2691b8-007c-4512-9cca-659f656b094d"],
 " wrapper:"
}], "Text",
 CellChangeTimes->{{3.85401950915475*^9, 
  3.854019523350342*^9}},ExpressionUUID->"f5ea5687-1593-4450-abac-\
1be8116dd6f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"Unevaluated", "[", 
    RowBox[{"1", "+", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8540195393179135`*^9, 3.8540195404170427`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3fbb60d6-ac4b-4cc0-a6b1-afbb3532ed1a"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"Integer", ",", "\<\"2\"\>", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854019542339035*^9, 3.8540195738786497`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c6b73e01-b8f6-4afa-bcc7-8a317cde83cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<Hold[1+1]\>\"", "]"}], ",", 
   "patt"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540194754367037`*^9, 3.854019490399214*^9}, {
  3.854019536991079*^9, 3.854019538156666*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2efabf70-17ed-4ecb-8a91-69ec38abaf91"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8540194929926453`*^9, {3.8540195449777083`*^9, 3.854019573896648*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"0428917e-5754-4b8e-8c9c-f18aa66d42cf"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "76ad078e-190e-4a90-ae31-78f62617fef9"],
 " instead:"
}], "Text",
 CellChangeTimes->{{3.854019562535185*^9, 
  3.8540195684798803`*^9}},ExpressionUUID->"cbcf5d03-862b-4d72-9d03-\
f1e9e77416d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"1", "+", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8540194067412553`*^9, 3.8540194083073816`*^9}, 
   3.854019560353941*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"d71d7687-122c-49d3-8f2e-823282a6286f"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"Plus\"\>", "|", "\<\"System`Plus\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}], ",", 
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}]}], "}"}], ",", 
   "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854019573914648*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"334079ff-04b2-4648-ab91-92563a7752e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<Hold[1+1]\>\"", "]"}], ",", 
   "patt"}], "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"85515f6b-c1bc-4049-9518-ce9a65594e96"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8540195809297743`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"dfc0335d-c5d8-4d53-9ab8-7cc6e3b75356"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "247612ec-f903-4abc-8e03-b26b10a01e27"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"157224c2-1c17-471e-98fd-\
38ef1476e154"],

Cell[TextData[{
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1c2d8c5e-2a2b-42fb-b85d-11fbc40b3ffa"],
 " must evaluate in order to create the desired pattern, so it should not be \
wrapped in ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d7eb6016-95cf-4d9b-85e6-57aefe907b73"],
 ":"
}], "Text",
 CellChangeTimes->{{3.854017972656559*^9, 3.8540179991242313`*^9}, {
  3.8540180483156347`*^9, 
  3.8540180569669523`*^9}},ExpressionUUID->"da4215f7-8e6c-433a-adce-\
4b5906da4976"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"ASTPattern", "[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.854018007713357*^9, 3.8540180325883017`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ecf4e305-d988-4761-ad8a-b01dc5bf78d6"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8540180386581163`*^9, 3.854019163505314*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f739983a-0691-4ed4-a1ba-ab0c601cb833"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c6f47504-eaa2-4196-b7e8-95073dd74673"],
 " within ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "eae91331-a539-4b73-96c2-260cd3441697"],
 " instead:"
}], "Text",
 CellChangeTimes->{{3.8540180721983604`*^9, 
  3.854018084410285*^9}},ExpressionUUID->"e6004603-17ae-42d9-9efd-\
0e4d44efe791"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8540180640248137`*^9, 3.854018069937374*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cba818f3-ec17-481d-9fbe-b2f54145fee8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854018091626161*^9, 3.854019166265072*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"471c2bac-b1e4-4a63-8aba-96c344d6b667"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Neat Examples", \
"Subsection",ExpressionUUID->"8f1aa6bc-97db-4ac6-b9d5-a8cd80db7224"]
},
WindowSize->{1040.5, 885.},
WindowMargins->{{-1177, Automatic}, {Automatic, 42}},
WindowStatusArea->Automatic,
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}]},
TaggingRules-><|
 "EvaluatedCells" -> <|$Failed -> True|>, "AutoUpdate" -> True, 
  "NotebookIndexQ" -> True, "NotebookLastIndexed" -> 
  DateObject[{2022, 2, 16, 13, 18, 12.3184381`8.843130601956613}, "Instant", 
    "Gregorian", -5.], "NotebookUUID" -> 
  "4a00f6a7-f17e-4b78-80df-42c114335331"|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (January 26, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, 
  "FunctionResourceDefinitionStyles.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"4a00f6a7-f17e-4b78-80df-42c114335331"
]

