Notebook[{

Cell[CellGroupData[{
Cell["ASTPattern", "Title",
 CellTags->{
  "Name", "TemplateCell", 
   "Title"},ExpressionUUID->"94d2febe-99f1-4166-a10f-c97b515a3544"],

Cell["\<\
Convert a pattern to match a corresponding CodeParser AST node\
\>", "Text",
 CellTags->{
  "Description", 
   "TemplateCell"},ExpressionUUID->"ead95339-66f8-4c7d-b77b-7d1e37975645"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b6810ba3-c16f-4c84-b899-844ca05cadd9"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Function"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->292731158,ExpressionUUID->"7059c989-7f76-4bc2-b5e6-285363686261"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ASTPattern", " ", "//", " ", "ClearAll"}], 
  ";"}]], "Code",ExpressionUUID->"5ab3c081-89fa-40bc-8459-f31e026344f9"],

Cell[CellGroupData[{

Cell["Initialization", \
"Subsection",ExpressionUUID->"1624b344-0bbc-4784-9e6a-e9bc7cf120e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", " ", "\"\<CodeParser`\>\"", " ", "]"}], 
  ";"}]], "Code",ExpressionUUID->"ea083c2c-42e1-4fe0-940b-eafda7ca8e14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Language`AddInternalContexts", "[", " ", "\"\<CodeParser`*\>\"", " ", 
   "]"}], ";"}]], \
"Code",ExpressionUUID->"6be94d2c-3868-4aa7-b457-e267093da9db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$inDef", " ", "=", " ", "False"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$debug", " ", "=", " ", "True"}], 
  ";"}]}], "Code",ExpressionUUID->"7dfc6421-17eb-4c10-8129-396ff02c8b8e"],

Cell[CellGroupData[{

Cell["beginDefinition", \
"Subsubsection",ExpressionUUID->"c4f0499b-dff9-4f6d-a954-c4430b900184"],

Cell[BoxData[
 RowBox[{
  RowBox[{"beginDefinition", " ", "//", " ", "ClearAll"}], 
  ";"}]], "Code",ExpressionUUID->"894bb92b-e4e7-40f7-a686-5edf6d8c3d88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"beginDefinition", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"27070ca4-a57c-410a-9a31-9899b1c5029f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"beginDefinition", "::", "unfinished"}], " ", "=", " ", 
   "\"\<\\\nStarting definition for `1` without ending the current \
one.\>\""}], 
  ";"}]], "Code",ExpressionUUID->"d95ccf51-10fa-4a0b-865d-eddade808240"],

Cell[":!CodeAnalysis::BeginBlock::", \
"Text",ExpressionUUID->"aacc143e-365e-4b81-858c-8ee3f918b0b9"],

Cell[":!CodeAnalysis::Disable::SuspiciousSessionSymbol::", \
"Text",ExpressionUUID->"d74c1b8d-0538-4517-adee-95994977c0c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"beginDefinition", "[", " ", "s_Symbol", " ", "]"}], " ", "/;", 
    " ", 
    RowBox[{"$debug", " ", "&&", " ", "$inDef"}]}], " ", ":=", "\n", "    ", 
   RowBox[{"WithCleanup", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"$inDef", " ", "=", " ", "False"}], "\n", "        ", ",", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"Print", " ", "@", " ", 
       RowBox[{"TemplateApply", "[", " ", 
        RowBox[{
         RowBox[{"beginDefinition", "::", "unfinished"}], ",", " ", 
         RowBox[{"HoldForm", " ", "@", " ", "s"}]}], " ", "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"beginDefinition", " ", "@", " ", "s"}]}], "\n", "        ", 
     ",", "\n", "        ", 
     RowBox[{"$inDef", " ", "=", " ", "True"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"7cf91c2e-8893-4ee4-b59c-e7e3200ccf26"],

Cell[":!CodeAnalysis::EndBlock::", \
"Text",ExpressionUUID->"ad34b207-fdc8-4264-9cc4-66acd7d608d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"beginDefinition", "[", " ", "s_Symbol", " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"WithCleanup", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Unprotect", " ", "@", " ", "s"}], ";", " ", 
      RowBox[{"ClearAll", " ", "@", " ", "s"}]}], ",", " ", 
     RowBox[{"$inDef", " ", "=", " ", "True"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"a98ce461-a269-4ea1-8205-dd63d1316e32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["endDefinition", \
"Subsubsection",ExpressionUUID->"e1aaaa13-53b7-4749-8827-d79bfc4c59f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"endDefinition", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"62835993-73fa-4111-8b7f-2e47964db9ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"endDefinition", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"d317af50-fd62-4d42-8d7b-c722e9819032"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"endDefinition", "[", " ", "s_Symbol", " ", "]"}], " ", ":=", " ", 
   RowBox[{"endDefinition", "[", " ", 
    RowBox[{"s", ",", " ", "DownValues"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"889f70e7-0924-42e6-886d-14c15412a4a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"endDefinition", "[", " ", 
    RowBox[{"s_Symbol", ",", " ", "None"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"$inDef", " ", "=", " ", "False"}]}], 
  ";"}]], "Code",ExpressionUUID->"c264e1d1-4567-4da7-95fa-79337e63a91b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"endDefinition", "[", " ", 
    RowBox[{"s_Symbol", ",", " ", "DownValues"}], " ", "]"}], " ", ":=", "\n",
    "    ", 
   RowBox[{"WithCleanup", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"AppendTo", "[", " ", 
      RowBox[{
       RowBox[{"DownValues", " ", "@", " ", "s"}], ",", "\n", 
       "                  ", 
       RowBox[{
        RowBox[{"e", ":", " ", 
         RowBox[{"HoldPattern", " ", "@", " ", 
          RowBox[{"s", "[", " ", "___", " ", "]"}]}]}], " ", ":>", "\n", 
        "                      ", 
        RowBox[{"throwInternalFailure", " ", "@", " ", 
         RowBox[{"HoldForm", " ", "@", " ", "e"}]}]}]}], "\n", "        ", 
      "]"}], ",", "\n", "        ", 
     RowBox[{"$inDef", " ", "=", " ", "False"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"13764c5f-c5f2-4c40-900f-657f9a27c73d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"endDefinition", "[", " ", 
    RowBox[{"s_Symbol", ",", " ", "SubValues"}], "  ", "]"}], " ", ":=", "\n",
    "    ", 
   RowBox[{"WithCleanup", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"AppendTo", "[", " ", 
      RowBox[{
       RowBox[{"SubValues", " ", "@", " ", "s"}], ",", "\n", 
       "                  ", 
       RowBox[{
        RowBox[{"e", ":", " ", 
         RowBox[{"HoldPattern", " ", "@", " ", 
          RowBox[{
           RowBox[{"s", "[", " ", "___", " ", "]"}], "[", " ", "___", " ", 
           "]"}]}]}], " ", ":>", "\n", "                      ", 
        RowBox[{"throwInternalFailure", " ", "@", " ", 
         RowBox[{"HoldForm", " ", "@", " ", "e"}]}]}]}], "\n", "        ", 
      "]"}], ",", "\n", "        ", 
     RowBox[{"$inDef", " ", "=", " ", "False"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"03dfe3b1-0aad-4398-a9ae-f06bdabd6b7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"endDefinition", "[", " ", 
    RowBox[{"s_Symbol", ",", " ", "list_List"}], " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{
    RowBox[{
     RowBox[{"endDefinition", "[", " ", 
      RowBox[{"s", ",", " ", "#"}], " ", "]"}], " ", "&"}], " ", "/@", " ", 
    "list"}]}], 
  ";"}]], "Code",ExpressionUUID->"b70daba4-036b-4526-8885-0e61d30cd674"],

Cell[BoxData[
 RowBox[{
  RowBox[{"endDefinition", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"be26a7d9-f5e7-4f24-b969-a61480a5a2e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", \
"Subsection",ExpressionUUID->"100692ce-01a2-4d01-9d8c-2f212001f017"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASTPattern", "::", "internal"}], " ", "=", "\n", 
   "\"\<An unexpected error occurred. `1`\>\""}], 
  ";"}]], "Code",ExpressionUUID->"c86f1467-4c05-4eed-91ae-efa915f04b4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attributes", \
"Subsection",ExpressionUUID->"18342f15-2e09-4995-b123-ebc6f316c821"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASTPattern", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"aa99287a-e526-4263-9d74-49528b1ca26f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", \
"Subsection",ExpressionUUID->"1430aaac-80fc-449a-9cb9-d92a1c069f15"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASTPattern", " ", "//", " ", "Options"}], " ", "=", " ", 
   RowBox[{"{", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"b61245d2-f91c-4f69-b3a5-bae903bd657c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main definition", \
"Subsection",ExpressionUUID->"f83ef4ab-584e-4200-9714-7e8695657ed9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASTPattern", "[", " ", "patt_", " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"catchTop", " ", "@", " ", 
    RowBox[{"Block", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", "$ContextPath", " ", "}"}], ",", "\n", "        ", 
      RowBox[{
       RowBox[{"Needs", "[", " ", "\"\<CodeParser`\>\"", " ", "]"}], ";", 
       "\n", "        ", 
       RowBox[{"With", "[", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"p", " ", "=", " ", 
           RowBox[{"astBlockPattern", " ", "@", " ", "patt"}]}], " ", "}"}], 
         ",", "\n", "            ", 
         RowBox[{"checkDuplicatePatterns", " ", "@", " ", 
          RowBox[{"astPattern", " ", "@", " ", "p"}]}]}], "\n", "        ", 
        "]"}]}]}], "\n", "    ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"7910f17a-6c99-45bd-8426-c7b95d0bf333"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASTPattern", "[", " ", 
    RowBox[{"patt_", ",", " ", "meta_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"catchTop", " ", "@", " ", 
    RowBox[{"Block", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", "$ContextPath", " ", "}"}], ",", "\n", "        ", 
      RowBox[{
       RowBox[{"Needs", "[", " ", "\"\<CodeParser`\>\"", " ", "]"}], ";", 
       "\n", "        ", 
       RowBox[{"With", "[", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"p", " ", "=", " ", 
           RowBox[{"astBlockPattern", " ", "@", " ", "patt"}]}], " ", "}"}], 
         ",", " ", 
         RowBox[{"astPattern", "[", " ", 
          RowBox[{"p", ",", " ", "meta"}], " ", "]"}]}], " ", "]"}]}]}], "\n",
      "    ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"a4b26f7f-5a06-4dfe-ac8a-2ba07cce0a4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astPattern", "  ", "//", " ", "ClearAll"}], 
  ";"}]], "Code",ExpressionUUID->"030de941-040b-490e-8c34-489e8c1f6491"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "  ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"2e936d5d-507e-4ca9-9ed5-84a7e6e63e5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$astPattern", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"d5f7a4b1-bc27-481f-9956-84b329c53d17"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"astPattern", "[", " ", "patt_", " ", "]"}], " ", "/;", " ", 
    RowBox[{"!", " ", 
     RowBox[{"FreeQ", "[", " ", 
      RowBox[{
       RowBox[{"Unevaluated", " ", "@", " ", "patt"}], ",", " ", 
       "_ASTPattern"}], " ", "]"}]}]}], " ", ":=", "\n", "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"held", ",", " ", "expanded", ",", " ", "new"}], " ", "}"}], 
     ",", "\n", "        ", 
     RowBox[{
      RowBox[{"held", "     ", "=", " ", 
       RowBox[{"HoldComplete", " ", "@", " ", "patt"}]}], ";", "\n", 
      "        ", 
      RowBox[{"expanded", " ", "=", " ", 
       RowBox[{"expandNestedASTPatterns", " ", "@", " ", "held"}]}], ";", 
      "\n", "        ", 
      RowBox[{"new", "      ", "=", " ", 
       RowBox[{"astPattern", " ", "@@", " ", "expanded"}]}], ";", "\n", 
      "        ", 
      RowBox[{"new", " ", "/.", " ", 
       RowBox[{
        RowBox[{"$astPattern", "[", " ", "a_", " ", "]"}], " ", ":>", " ", 
        "a"}]}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"3b2fe2e2-522e-496c-a2f7-1de217878c29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auxiliary Functions", \
"Subsection",ExpressionUUID->"456dc8e6-6990-468f-8afc-a0bb687e242d"],

Cell[CellGroupData[{

Cell["FromAST", \
"Subsubsection",ExpressionUUID->"f5d64dae-57f4-4624-b3fb-10c0709a89d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FromAST", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"07d3a893-23e9-4759-83a2-0fed488190c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromAST", "[", " ", "ast_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"FromAST", "[", " ", 
    RowBox[{"ast", ",", " ", 
     RowBox[{"##1", " ", "&"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"81321f59-2eb4-46ac-86be-95830499d1ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromAST", "[", " ", 
    RowBox[{
     RowBox[{"ast", ":", " ", 
      RowBox[{"_LeafNode", "|", "_CallNode"}]}], ",", " ", "wrapper_"}], " ", 
    "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"ToExpression", "[", " ", 
    RowBox[{
     RowBox[{"ToFullFormString", " ", "@", " ", "ast"}], ",", " ", 
     "InputForm", ",", " ", "wrapper"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"eeca62ff-5176-4372-b56f-cd65bb7800a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromAST", "[", " ", 
    RowBox[{
     RowBox[{"ContainerNode", "[", " ", 
      RowBox[{"_", ",", " ", "ast_List", ",", " ", "_"}], " ", "]"}], ",", 
     " ", "wrapper_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"FromAST", "[", " ", 
    RowBox[{"ast", ",", " ", "wrapper"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"929e3218-67f1-41b1-bb82-60c68a9c6e06"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromAST", "[", " ", 
    RowBox[{"ast_List", ",", " ", "wrapper_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FromAST", "[", " ", 
      RowBox[{"#", ",", " ", "wrapper"}], " ", "]"}], " ", "&"}], " ", "/@", 
    " ", "ast"}]}], 
  ";"}]], "Code",ExpressionUUID->"c54af7b4-245a-4a7f-b94c-58db2c31f872"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FromAST", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"7145656c-685d-425d-96ad-c7dd525447f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ASTPatternTest", \
"Subsubsection",ExpressionUUID->"120e2a89-b5b0-46ec-90fa-2d5822f82cf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ASTPatternTest", " ", "//", " ", "ClearAll"}], 
  ";"}]], "Code",ExpressionUUID->"b5300575-6a0c-41ff-a7d8-861a071e0cbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ASTPatternTest", "[", " ", "func_", " ", "]"}], "[", " ", 
    "node_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"FromAST", "[", " ", 
    RowBox[{"node", ",", " ", "func"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"d8a6dfd9-86d6-48e6-8438-a8e230013681"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ASTPatternTest", " ", "/:", " ", 
   RowBox[{"MakeBoxes", "[", " ", 
    RowBox[{
     RowBox[{"ASTPatternTest", "[", " ", "f_", " ", "]"}], ",", " ", 
     "StandardForm"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"With", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"{", "\n", "            ", 
      RowBox[{
       RowBox[{"row", " ", "=", " ", 
        RowBox[{"MakeBoxes", "[", " ", 
         RowBox[{"f", ",", " ", "StandardForm"}], " ", "]"}]}], ",", "\n", 
       "            ", 
       RowBox[{"tt", " ", "=", " ", 
        RowBox[{"MakeBoxes", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"HoldForm", "[", " ", "ASTPatternTest", " ", "]"}], "[", 
           " ", "f", " ", "]"}], ",", " ", "StandardForm"}], " ", "]"}]}], 
       ",", "\n", "            ", 
       RowBox[{"col", " ", "=", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", " ", "97", " ", "]"}], "[", " ", "1", " ", 
         "]"}]}]}], "\n", "        ", "}"}], ",", "\n", "        ", 
     RowBox[{"InterpretationBox", "[", "\n", "            ", 
      RowBox[{
       RowBox[{"FrameBox", "[", "\n", "                ", 
        RowBox[{
         RowBox[{"TooltipBox", "[", " ", 
          RowBox[{"row", ",", " ", "tt"}], " ", "]"}], ",", "\n", 
         "                ", 
         RowBox[{"RoundingRadius", " ", "->", " ", "3"}], ",", "\n", 
         "                ", 
         RowBox[{"FrameStyle", "     ", "->", " ", "col"}], ",", "\n", 
         "                ", 
         RowBox[{"FrameMargins", "   ", "->", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", " ", 
             RowBox[{"4", ",", " ", "4"}], " ", "}"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"1", ",", " ", "1"}], " ", "}"}]}], " ", "}"}]}]}], "\n",
         "            ", "]"}], "\n", "            ", ",", "\n", 
       "            ", 
       RowBox[{"ASTPatternTest", " ", "@", " ", "f"}]}], "\n", "        ", 
      "]"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"856e566d-dffd-4d7f-8658-2b28b54502ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ASTCondition", \
"Subsubsection",ExpressionUUID->"401e5867-ba98-491b-a841-f9778dd36553"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ASTCondition", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"eca5db42-be0d-4f8a-843e-3d7a55fccfef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASTCondition", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldRest", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"82e6997a-90a9-4d8d-9b02-a20d98a236d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASTCondition", "[", " ", 
    RowBox[{"vals_List", ",", " ", "cond_"}], " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"rules", ",", " ", "replaced"}], " ", "}"}], ",", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"rules", "    ", "=", " ", 
       RowBox[{"MapIndexed", "[", " ", 
        RowBox[{"astCVRule", ",", " ", "vals"}], " ", "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"replaced", " ", "=", " ", 
       RowBox[{
        RowBox[{"HoldComplete", " ", "@", " ", "cond"}], " ", "/.", " ", 
        "rules"}]}], ";", "\n", "        ", 
      RowBox[{"ReleaseHold", "[", " ", 
       RowBox[{"replaced", " ", "/.", " ", 
        RowBox[{
         RowBox[{"$conditionHold", "[", " ", "e_", " ", "]"}], " ", ":>", " ",
          "e"}]}], " ", "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"a3c4461e-d6c7-437e-98ed-942e1b6014b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ASTCondition", " ", "/:", " ", 
   RowBox[{"MakeBoxes", "[", " ", 
    RowBox[{
     RowBox[{"ASTCondition", "[", " ", 
      RowBox[{"vals_List", ",", " ", "cond_"}], " ", "]"}], ",", " ", 
     "StandardForm"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"rules", ",", " ", "replaced"}], " ", "}"}], ",", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"rules", " ", "=", " ", 
       RowBox[{"MapIndexed", "[", " ", 
        RowBox[{"astCVBoxRule", ",", " ", "vals"}], " ", "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"replaced", " ", "=", " ", 
       RowBox[{
        RowBox[{"HoldComplete", " ", "@", " ", "cond"}], " ", "/.", " ", 
        "rules"}]}], ";", "\n", "        ", 
      RowBox[{"Replace", "[", "\n", "            ", 
       RowBox[{
        RowBox[{"replaced", " ", "/.", " ", 
         RowBox[{
          RowBox[{"$conditionHold", "[", " ", "e_", " ", "]"}], " ", ":>", 
          " ", "e"}]}], ",", "\n", "            ", 
        RowBox[{
         RowBox[{"HoldComplete", "[", " ", "e_", " ", "]"}], " ", ":>", "\n", 
         "                ", 
         RowBox[{"With", "[", "\n", "                    ", 
          RowBox[{
           RowBox[{"{", "\n", "                        ", 
            RowBox[{
             RowBox[{"box", " ", "=", "\n", "                            ", 
              RowBox[{
              "MakeBoxes", "[", "\n", "                                ", 
               RowBox[{
                RowBox[{
                "Tooltip", "[", "\n", "                                    ", 
                 RowBox[{
                 "e", ",", "\n", "                                    ", 
                  RowBox[{
                   RowBox[{"HoldForm", "[", " ", "ASTCondition", " ", "]"}], 
                   "[", " ", 
                   RowBox[{"vals", ",", " ", "cond"}], " ", "]"}]}], "\n", 
                 "                                ", "]"}], ",", "\n", 
                "                                ", "StandardForm"}], "\n", 
               "                            ", "]"}]}], ",", "\n", 
             "                        ", 
             RowBox[{"col", " ", "=", " ", 
              RowBox[{
               RowBox[{"ColorData", "[", " ", "97", " ", "]"}], "[", " ", "2",
                " ", "]"}]}]}], "\n", "                    ", "}"}], ",", 
           "\n", "                    ", 
           RowBox[{"InterpretationBox", "[", "\n", "                        ", 
            RowBox[{
             RowBox[{"FrameBox", "[", "\n", "                            ", 
              RowBox[{"box", ",", "\n", "                            ", 
               RowBox[{"RoundingRadius", " ", "->", " ", "3"}], ",", "\n", 
               "                            ", 
               RowBox[{"FrameStyle", "     ", "->", " ", "col"}], ",", "\n", 
               "                            ", 
               RowBox[{"FrameMargins", "   ", "->", " ", 
                RowBox[{"{", " ", 
                 RowBox[{
                  RowBox[{"{", " ", 
                   RowBox[{"4", ",", " ", "4"}], " ", "}"}], ",", " ", 
                  RowBox[{"{", " ", 
                   RowBox[{"1", ",", " ", "1"}], " ", "}"}]}], " ", "}"}]}]}],
               "\n", "                        ", "]"}], ",", "\n", 
             "                        ", 
             RowBox[{"ASTCondition", "[", " ", 
              RowBox[{"vals", ",", " ", "cond"}], " ", "]"}]}], "\n", 
            "                    ", "]"}]}], "\n", "                ", 
          "]"}]}]}], "\n", "        ", "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"3849e96a-0f93-447d-ba71-9debb190f1b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ASTCondition", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"6c487108-877c-46cf-84ab-40afac2edbeb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$conditionHold", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"4b9ffa69-7b0d-4058-b0da-5eb478bc832a"],

Cell[CellGroupData[{

Cell["astCVBoxRule", \
"Subsubsubsection",ExpressionUUID->"4181c2c4-2ffa-4c3e-bd8b-a86bc1a64a73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astCVBoxRule", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"71dad9e2-37cd-4421-afcf-acb9f9b01b75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astCVBoxRule", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"e63db291-4530-406d-af3d-783b128eab60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astCVBoxRule", "[", " ", 
    RowBox[{"node_", ",", " ", 
     RowBox[{"{", " ", "pos_", " ", "}"}]}], " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{
    RowBox[{"ASTConditionValue", " ", "@", " ", "pos"}], " ", "->", " ", 
    "node"}]}], 
  ";"}]], "Code",ExpressionUUID->"91a0e2b0-febc-4600-b190-abd10c8a1060"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astCVBoxRule", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"de7141f1-920a-45f3-bbfb-87f670f23a2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["astCVRule", \
"Subsubsubsection",ExpressionUUID->"d5001e46-8094-4b24-aba1-a1e1f7e7aa66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astCVRule", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"8e0e5b5a-b6c2-47c9-8dad-868ae1a0cb11"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astCVRule", "[", " ", 
    RowBox[{"node_", ",", " ", 
     RowBox[{"{", " ", "pos_", " ", "}"}]}], " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{
    RowBox[{"ASTConditionValue", " ", "@", " ", "pos"}], " ", "->", " ", 
    RowBox[{"FromAST", "[", " ", 
     RowBox[{"node", ",", " ", "$conditionHold"}], " ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"51da6e77-16f0-44ac-872f-ff0f4a3685da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astCVRule", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"aa944483-48c5-4c3a-95f0-af69a0476fdf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EquivalentNodeQ", \
"Subsubsection",ExpressionUUID->"cb613706-cd49-49f8-b4b8-d937f0559f18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquivalentNodeQ", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"e2c0942f-108d-41d6-a0a2-62895b0e24e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquivalentNodeQ", "[", " ", "nodes___", " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"SameQ", " ", "@@", " ", 
    RowBox[{"DeleteCases", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", "nodes", " ", "}"}], ",", " ", 
      RowBox[{"KeyValuePattern", "[", " ", 
       RowBox[{"Source", " ", "->", " ", "_"}], " ", "]"}], ",", " ", 
      "Infinity"}], " ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"4b471d99-0185-480d-95b4-b575cc70e435"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquivalentNodeQ", " ", "/:", " ", 
   RowBox[{"MakeBoxes", "[", " ", 
    RowBox[{
     RowBox[{"EquivalentNodeQ", "[", " ", "a___", " ", "]"}], ",", " ", 
     "StandardForm"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"With", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"{", "\n", "            ", 
      RowBox[{
       RowBox[{"row", " ", "=", "\n", "                ", 
        RowBox[{"RowBox", " ", "@", " ", 
         RowBox[{"Riffle", "[", "\n", "                    ", 
          RowBox[{
           RowBox[{"Cases", "[", "\n", "                        ", 
            RowBox[{
             RowBox[{"HoldComplete", " ", "@", " ", "a"}], ",", "\n", 
             "                        ", 
             RowBox[{"e_", " ", ":>", " ", 
              RowBox[{"MakeBoxes", "[", " ", 
               RowBox[{"e", ",", " ", "StandardForm"}], " ", "]"}]}]}], "\n", 
            "                    ", "]"}], ",", "\n", "                    ", 
           RowBox[{"StyleBox", "[", "\n", "                        ", 
            RowBox[{
            "\"\<\[TildeEqual]\>\"", ",", "\n", "                        ", 
             RowBox[{"FontColor", " ", "->", " ", "Orange"}], ",", "\n", 
             "                        ", 
             RowBox[{"FontWeight", " ", "->", " ", "\"\<Heavy\>\""}]}], "\n", 
            "                    ", "]"}]}], "\n", "                ", 
          "]"}]}]}], ",", "\n", "            ", 
       RowBox[{"tt", " ", "=", " ", 
        RowBox[{"ToBoxes", " ", "@", " ", 
         RowBox[{"HoldForm", " ", "@", " ", 
          RowBox[{
           RowBox[{"HoldForm", "[", " ", "EquivalentNodeQ", " ", "]"}], "[", 
           " ", "a", " ", "]"}]}]}]}], ",", "\n", "            ", 
       RowBox[{"col", " ", "=", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", " ", "97", " ", "]"}], "[", " ", "3", " ", 
         "]"}]}]}], "\n", "        ", "}"}], ",", "\n", "        ", 
     RowBox[{"InterpretationBox", "[", "\n", "            ", 
      RowBox[{
       RowBox[{"FrameBox", "[", "\n", "                ", 
        RowBox[{
         RowBox[{"TooltipBox", "[", " ", 
          RowBox[{"row", ",", " ", "tt"}], " ", "]"}], ",", "\n", 
         "                ", 
         RowBox[{"RoundingRadius", " ", "->", " ", "3"}], ",", "\n", 
         "                ", 
         RowBox[{"FrameStyle", " ", "->", " ", "col"}], ",", "\n", 
         "                ", 
         RowBox[{"FrameMargins", " ", "->", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", " ", 
             RowBox[{"4", ",", " ", "4"}], " ", "}"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"1", ",", " ", "1"}], " ", "}"}]}], " ", "}"}]}]}], "\n",
         "            ", "]"}], "\n", "            ", ",", "\n", 
       "            ", 
       RowBox[{"EquivalentNodeQ", " ", "@", " ", "a"}]}], "\n", "        ", 
      "]"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"4f75ecc7-0e47-49e2-89a6-caa9618e92b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquivalentNodeQ", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"0fff33a6-8f60-48ae-991a-4338a84a7e7e"]
}, Open  ]]
}, Open  ]],

Cell["Error cases", \
"Subsection",ExpressionUUID->"10d4ed03-636e-4f78-8e7f-bafbbd1af485"],

Cell[CellGroupData[{

Cell["Dependencies", \
"Subsection",ExpressionUUID->"e0e87e00-a1ac-4708-8413-956113eaa4bd"],

Cell[CellGroupData[{

Cell["Pattern", \
"Subsubsection",ExpressionUUID->"4019d02a-071f-46b6-9fe5-016344604003"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Pattern", " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"sym_Symbol", "?", " ", "symbolQ"}], ",", " ", "patt_"}], " ", 
     "]"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Pattern", " ", "@@", " ", 
    RowBox[{"Hold", "[", " ", 
     RowBox[{"sym", ",", " ", 
      RowBox[{"astPattern", " ", "@", " ", "patt"}]}], " ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"9fee0054-2e1b-455c-8af0-30a59ba89616"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Special patterns", \
"Subsubsection",ExpressionUUID->"65096c81-862d-44e9-9eab-6bdc55cc503b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", "patt_ASTPattern", "  ", "]"}], " ", ":=", 
   " ", "patt"}], 
  ";"}]], "Code",ExpressionUUID->"585f1228-07c6-4503-a124-d546d8ef6aed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", "patt_$astPattern", " ", "]"}], " ", ":=", 
   " ", "patt"}], 
  ";"}]], "Code",ExpressionUUID->"a64f9576-e770-41d0-8630-8b2da7673857"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Verbatim", "     ", "]"}], "[", " ", "a_",
      "   ", "]"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"verbatimAST", " ", "@", " ", "a"}]}], 
  ";"}]], "Code",ExpressionUUID->"e9c89ce9-0c84-469f-9874-0384b82c5db3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "HoldPattern", "  ", "]"}], "[", " ", "a_",
      "   ", "]"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"astPattern", " ", "@", " ", "a"}]}], 
  ";"}]], "Code",ExpressionUUID->"c790748d-62ed-400d-9dd3-bce76f1c7f7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Alternatives", " ", "]"}], "[", " ", 
     "a___", " ", "]"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Alternatives", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"astPattern", " ", "/@", " ", 
      RowBox[{"HoldComplete", " ", "@", " ", "a"}]}], ")"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"9cd60859-ce7b-40b9-a88e-761278e0b2ed"],

Cell[CellGroupData[{

Cell["verbatimAST", \
"Subsubsubsection",ExpressionUUID->"829dc75d-5d3b-4fd1-94b4-062b18881eff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"verbatimAST", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"1de4b0ad-89d6-4e44-9840-2191cb79663e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"verbatimAST", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"383d93b3-aa43-42cc-b341-1ef3a1528e7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"verbatimAST", "[", " ", 
    RowBox[{"sym_Symbol", "?", " ", "symbolQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"symNamePatt", " ", "@", " ", "sym"}]}], 
  ";"}]], "Code",ExpressionUUID->"475e087a-dc8e-4c16-a6b0-3e45561a2e82"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"verbatimAST", "[", " ", "r_Rational", " ", "]"}], " ", "/;", " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "r"}]}]}], " ", ":=", " ", 
   RowBox[{"rationalPattern", " ", "@", " ", "r"}]}], 
  ";"}]], "Code",ExpressionUUID->"0455282a-817a-41dc-bd73-8558540118c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"verbatimAST", "[", " ", "c_Complex", "  ", "]"}], " ", "/;", " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "c"}]}]}], " ", ":=", " ", 
   RowBox[{"complexPattern", "  ", "@", " ", "c"}]}], 
  ";"}]], "Code",ExpressionUUID->"a2ad5d46-0d4e-4433-81dc-03609308ec46"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"verbatimAST", "[", " ", 
     RowBox[{"expr", ":", " ", 
      RowBox[{"_Integer", "|", "_Real", "|", "_String"}]}], " ", "]"}], " ", "/;",
     " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"leafNode", "[", " ", 
    RowBox[{
     RowBox[{"Head", " ", "@", " ", "expr"}], ",", " ", 
     RowBox[{"ToString", "[", " ", 
      RowBox[{"expr", ",", " ", "InputForm"}], " ", "]"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"e4221c83-970b-40a0-b311-b709a5f2e85a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"verbatimAST", "[", " ", 
    RowBox[{"head_", "[", " ", "args___", " ", "]"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"CallNode", "[", " ", 
    RowBox[{
     RowBox[{"astPattern", " ", "@", " ", "head"}], ",", " ", 
     RowBox[{"astPattern", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", " ", "args", " ", "}"}]}]}], ",", " ", "_"}], " ", 
    "]"}]}], ";"}]], \
"Code",ExpressionUUID->"8147024f-fef3-423a-9588-2043630d90a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"verbatimAST", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"c858aef3-9dbd-47a0-9695-6ff1024b0bb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Blanks", \
"Subsubsection",ExpressionUUID->"1307ec00-3ce8-4d57-873a-83ba26047336"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{"Verbatim", "[", " ", "_", "   ", "]"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"callOrLeafNode", "[", " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"9a2cd5ac-3bc1-434f-9c04-6ba6afc73106"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{"Verbatim", "[", " ", "__", "  ", "]"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"callOrLeafNode", "[", " ", "]"}], ".."}]}], 
  ";"}]], "Code",ExpressionUUID->"b9972ffc-919b-4d0a-8689-2776e566639c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{"Verbatim", "[", " ", "___", " ", "]"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"callOrLeafNode", "[", " ", "]"}], "..."}]}], 
  ";"}]], "Code",ExpressionUUID->"c2fa6ad6-e59b-4b80-a1bc-d9f81a38f1c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Blank", "             ", "]"}], "[", " ", 
     RowBox[{"sym_", "?", " ", "symbolQ"}], " ", "]"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"blank", " ", "@", " ", "sym"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "BlankSequence", "     ", "]"}], "[", " ", 
     RowBox[{"sym_", "?", " ", "symbolQ"}], " ", "]"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{
    RowBox[{"blank", " ", "@", " ", "sym"}], ".."}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "BlankNullSequence", " ", "]"}], "[", " ", 
     RowBox[{"sym_", "?", " ", "symbolQ"}], " ", "]"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{
    RowBox[{"blank", " ", "@", " ", "sym"}], "..."}]}], 
  ";"}]}], "Code",ExpressionUUID->"99e745f2-ced2-44e6-9a72-f55ee7e25828"],

Cell[CellGroupData[{

Cell["blank", \
"Subsubsubsection",ExpressionUUID->"190e861c-54c7-4a1c-8b0e-12d987bf705b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"blank", " ", "//", " ", "beginDefinition"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blank", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blank", "[", " ", 
    RowBox[{"sym_", "?", " ", "leafHeadQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"callOrLeafNode", "[", " ", 
    RowBox[{
     RowBox[{"sym", " ", "|", " ", 
      RowBox[{"symNamePatt", " ", "@", " ", "sym"}]}], ",", " ", "_", ",", 
     " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blank", "[", " ", "sym_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"callNode", " ", "@", " ", 
    RowBox[{"symNamePatt", " ", "@", " ", "sym"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"blank", " ", "//", " ", "endDefinition"}], 
  ";"}]}], "Code",ExpressionUUID->"4b46eaf8-8a29-4951-8296-09e6b5ad5c2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["leafNode", \
"Subsubsubsection",ExpressionUUID->"09d13038-97a3-491d-ad0d-706070c961b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leafNode", " ", "//", " ", "beginDefinition"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafNode", "[", "            ", "]"}], " ", ":=", " ", 
   RowBox[{"LeafNode", "[", " ", 
    RowBox[{"_", ",", " ", "_", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafNode", "[", " ", "a_", "         ", "]"}], " ", ":=", " ", 
   RowBox[{"LeafNode", "[", " ", 
    RowBox[{"a", ",", " ", "_", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafNode", "[", " ", 
    RowBox[{"a_", ",", " ", "b_"}], "     ", "]"}], " ", ":=", " ", 
   RowBox[{"LeafNode", "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafNode", "[", " ", 
    RowBox[{"a_", ",", " ", "b_", ",", " ", "c_"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"LeafNode", "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"leafNode", " ", "//", " ", "endDefinition"}], 
  ";"}]}], "Code",ExpressionUUID->"cdce6dda-6940-4488-9082-dc657f5ae86c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["callNode", \
"Subsubsubsection",ExpressionUUID->"9f725602-5783-435d-abfc-d8eaf141e14e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"callNode", " ", "//", " ", "beginDefinition"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callNode", "[", "            ", "]"}], " ", ":=", " ", 
   RowBox[{"CallNode", "[", " ", 
    RowBox[{"_", ",", " ", "_", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callNode", "[", " ", "a_", "         ", "]"}], " ", ":=", " ", 
   RowBox[{"CallNode", "[", " ", 
    RowBox[{"a", ",", " ", "_", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callNode", "[", " ", 
    RowBox[{"a_", ",", " ", "b_"}], "     ", "]"}], " ", ":=", " ", 
   RowBox[{"CallNode", "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callNode", "[", " ", 
    RowBox[{"a_", ",", " ", "b_", ",", " ", "c_"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"CallNode", "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"callNode", " ", "//", " ", "endDefinition"}], 
  ";"}]}], "Code",ExpressionUUID->"bfc187f7-f620-41a7-909b-10b39ec0101a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["callOrLeafNode", \
"Subsubsubsection",ExpressionUUID->"da95833a-4bde-4564-8323-39ecd8ea25ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"callOrLeafNode", " ", "//", " ", "beginDefinition"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callOrLeafNode", "[", "            ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CallNode", "|", "LeafNode"}], ")"}], "[", " ", 
    RowBox[{"_", ",", " ", "_", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callOrLeafNode", "[", " ", "a_", "         ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CallNode", "|", "LeafNode"}], ")"}], "[", " ", 
    RowBox[{"a", ",", " ", "_", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callOrLeafNode", "[", " ", 
    RowBox[{"a_", ",", " ", "b_"}], "     ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CallNode", "|", "LeafNode"}], ")"}], "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "_"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callOrLeafNode", "[", " ", 
    RowBox[{"a_", ",", " ", "b_", ",", " ", "c_"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CallNode", "|", "LeafNode"}], ")"}], "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c"}], " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"callOrLeafNode", " ", "//", " ", "endDefinition"}], 
  ";"}]}], "Code",ExpressionUUID->"d02c53ea-3bba-408b-8017-27a78f2652a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["leafHeadQ", \
"Subsubsubsection",ExpressionUUID->"1e2d1ddd-bee7-4ad7-9543-7cc3998101c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leafHeadQ", " ", "//", " ", "ClearAll"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafHeadQ", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafHeadQ", "[", " ", 
    RowBox[{
    "Complex", "|", "Integer", "|", "Rational", "|", "Real", "|", "String", 
     "|", "Symbol"}], " ", "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafHeadQ", "[", " ", "___", " ", "]"}], " ", ":=", " ", 
   "False"}], 
  ";"}]}], "Code",ExpressionUUID->"16800649-f0d6-4b35-b595-1e68d255b3bd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repeated", \
"Subsubsection",ExpressionUUID->"ce09d735-d7c7-4020-a811-28e2d42ea02a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Repeated", " ", "]"}], "[", " ", 
     RowBox[{"x_", ",", " ", "a___"}], " ", "]"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"Repeated", "[", " ", 
    RowBox[{
     RowBox[{"astPattern", " ", "@", " ", "x"}], ",", " ", "a"}], " ", 
    "]"}]}], ";"}]], \
"Code",ExpressionUUID->"77639535-ffb8-4da0-a415-7218ecb6d8af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "RepeatedNull", " ", "]"}], "[", " ", 
     RowBox[{"x_", ",", " ", "a___"}], " ", "]"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"RepeatedNull", "[", " ", 
    RowBox[{
     RowBox[{"astPattern", " ", "@", " ", "x"}], ",", " ", "a"}], " ", 
    "]"}]}], ";"}]], \
"Code",ExpressionUUID->"f21313a6-43c1-4feb-879d-8d2c1b42621b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Except", \
"Subsubsection",ExpressionUUID->"1761a3fe-3878-49db-b764-6f17746d58e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Except", " ", "]"}], "[", " ", "c_", " ", 
     "]"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Except", " ", "@", " ", 
    RowBox[{"astPattern", " ", "@", " ", "c"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"b519dd38-d9ac-4adc-a424-d6a722c25ddb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Except", " ", "]"}], "[", " ", 
     RowBox[{"c_", ",", " ", "p_"}], " ", "]"}], " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"Except", "[", " ", 
    RowBox[{
     RowBox[{"astPattern", " ", "@", " ", "c"}], ",", " ", 
     RowBox[{"astPattern", " ", "@", " ", "p"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"8915d5f1-8dc4-4382-93c1-c566ebe4895a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sequence Patterns", \
"Subsubsection",ExpressionUUID->"8b0d9d7f-7cb0-4788-997d-57e9ed977fc4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "PatternSequence", " ", "]"}], "[", " ", 
     "a___", " ", "]"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"PatternSequence", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"astPattern", " ", "/@", " ", 
      RowBox[{"HoldComplete", " ", "@", " ", "a"}]}], ")"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"8de95b2d-fca1-4fbe-bf22-b7de68772106"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PatternTest", \
"Subsubsection",ExpressionUUID->"69693765-fa53-482f-892c-da97147f7442"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "PatternTest", " ", "]"}], "[", "\n", 
     "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"Verbatim", "[", " ", "Pattern", " ", "]"}], "[", " ", 
       RowBox[{
        RowBox[{"s_Symbol", "?", " ", "symbolQ"}], ",", " ", "patt_"}], " ", 
       "]"}], ",", "\n", "    ", "test_"}], "\n", "]"}], " ", "]"}], " ", ":=",
    "\n", "    ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"astPattern", " ", "@", " ", 
        RowBox[{"PatternTest", "[", " ", 
         RowBox[{"patt", ",", " ", "test"}], " ", "]"}]}]}], " ", "}"}], ",", 
     "\n", "        ", 
     RowBox[{"Pattern", " ", "@@", " ", 
      RowBox[{"HoldComplete", "[", " ", 
       RowBox[{"s", ",", " ", "p"}], " ", "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"025de58f-963f-4e91-8026-6e67425109fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"astPattern", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"Verbatim", "[", " ", "PatternTest", " ", "]"}], "[", "\n", 
      "        ", 
      RowBox[{
       RowBox[{
        RowBox[{"Verbatim", "[", " ", "Blank", " ", "]"}], "[", " ", 
        RowBox[{"head_", "?", " ", "symbolQ"}], " ", "]"}], ",", "\n", 
       "        ", "test_"}], "\n", "    ", "]"}], " ", "]"}], " ", "/;", " ", 
    RowBox[{"leafTestQ", "[", " ", 
     RowBox[{"head", ",", " ", "test"}], " ", "]"}]}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"leafNode", " ", "@", " ", "head"}]}], 
  ";"}]], "Code",ExpressionUUID->"f6df1878-4636-4f73-879e-b0bd26ab51d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"astPattern", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"Verbatim", "[", " ", "PatternTest", " ", "]"}], "[", "\n", 
      "        ", 
      RowBox[{
       RowBox[{
        RowBox[{"Verbatim", "[", " ", "BlankSequence", " ", "]"}], "[", " ", 
        RowBox[{"head_", "?", " ", "symbolQ"}], " ", "]"}], ",", "\n", 
       "        ", "test_"}], "\n", "    ", "]"}], "\n", "]"}], " ", "/;", 
    " ", 
    RowBox[{"leafTestQ", "[", " ", 
     RowBox[{"head", ",", " ", "test"}], " ", "]"}]}], " ", ":=", "\n", 
   "    ", 
   RowBox[{
    RowBox[{"leafNode", " ", "@", " ", "head"}], ".."}]}], 
  ";"}]], "Code",ExpressionUUID->"15f171da-4e4b-4085-88e3-d2d741fb61fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"astPattern", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"Verbatim", "[", " ", "PatternTest", " ", "]"}], "[", "\n", 
      "        ", 
      RowBox[{
       RowBox[{
        RowBox[{"Verbatim", "[", " ", "BlankNullSequence", " ", "]"}], "[", 
        " ", 
        RowBox[{"head_", "?", " ", "symbolQ"}], " ", "]"}], ",", "\n", 
       "        ", "test_"}], "\n", "    ", "]"}], "\n", "]"}], " ", "/;", 
    " ", 
    RowBox[{"leafTestQ", "[", " ", 
     RowBox[{"head", ",", " ", "test"}], " ", "]"}]}], " ", ":=", "\n", 
   "    ", 
   RowBox[{
    RowBox[{"leafNode", " ", "@", " ", "head"}], "..."}]}], 
  ";"}]], "Code",ExpressionUUID->"3ec35b1e-cee6-4962-8d5b-7c0ee49ec951"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "PatternTest", " ", "]"}], "[", " ", 
     RowBox[{"patt_", ",", " ", "test_"}], " ", "]"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"astPattern", " ", "@", " ", "patt"}]}], " ", "}"}], ",", "\n",
      "        ", 
     RowBox[{"PatternTest", " ", "@@", " ", 
      RowBox[{"HoldComplete", "[", " ", 
       RowBox[{"p", ",", " ", 
        RowBox[{"ASTPatternTest", " ", "@", " ", "test"}]}], " ", "]"}]}]}], 
    "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"70eecc9c-f754-4fc4-81f2-93910b2d2449"],

Cell[CellGroupData[{

Cell["leafTestQ", \
"Subsubsubsection",ExpressionUUID->"136081f9-13c4-46b7-a260-3966f0ab1a81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"leafTestQ", " ", "//", " ", "ClearAll"}], 
  ";"}]], "Code",ExpressionUUID->"568c94f5-d920-471f-8d44-4e9eba3a4ae7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"leafTestQ", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"22aef27c-401d-4db3-867b-a63cba36c70c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"leafTestQ", "[", " ", 
    RowBox[{"Integer", ",", " ", "IntegerQ"}], "     ", "]"}], " ", ":=", " ",
    "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafTestQ", "[", " ", 
    RowBox[{"Real", ",", " ", "Developer`RealQ"}], " ", "]"}], " ", ":=", " ",
    "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafTestQ", "[", " ", 
    RowBox[{"String", ",", " ", "StringQ"}], "       ", "]"}], " ", ":=", " ",
    "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafTestQ", "[", " ", 
    RowBox[{
     RowBox[{"_", "?", " ", "leafHeadQ"}], ",", " ", "AtomQ"}], "   ", "]"}], 
   " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leafTestQ", "[", " ", "___", "                   ", "]"}], " ", ":=",
    " ", "False"}], 
  ";"}]}], "Code",ExpressionUUID->"9b905abe-b0f9-4e37-b5a3-e1d3a4db3c9b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Atoms", \
"Subsubsection",ExpressionUUID->"3591d573-16d5-435a-9d62-786b3f3598fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{"sym_Symbol", "?", " ", "symbolQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"symNamePatt", " ", "@", " ", "sym"}]}], 
  ";"}]], "Code",ExpressionUUID->"509ea5c6-13fb-476c-b3c0-c26173ae7c05"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"astPattern", "[", " ", "r_Rational", " ", "]"}], " ", "/;", " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "r"}]}]}], " ", ":=", " ", 
   RowBox[{"rationalPattern", " ", "@", " ", "r"}]}], 
  ";"}]], "Code",ExpressionUUID->"6988265f-4df8-4ef7-b73e-3a47715d12bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"astPattern", "[", " ", "c_Complex", "  ", "]"}], " ", "/;", " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "c"}]}]}], " ", ":=", " ", 
   RowBox[{"complexPattern", "  ", "@", " ", "c"}]}], 
  ";"}]], "Code",ExpressionUUID->"ba1c4aa5-6f21-47eb-b3a7-6b88a263110f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"astPattern", "[", " ", 
     RowBox[{"expr", ":", " ", 
      RowBox[{"_Integer", "|", "_Real", "|", "_String"}]}], " ", "]"}], " ", "/;",
     " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"leafNode", "[", " ", 
    RowBox[{
     RowBox[{"Head", " ", "@", " ", "expr"}], ",", " ", 
     RowBox[{"ToString", "[", " ", 
      RowBox[{"expr", ",", " ", "InputForm"}], " ", "]"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"338f0d66-c2ce-42b9-9c04-7391185893ad"],

Cell[CellGroupData[{

Cell["rationalPattern", \
"Subsubsubsection",ExpressionUUID->"001258cc-460f-45f5-8532-65605849161a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rationalPattern", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"ae0c4a7d-6229-46ae-801b-6c488ce75ab1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rationalPattern", "[", " ", "r_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"rationalPattern", "[", " ", 
    RowBox[{
     RowBox[{"Numerator", " ", "@", " ", "r"}], ",", " ", 
     RowBox[{"Denominator", " ", "@", " ", "r"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"a92f6ebc-5ed5-42bb-81fa-6a24bed0acf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rationalPattern", "[", " ", 
    RowBox[{"n_", ",", " ", "d_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"na", ",", " ", "da", ",", " ", "mo", ",", " ", "pw"}], " ", 
      "}"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"na", " ", "=", " ", 
       RowBox[{"astPattern", " ", "@", " ", "n"}]}], ";", "\n", "        ", 
      RowBox[{"da", " ", "=", " ", 
       RowBox[{"astPattern", " ", "@", " ", "d"}]}], ";", "\n", "        ", 
      RowBox[{"mo", " ", "=", " ", 
       RowBox[{"leafNode", "[", " ", 
        RowBox[{"Integer", ",", " ", "\"\<-1\>\""}], " ", "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"pw", " ", "=", " ", 
       RowBox[{"callNode", "[", " ", 
        RowBox[{
         RowBox[{"symbolNode", "[", " ", "\"\<Power\>\"", " ", "]"}], ",", 
         " ", 
         RowBox[{"{", " ", 
          RowBox[{"da", ",", " ", "mo"}], " ", "}"}]}], " ", "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"callNode", "[", " ", 
       RowBox[{
        RowBox[{"symbolNode", "[", " ", "\"\<Times\>\"", " ", "]"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"na", ",", " ", "pw"}], " ", "}"}]}], " ", "]"}]}]}], "\n", 
    "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"96841b60-fc7e-4ca7-a305-ab9f5c8853c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rationalPattern", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"52586c04-f712-4923-b068-752ef93b2312"]
}, Open  ]],

Cell[CellGroupData[{

Cell["complexPattern", \
"Subsubsubsection",ExpressionUUID->"472ba357-089d-485a-82cf-de35ba6e6b11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"complexPattern", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"a97138ff-a06b-4a4a-8c7c-7567b8896b08"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"complexPattern", "[", " ", "c_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"complexPattern", "[", " ", 
    RowBox[{
     RowBox[{"Re", " ", "@", " ", "c"}], ",", " ", 
     RowBox[{"Im", " ", "@", " ", "c"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"05b72258-ac95-43a2-826d-393d3cca5f07"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"complexPattern", "[", " ", 
    RowBox[{"r_", ",", " ", "i_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"ra", ",", " ", "ia", ",", " ", "im"}], " ", "}"}], ",", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"ra", " ", "=", " ", 
       RowBox[{"astPattern", " ", "@", " ", "r"}]}], ";", "\n", "        ", 
      RowBox[{"ia", " ", "=", " ", 
       RowBox[{"astPattern", " ", "@", " ", "i"}]}], ";", "\n", "        ", 
      RowBox[{"im", " ", "=", " ", 
       RowBox[{"callNode", "[", " ", 
        RowBox[{
         RowBox[{"symbolNode", "[", " ", "\"\<Times\>\"", " ", "]"}], ",", 
         " ", 
         RowBox[{"{", " ", 
          RowBox[{"ia", ",", " ", 
           RowBox[{"symbolNode", "[", " ", "\"\<I\>\"", " ", "]"}]}], " ", 
          "}"}]}], " ", "]"}]}], ";", "\n", "        ", 
      RowBox[{"callNode", "[", " ", 
       RowBox[{
        RowBox[{"symbolNode", "[", " ", "\"\<Plus\>\"", " ", "]"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"ra", ",", " ", "im"}], " ", "}"}]}], " ", "]"}]}]}], "\n", 
    "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"f9bbf0d8-0f0d-4915-89c6-88e73b70f761"],

Cell[BoxData[
 RowBox[{
  RowBox[{"complexPattern", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"718f4a63-2c5d-43bf-99c2-4a42e3037569"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Condition", \
"Subsubsection",ExpressionUUID->"26410c79-423b-4d25-a731-95f7738a559f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{
     RowBox[{"Verbatim", "[", " ", "Condition", " ", "]"}], "[", " ", 
     RowBox[{"patt_", ",", " ", "test_"}], " ", "]"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{
    RowBox[{
     RowBox[{"makeASTCondition", "[", " ", 
      RowBox[{"patt", ",", " ", "test"}], " ", "]"}], " ", "/.", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"$ASTCondition", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", "}"}], ",", " ", "cond_"}], " ", "]"}], " ", ":>", 
      " ", "cond"}]}], "  ", "/.", "\n", "            ", 
    RowBox[{"$ASTCondition", " ", "->", " ", "ASTCondition"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"da928d41-d406-4fd6-a4ee-1eda3f03954f"],

Cell[CellGroupData[{

Cell["makeASTCondition", \
"Subsubsubsection",ExpressionUUID->"d693393f-9070-4246-952d-12a5bdb7e391"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeASTCondition", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"b72baa1a-4723-4c64-809b-ce7440584ff2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeASTCondition", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAll", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"82360f04-f858-4cde-89db-30849d6ef54b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeASTCondition", "[", " ", 
    RowBox[{"lhs_", ",", " ", "rhs_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
      "syms", ",", " ", "bound", ",", " ", "vals", ",", " ", "hs", ",", " ", 
       "cvRules", ",", " ", "cv"}], " ", "}"}], ",", "\n", "\n", "        ", 
     RowBox[{
      RowBox[{"syms", "    ", "=", " ", 
       RowBox[{"DeleteDuplicates", " ", "@", " ", 
        RowBox[{"patternSymbols", " ", "@", " ", "lhs"}]}]}], ";", "\n", 
      "        ", 
      RowBox[{"bound", "   ", "=", " ", 
       RowBox[{"Select", "[", " ", 
        RowBox[{"syms", ",", " ", 
         RowBox[{"appearsIn", " ", "@", " ", "rhs"}]}], " ", "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"vals", "    ", "=", " ", 
       RowBox[{"Array", "[", " ", 
        RowBox[{"ASTConditionValue", ",", " ", 
         RowBox[{"Length", " ", "@", " ", "bound"}]}], " ", "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"hs", "      ", "=", " ", 
       RowBox[{"Cases", "[", " ", 
        RowBox[{"bound", ",", " ", 
         RowBox[{"e_", " ", ":>", " ", 
          RowBox[{"HoldPattern", " ", "@", " ", "e"}]}]}], " ", "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"cvRules", " ", "=", " ", 
       RowBox[{"Thread", "[", " ", 
        RowBox[{"hs", " ", "->", " ", "vals"}], " ", "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"cv", "      ", "=", " ", 
       RowBox[{
        RowBox[{"HoldComplete", " ", "@", " ", "rhs"}], " ", "/.", " ", 
        "cvRules"}]}], ";", "\n", "\n", "        ", 
      RowBox[{"Condition", " ", "@@", " ", 
       RowBox[{"Replace", "[", "\n", "            ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"bound", ",", " ", "cv"}], " ", "}"}], ",", "\n", 
         "            ", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"HoldComplete", "[", " ", "s___", " ", "]"}], ",", " ", 
            RowBox[{"HoldComplete", "[", " ", "c_", " ", "]"}]}], " ", "}"}], 
          " ", ":>", " ", 
          RowBox[{"{", "\n", "                ", 
           RowBox[{
            RowBox[{"checkDuplicatePatterns", " ", "@", " ", 
             RowBox[{"astPattern", " ", "@", " ", "lhs"}]}], ",", "\n", 
            "                ", 
            RowBox[{"$ASTCondition", "[", " ", 
             RowBox[{
              RowBox[{"{", " ", "s", " ", "}"}], ",", " ", "c"}], " ", 
             "]"}]}], "\n", "            ", "}"}]}]}], "\n", "        ", 
        "]"}]}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"e4ddc377-ef84-43f4-8aeb-2a098d574d81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeASTCondition", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"42bf907c-bc10-4723-b96f-403a0f695e79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$ASTCondition", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"81851974-7400-4681-a409-ae7bd2bbbc77"]
}, Open  ]],

Cell[CellGroupData[{

Cell["appearsIn", \
"Subsubsubsection",ExpressionUUID->"90bfa3af-5592-4a5a-9f10-8405b2f13995"],

Cell[BoxData[
 RowBox[{
  RowBox[{"appearsIn", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"31b2dada-4ee0-45ba-87e1-7cd995be6a98"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"appearsIn", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"3e33cfb1-2fe8-40d1-89da-8bfb2d4a71b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"appearsIn", "[", " ", "rhs_", " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Function", "[", " ", 
    RowBox[{"s", ",", " ", 
     RowBox[{"!", " ", 
      RowBox[{"FreeQ", "[", " ", 
       RowBox[{
        RowBox[{"Unevaluated", " ", "@", " ", "rhs"}], ",", " ", 
        RowBox[{"HoldPattern", " ", "@", " ", "s"}]}], " ", "]"}]}], ",", " ",
      "HoldFirst"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"4fd093ca-9dfa-4672-ae88-51592db38d45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"appearsIn", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"99be7611-1948-4006-b26f-54db1e5f8121"]
}, Open  ]],

Cell[CellGroupData[{

Cell["patternSymbols", \
"Subsubsubsection",ExpressionUUID->"73dd0b17-b217-4bb5-a518-b8653aa46844"],

Cell[BoxData[
 RowBox[{
  RowBox[{"patternSymbols", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"7b922d2f-a50e-41bf-869d-a5be77fe9959"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"patternSymbols", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"0c9f098b-3839-4351-ab8d-7f1aa59bf995"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"patternSymbols", "[", " ", "patt_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"HoldComplete", " ", "@@", " ", 
     RowBox[{"patternSymbols0", " ", "@", " ", "patt"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"8108893a-dd2d-4cfc-aa7d-1531decc0afc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"patternSymbols", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"74e33ca4-d6c7-4158-82a7-b6edd10fedbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"patternSymbols0", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"c9787220-090f-470f-a995-903feebe70a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"patternSymbols0", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"441349a6-dbcc-4a8a-bcfe-d781b11d4899"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"patternSymbols0", "[", " ", "patt_", " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"Cases", "[", " ", 
    RowBox[{
     RowBox[{"HoldComplete", " ", "@", " ", "patt"}], ",", "\n", 
     "           ", 
     RowBox[{
      RowBox[{
       RowBox[{"Verbatim", "[", " ", "Pattern", " ", "]"}], "[", " ", 
       RowBox[{
        RowBox[{"s_Symbol", "?", " ", "symbolQ"}], ",", " ", "_"}], " ", 
       "]"}], " ", ":>", " ", 
      RowBox[{"HoldComplete", " ", "@", " ", "s"}]}], ",", "\n", 
     "           ", "Infinity", ",", "\n", "           ", 
     RowBox[{"Heads", " ", "->", " ", "True"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"f7c11bc3-a518-4422-bc52-b8842fd521a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"patternSymbols0", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"e9a01ad1-84e3-4966-9164-72754dfb8f2c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["astConditionRule", \
"Subsubsection",ExpressionUUID->"de0f9182-94bf-4183-b433-36103669c4f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astConditionRule", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"5fb9fb2e-20cf-4ede-997a-13a751033145"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astConditionRule", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"7c8ed294-9309-482c-8c3b-f9b6f1dbfaea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astConditionRule", "[", " ", "x_", " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{
    RowBox[{"HoldPattern", " ", "@", " ", "x"}], " ", ":>", " ", 
    RowBox[{"RuleCondition", "[", " ", 
     RowBox[{
      RowBox[{"FromAST", "[", " ", 
       RowBox[{"x", ",", " ", "$ConditionHold"}], " ", "]"}], ",", " ", 
      "True"}], " ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"414b09dd-5066-40db-8257-ce2e0e33aa29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astConditionRule", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"675aed5c-85b5-4aa8-90a6-e6957cf4d61b"],

Cell[CellGroupData[{

Cell["astConditionPattern", \
"Subsubsubsection",ExpressionUUID->"1b5066ee-7340-44d7-87ed-e10f8316f2a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astConditionPattern", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"dcd2f8c2-03f6-4c5a-ae14-709e2ff552c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astConditionPattern", " ", "//", " ", "Attributes"}], " ", "=", 
   " ", 
   RowBox[{"{", " ", "HoldRest", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"b3f6f6e1-d12e-4c59-825a-461da1405cdd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astConditionPattern", "[", " ", 
    RowBox[{"lhs_", ",", " ", "rhs_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"rules", " ", "=", " ", 
       RowBox[{"rhsConditionRules", " ", "@", " ", "lhs"}]}], " ", "}"}], ",",
      "\n", "        ", 
     RowBox[{
      RowBox[{"Condition", " ", "@@", " ", 
       RowBox[{"HoldComplete", "[", " ", 
        RowBox[{"lhs", ",", " ", 
         RowBox[{
          RowBox[{"Unevaluated", " ", "@", " ", "rhs"}], " ", "/.", " ", 
          "rules"}]}], " ", "]"}]}], " ", "/.", "\n", "            ", 
      RowBox[{
       RowBox[{"$conditionRules", "[", " ", "r___", " ", "]"}], " ", ":>", 
       " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"{", " ", "r", " ", "}"}]}]}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"e3dedd29-51b8-4f51-87d1-5f8fc813d9df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astConditionPattern", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"c494d09e-0e22-4bab-be92-af93f230ad7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rhsConditionRules", \
"Subsubsubsection",ExpressionUUID->"dfb47863-09fa-4182-8189-44c382a3fa6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rhsConditionRules", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"cb32459e-cac0-4053-9a26-1c89b1d6c29e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rhsConditionRules", "[", " ", "lhs_", " ", "]"}], " ", ":=", "\n",
    "    ", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"$conditionRules", " ", "@@", " ", 
     RowBox[{"Cases", "[", "\n", "        ", 
      RowBox[{
       RowBox[{"HoldComplete", " ", "@", " ", "lhs"}], ",", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{"Verbatim", "[", " ", "Pattern", " ", "]"}], "[", " ", 
         RowBox[{
          RowBox[{"s_Symbol", "?", " ", "symbolQ"}], ",", " ", "_"}], " ", 
         "]"}], " ", ":>", "\n", "            ", 
        RowBox[{"$conditionRules", " ", "@", " ", 
         RowBox[{"Cases", "[", "\n", "                ", 
          RowBox[{
           RowBox[{"HoldComplete", " ", "@", " ", "s"}], ",", "\n", 
           "                ", 
           RowBox[{"e_", " ", ":>", " ", 
            RowBox[{
             RowBox[{"HoldPattern", " ", "@", " ", "e"}], " ", ":>", "\n", 
             "                    ", 
             RowBox[{"RuleCondition", "[", " ", 
              RowBox[{
               RowBox[{"FromAST", "[", " ", 
                RowBox[{"e", ",", " ", "$ConditionHold"}], " ", "]"}], ",", 
               " ", "True"}], " ", "]"}]}]}]}], "\n", "            ", 
          "]"}]}]}], ",", "\n", "        ", "Infinity", ",", "\n", "        ", 
       RowBox[{"Heads", " ", "->", " ", "True"}]}], "\n", "    ", "]"}]}], 
    " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"73efa8f8-c550-4f8b-b01f-ed17d6cfbc15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rhsConditionRules", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"a038d5c7-e118-41c9-8edf-3cbc601fc787"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$conditionRules", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"970464a4-4dcc-4509-a818-ad9318887e71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normal expressions", \
"Subsubsection",ExpressionUUID->"398dde44-e375-4bb4-8efa-e6148cc7b8a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{"head_", "[", " ", "args___", " ", "]"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"CallNode", "[", " ", 
    RowBox[{
     RowBox[{"astPattern", " ", "@", " ", "head"}], ",", " ", 
     RowBox[{"astPattern", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", " ", "args", " ", "}"}]}]}], ",", " ", "_"}], " ", 
    "]"}]}], ";"}]], \
"Code",ExpressionUUID->"98881948-460c-4a83-a970-42e6f21542e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two argument form", \
"Subsubsection",ExpressionUUID->"73a37576-5f39-45ff-8d43-14094d42dce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", 
    RowBox[{"patt_", ",", " ", "meta_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"insertMetaPatt", "[", " ", 
    RowBox[{
     RowBox[{"checkDuplicatePatterns", " ", "@", " ", 
      RowBox[{"astPattern", " ", "@", " ", "patt"}]}], ",", " ", "meta"}], 
    " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"86abc28c-fcb8-4617-928f-2418b286ac9d"],

Cell[CellGroupData[{

Cell["insertMetaPatt", \
"Subsubsubsection",ExpressionUUID->"5ee04582-1e8e-4711-a03a-1c74c4343b1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"insertMetaPatt", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"8e65f85c-cf0d-4d49-9071-e15894f0b35e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"insertMetaPatt", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"h", ":", " ", 
        RowBox[{"CallNode", "|", "LeafNode"}]}], ")"}], "[", " ", 
      RowBox[{"a_", ",", " ", "b_", ",", " ", "_"}], " ", "]"}], ",", " ", 
     "meta_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"h", "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "meta"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"0986f92f-1475-4fcb-af1c-c104dcdfdb1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"insertMetaPatt", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"h", ":", " ", 
        RowBox[{"Verbatim", "[", " ", 
         RowBox[{"CallNode", "|", "LeafNode"}], " ", "]"}]}], ")"}], "[", " ", 
      RowBox[{"a_", ",", " ", "b_", ",", " ", "_"}], " ", "]"}], ",", " ", 
     "meta_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"h", "[", " ", 
    RowBox[{"a", ",", " ", "b", ",", " ", "meta"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"e98f703b-db2c-4cce-985d-b654cb7bbea1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"insertMetaPatt", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Verbatim", "[", " ", "Pattern", " ", "]"}], "[", " ", 
      RowBox[{"s_", ",", " ", "p_"}], " ", "]"}], ",", " ", "meta_"}], " ", 
    "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"ins", " ", "=", " ", 
       RowBox[{"insertMetaPatt", "[", " ", 
        RowBox[{"p", ",", " ", "meta"}], " ", "]"}]}], " ", "}"}], ",", "\n", 
     "        ", 
     RowBox[{"Pattern", " ", "@@", " ", 
      RowBox[{"Hold", "[", " ", 
       RowBox[{"s", ",", " ", "ins"}], " ", "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"6f9614b7-bbd6-49e3-a13a-9fc50d482eb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"insertMetaPatt", "[", " ", 
    RowBox[{"patt_Alternatives", ",", " ", "meta_"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{
    RowBox[{
     RowBox[{"insertMetaPatt", "[", " ", 
      RowBox[{"#1", ",", " ", "meta"}], " ", "]"}], " ", "&"}], " ", "/@", 
    " ", "patt"}]}], 
  ";"}]], "Code",ExpressionUUID->"2cae0605-fecc-47c4-9847-4cb5044361f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"insertMetaPatt", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Verbatim", "[", " ", "Condition", " ", "]"}], "[", " ", 
      RowBox[{"lhs_", ",", " ", "rhs_"}], " ", "]"}], ",", " ", "meta_"}], 
    " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"ins", " ", "=", " ", 
       RowBox[{"insertMetaPatt", "[", " ", 
        RowBox[{"lhs", ",", " ", "meta"}], " ", "]"}]}], " ", "}"}], ",", 
     "\n", "        ", 
     RowBox[{"Condition", " ", "@@", " ", 
      RowBox[{"Hold", "[", " ", 
       RowBox[{"ins", ",", " ", "rhs"}], " ", "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}]], \
"Code",ExpressionUUID->"5c652dbb-6d02-4842-a335-73d07ef89585"],

Cell[BoxData[
 RowBox[{
  RowBox[{"insertMetaPatt", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"af7fa8ab-abb2-458b-aba2-ccc35d22166c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Undefined", \
"Subsubsection",ExpressionUUID->"ba63b80d-b746-4560-93d1-0c196d2a1179"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astPattern", "[", " ", "a___", " ", "]"}], " ", ":=", " ", 
   RowBox[{"throwInternalFailure", " ", "@", " ", 
    RowBox[{"astPattern", " ", "@", " ", "a"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"795e946a-470a-46a6-9a71-7f92d310a535"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc Utilities", \
"Subsection",ExpressionUUID->"651169c5-5b80-445b-87a4-36aa553d627e"],

Cell[CellGroupData[{

Cell["checkDuplicatePatterns", \
"Subsubsection",ExpressionUUID->"413edf9c-222f-4610-9f4d-d4cc16e0700e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkDuplicatePatterns", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"b48549c8-dd74-4416-bccb-0754295170cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkDuplicatePatterns", "[", " ", "p_", " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
      "names", ",", " ", "realDups", ",", " ", "possibleDups", ",", " ", 
       "dups"}], " ", "}"}], ",", "\n", "\n", "        ", 
     RowBox[{
      RowBox[{"names", " ", "=", "\n", "            ", 
       RowBox[{"Cases", "[", " ", 
        RowBox[{"p", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Verbatim", "[", " ", "Pattern", " ", "]"}], "[", " ", 
           RowBox[{"s_", ",", " ", "_"}], " ", "]"}], " ", ":>", " ", 
          RowBox[{"HoldPattern", " ", "@", " ", "s"}]}], ",", " ", 
         "Infinity"}], " ", "]"}]}], ";", "\n", "\n", "        ", 
      RowBox[{"realDups", " ", "=", " ", 
       RowBox[{"Select", "[", " ", 
        RowBox[{
         RowBox[{"Counts", " ", "@", " ", "names"}], ",", " ", 
         RowBox[{"GreaterThan", "[", " ", "1", " ", "]"}]}], " ", "]"}]}], 
      ";", "\n", "\n", "        ", 
      RowBox[{"possibleDups", " ", "=", " ", 
       RowBox[{"Association", " ", "@", " ", 
        RowBox[{"Cases", "[", "\n", "            ", 
         RowBox[{"p", ",", "\n", "            ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Repeated", " ", "|", " ", "RepeatedNull"}], ")"}], "[", 
            " ", 
            RowBox[{"a_", ",", " ", "___"}], " ", "]"}], " ", ":>", "\n", 
           "                ", 
           RowBox[{"Cases", "[", "\n", "                    ", 
            RowBox[{
             RowBox[{"HoldComplete", " ", "@", " ", "a"}], ",", "\n", 
             "                    ", 
             RowBox[{
              RowBox[{
               RowBox[{"Verbatim", "[", " ", "Pattern", " ", "]"}], "[", " ", 
               RowBox[{"s_", ",", " ", "_"}], " ", "]"}], " ", ":>", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"HoldPattern", " ", "@", " ", "s"}], " ", "->", " ", 
                "Infinity"}], ")"}]}], ",", "\n", "                    ", 
             "Infinity"}], "\n", "                ", "]"}]}], ",", "\n", 
          "            ", "Infinity"}], "\n", "        ", "]"}]}]}], ";", 
      "\n", "\n", "        ", 
      RowBox[{"dups", " ", "=", " ", 
       RowBox[{"KeyDrop", "[", " ", 
        RowBox[{
         RowBox[{"Join", "[", " ", 
          RowBox[{"realDups", ",", " ", "possibleDups"}], " ", "]"}], ",", 
         " ", 
         RowBox[{"HoldPattern", " ", "@", " ", "e"}]}], " ", "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"TrueQ", "[", " ", 
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "dups"}], " ", ">", " ", "0"}], 
         " ", "]"}], ",", " ", 
        RowBox[{"rebindConditionPattern", "[", " ", 
         RowBox[{"p", ",", " ", "dups"}], " ", "]"}], ",", " ", "p"}], " ", 
       "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"34557158-0776-4b62-a788-9a82c19854b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkDuplicatePatterns", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"f7c93c9a-d552-4fd5-845f-e13a2118a5b0"],

Cell[CellGroupData[{

Cell["rebindConditionPattern", \
"Subsubsubsection",ExpressionUUID->"29ad4ac6-46df-4897-8b36-73c584bf3a02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rebindConditionPattern", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"b3e3dd3a-1d77-4a84-b55e-e3a53a2f29e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rebindConditionPattern", "[", " ", 
    RowBox[{"p_", ",", " ", "dups_"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Module", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"{", "\n", "            ", 
      RowBox[{
      "$replacements", ",", " ", "unseen", ",", " ", "patt", ",", " ", 
       "replaced", ",", " ", "conditions", ",", " ", "flat", ",", "\n", 
       "            ", "rhsHeld", ",", " ", "lhsHeld"}], "\n", "        ", 
      "}"}], ",", "\n", "\n", "        ", 
     RowBox[{
      RowBox[{"$replacements", " ", "=", " ", 
       RowBox[{"<|", " ", "|>"}]}], ";", "\n", "        ", 
      RowBox[{"unseen", "        ", "=", " ", 
       RowBox[{"AssociationMap", "[", " ", 
        RowBox[{
         RowBox[{"True", " ", "&"}], ",", " ", 
         RowBox[{"HoldComplete", " ", "@@@", " ", 
          RowBox[{"Keys", " ", "@", " ", "dups"}]}]}], " ", "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"patt", "          ", "=", " ", 
       RowBox[{"Alternatives", " ", "@@", " ", 
        RowBox[{"Keys", " ", "@", " ", "dups"}]}]}], ";", "\n", "\n", 
      "        ", 
      RowBox[{"replaced", " ", "=", "\n", "            ", 
       RowBox[{"ReplaceAll", "[", "\n", "                ", 
        RowBox[{"p", ",", "\n", "                ", 
         RowBox[{"{", "\n", "                    ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"s", ":", " ", "patt"}], " ", "/;", " ", 
             RowBox[{"unseen", "[", " ", 
              RowBox[{"HoldComplete", " ", "@", " ", "s"}], " ", "]"}]}], " ",
             ":>", "\n", "                        ", 
            RowBox[{"With", "[", " ", 
             RowBox[{
              RowBox[{"{", " ", 
               RowBox[{"e", " ", "=", " ", "Null"}], " ", "}"}], ",", "\n", 
              "                            ", 
              RowBox[{
               RowBox[{
                RowBox[{"unseen", "[", " ", 
                 RowBox[{"HoldComplete", " ", "@", " ", "s"}], " ", "]"}], 
                " ", "=", " ", "False"}], ";", "\n", 
               "                            ", 
               RowBox[{
                RowBox[{"$replacements", "[", " ", 
                 RowBox[{"HoldComplete", "[", " ", "s", " ", "]"}], " ", 
                 "]"}], " ", "=", " ", 
                RowBox[{"HoldComplete", " ", "@", " ", "s"}]}], ";", "\n", 
               "                            ", 
               RowBox[{"s", " ", "/;", " ", "True"}]}]}], "\n", 
             "                        ", "]"}]}], ",", "\n", 
           "                    ", 
           RowBox[{
            RowBox[{
             RowBox[{"s", ":", " ", "patt"}], " ", "/;", " ", 
             RowBox[{"!", " ", 
              RowBox[{"unseen", "[", " ", 
               RowBox[{"HoldComplete", " ", "@", " ", "s"}], " ", "]"}]}]}], 
            " ", ":>", "\n", "                        ", 
            RowBox[{"With", "[", " ", 
             RowBox[{
              RowBox[{"{", " ", 
               RowBox[{"a", " ", "=", " ", 
                RowBox[{"newPattSym", " ", "@", " ", "s"}]}], " ", "}"}], ",",
               "\n", "                            ", 
              RowBox[{
               RowBox[{
                RowBox[{"$replacements", "[", " ", 
                 RowBox[{"HoldComplete", "[", " ", "a", " ", "]"}], " ", 
                 "]"}], " ", "=", " ", 
                RowBox[{"HoldComplete", " ", "@", " ", "s"}]}], ";", "\n", 
               "                            ", 
               RowBox[{"a", " ", "/;", " ", "True"}]}]}], "\n", 
             "                        ", "]"}]}]}], "\n", "                ", 
          "}"}]}], "\n", "            ", "]"}]}], ";", "\n", "\n", "        ", 
      RowBox[{"conditions", " ", "=", "\n", "            ", 
       RowBox[{"Cases", "[", "\n", "                ", 
        RowBox[{
         RowBox[{"GroupBy", "[", " ", 
          RowBox[{
           RowBox[{"Normal", " ", "@", " ", "$replacements"}], ",", " ", 
           RowBox[{"Last", " ", "->", " ", "First"}]}], " ", "]"}], ",", "\n",
          "                ", 
         RowBox[{
          RowBox[{"{", " ", "syms__", " ", "}"}], " ", ":>", "\n", 
          "                    ", 
          RowBox[{"Replace", "[", "\n", "                        ", 
           RowBox[{
            RowBox[{"Flatten", " ", "@", " ", 
             RowBox[{"HoldComplete", " ", "@", " ", "syms"}]}], ",", "\n", 
            "                        ", 
            RowBox[{
             RowBox[{"HoldComplete", "[", " ", "a___", " ", "]"}], " ", ":>", 
             "\n", "                            ", 
             RowBox[{"HoldComplete", " ", "@", " ", 
              RowBox[{"EquivalentNodeQ", " ", "@", " ", "a"}]}]}]}], "\n", 
           "                    ", "]"}]}]}], "\n", "            ", "]"}]}], 
      ";", "\n", "\n", "        ", 
      RowBox[{"flat", " ", "=", " ", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"HoldComplete", " ", "@@", " ", "conditions"}], " ", "]"}]}], 
      ";", "\n", "\n", "        ", 
      RowBox[{"rhsHeld", " ", "=", " ", 
       RowBox[{"Replace", "[", " ", 
        RowBox[{"flat", ",", " ", 
         RowBox[{
          RowBox[{"HoldComplete", "[", " ", 
           RowBox[{"a_", ",", " ", "b__"}], " ", "]"}], " ", ":>", " ", 
          RowBox[{"HoldComplete", "[", " ", 
           RowBox[{"a", " ", "&&", " ", "b"}], " ", "]"}]}]}], " ", "]"}]}], 
      ";", "\n", "\n", "        ", 
      RowBox[{"lhsHeld", " ", "=", " ", 
       RowBox[{"HoldComplete", " ", "@@", " ", 
        RowBox[{"{", " ", "replaced", " ", "}"}]}]}], ";", "\n", "        ", 
      RowBox[{"Condition", " ", "@@", " ", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"HoldComplete", " ", "@@", " ", 
         RowBox[{"{", " ", 
          RowBox[{"lhsHeld", ",", " ", "rhsHeld"}], " ", "}"}]}], " ", 
        "]"}]}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"dca934a8-33c3-4041-ade4-848d39c0bab4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rebindConditionPattern", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"638c54ab-5db0-4685-8fbb-4a05a86e0f01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["newPattSym", \
"Subsubsubsection",ExpressionUUID->"9261a7e8-ebfe-4cf3-aa0b-ffab1910754c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newPattSym", " ", "//", " ", "beginDefinition"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"newPattSym", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"newPattSym", "[", " ", 
    RowBox[{"s_", "?", " ", "symbolQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Module", " ", "@@", " ", 
    RowBox[{"HoldComplete", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", "s", " ", "}"}], ",", " ", "s"}], " ", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"newPattSym", " ", "//", " ", "endDefinition"}], 
  ";"}]}], "Code",ExpressionUUID->"a6d10ab8-b250-4d9b-a153-e943a3d6249c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["symbolNode", \
"Subsubsection",ExpressionUUID->"4c249fb0-2831-4654-8397-e4811f35fbfc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"symbolNode", " ", "//", " ", "beginDefinition"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"symbolNode", "[", " ", "name_String", "   ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"LeafNode", "[", " ", 
    RowBox[{"Symbol", ",", " ", "name", ",", " ", "_"}], " ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"symbolNode", "[", " ", 
    RowBox[{"sym_", "?", " ", "symbolQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"symNamePatt", " ", "@", " ", "sym"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"symbolNode", " ", "//", " ", "endDefinition"}], 
  ";"}]}], "Code",ExpressionUUID->"c7bcd179-c8af-43a5-a7d6-db9d1c974b18"]
}, Open  ]],

Cell[CellGroupData[{

Cell["symNamePatt", \
"Subsubsection",ExpressionUUID->"df7ab03c-08a5-475d-941f-06e364b015df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"symNamePatt", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"08bd3ef9-d07a-468a-8c44-838e61fe2021"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"symNamePatt", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"1908edb7-a4f8-4ad2-a426-0252722ab67f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"symNamePatt", "[", " ", 
    RowBox[{"sym_Symbol", "?", " ", "symbolQ"}], " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"With", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"{", "\n", "            ", 
      RowBox[{
       RowBox[{"name", " ", "=", " ", 
        RowBox[{"SymbolName", " ", "@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", "sym"}]}]}], ",", "\n", 
       "            ", 
       RowBox[{"ctx", "  ", "=", " ", 
        RowBox[{"Context", " ", "@", " ", 
         RowBox[{"Unevaluated", " ", "@", " ", "sym"}]}]}]}], "\n", 
      "        ", "}"}], ",", "\n", "        ", 
     RowBox[{"LeafNode", "[", " ", 
      RowBox[{"Symbol", ",", " ", 
       RowBox[{"name", " ", "|", " ", 
        RowBox[{"ctx", " ", "<>", " ", "name"}]}], ",", " ", "_"}], " ", 
      "]"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"875d0c3d-9e97-42d7-9bb6-a57d359992bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"symNamePatt", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"6d27d3d9-46f5-4785-943c-e80b6e52dbdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expandNestedASTPatterns", \
"Subsubsection",ExpressionUUID->"a4175c69-2899-4b7a-9b68-3932c258ff36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expandNestedASTPatterns", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"b30baf5a-4c80-4303-9421-559619df8aa8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expandNestedASTPatterns", "[", " ", "expr_", " ", "]"}], " ", ":=",
    "\n", "    ", 
   RowBox[{"ReplaceAll", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"expandNestedResourceFunctions", " ", "@", " ", "expr"}], ",", 
     "\n", "        ", 
     RowBox[{"{", "\n", "            ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Verbatim", "[", " ", "Verbatim", " ", "]"}], "[", " ", 
         "a___", " ", "]"}], " ", ":>", " ", 
        RowBox[{"Verbatim", " ", "@", " ", "a"}]}], ",", "\n", "            ", 
       RowBox[{
        RowBox[{"HoldPattern", " ", "@", " ", 
         RowBox[{"ASTPattern", "[", " ", "a___", " ", "]"}]}], " ", ":>", 
        "\n", "                ", 
        RowBox[{"With", "[", " ", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"p", " ", "=", " ", 
            RowBox[{"astPattern", " ", "@", " ", "a"}]}], " ", "}"}], ",", 
          " ", 
          RowBox[{
           RowBox[{"$astPattern", " ", "@", " ", "p"}], " ", "/;", " ", 
           "True"}]}], " ", "]"}]}]}], "\n", "        ", "}"}]}], "\n", 
    "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"d41a4b8e-6954-469c-9108-b9bac21d97f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expandNestedASTPatterns", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"0863846a-37db-4f3d-a049-0acc16d96636"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expandNestedResourceFunctions", \
"Subsubsection",ExpressionUUID->"cbbd1c61-01ae-4890-8304-15e538025728"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "expandNestedResourceFunctions", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"633c559c-0d43-42f3-869e-9de1022ece6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"expandNestedResourceFunctions", "[", " ", "expr_", " ", "]"}], 
    " ", "/;", " ", "$rfTest"}], " ", ":=", "\n", "    ", 
   RowBox[{"ReplaceAll", "[", "\n", "        ", 
    RowBox[{"expr", ",", "\n", "        ", 
     RowBox[{
      RowBox[{"rf", ":", " ", "$rfPatt"}], " ", ":>", "\n", "            ", 
      RowBox[{"With", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"sym", " ", "=", " ", 
          RowBox[{"rfSymExpand", " ", "@", " ", "rf"}]}], " ", "}"}], ",", 
        " ", 
        RowBox[{"sym", " ", "/;", " ", 
         RowBox[{"sym", " ", "===", " ", "ASTPattern"}]}]}], " ", "]"}]}]}], 
    "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"7f77dbd5-8f66-4cb3-89d7-dee147daf6c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expandNestedResourceFunctions", "[", " ", "expr_", " ", "]"}], 
   " ", ":=", " ", "expr"}], 
  ";"}]], "Code",ExpressionUUID->"edf57406-e8ff-422c-99ee-e98ba09be55a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expandNestedResourceFunctions", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"fd73dd72-9a5c-4c96-89d5-9b201d23c0ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$rfTest", " ", ":=", " ", 
   RowBox[{"$rfTest", " ", "=", "\n", "    ", 
    RowBox[{"StringStartsQ", "[", " ", 
     RowBox[{
      RowBox[{"Context", " ", "@", " ", "ASTPattern"}], ",", " ", 
      "\"\<FunctionRepository`\>\""}], " ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"0b3a2ac0-fb17-4b8f-87c5-dcb08de39eee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rfSymExpand", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"561a948d-f89e-4278-a85b-92b10c6f5661"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rfSymExpand", "[", " ", "rf_", " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"rfSymExpand", "[", " ", "rf", " ", "]"}], " ", "=", "\n", "    ", 
    RowBox[{"Quiet", " ", "@", " ", 
     RowBox[{"ResourceFunction", "[", " ", 
      RowBox[{"rf", ",", " ", "\"\<Function\>\""}], " ", "]"}]}]}]}], 
  ";"}]], "Code",ExpressionUUID->"27814fc7-c605-4010-924c-9e49fa46f81f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$rfNamePatt", " ", "=", " ", "\"\<ASTPattern\>\""}], 
  ";"}]], "Code",ExpressionUUID->"fa2e83c0-cd61-42cf-b2c0-dcc7d69aeb48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$rfInfoPatt", " ", "=", " ", 
   RowBox[{"Association", "[", " ", 
    RowBox[{"___", ",", " ", 
     RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<ASTPattern\>\""}], ",", " ",
      "___"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"f446196b-354d-44cf-8b01-39ac8f3c65e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$rfIDPatt", "   ", "=", " ", 
   RowBox[{"$rfNamePatt", "|", "$rfInfoPatt"}]}], 
  ";"}]], "Code",ExpressionUUID->"fc5a853a-9ab8-4314-82cf-b4314cd70fb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$roPatt", "     ", "=", " ", 
   RowBox[{
    RowBox[{"HoldPattern", "[", " ", "ResourceObject", " ", "]"}], "[", " ", 
    RowBox[{"$rfIDPatt", ",", " ", 
     RowBox[{"OptionsPattern", "[", " ", "]"}]}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"4d215efb-9e38-437d-9436-7128c0e2f299"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$rfPatt", " ", "=", " ", 
   RowBox[{
    RowBox[{"HoldPattern", "[", " ", "ResourceFunction", " ", "]"}], "[", 
    "\n", "    ", 
    RowBox[{
     RowBox[{"$rfIDPatt", "|", "$roPatt"}], ",", "\n", "    ", 
     RowBox[{"OptionsPattern", "[", " ", "]"}]}], "\n", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"b3a6e2aa-4a2b-437a-b62e-88b843f0be33"],

Cell[CellGroupData[{

Cell["astBlockPattern", \
"Subsubsubsection",ExpressionUUID->"8a37336a-8dc2-478a-8ae0-ec72d51141e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astBlockPattern", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"3ae15809-4410-43dd-ac3f-4950a178b5ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astBlockPattern", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"981bd2bb-5fcb-40db-9370-21af6135a22f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astBlockPattern", "[", " ", 
    RowBox[{"patt", ":", " ", 
     RowBox[{
      RowBox[{"Verbatim", "[", " ", "HoldPattern", " ", "]"}], "[", " ", 
      "___", " ", "]"}]}], " ", "]"}], " ", ":=", " ", "patt"}], 
  ";"}]], "Code",ExpressionUUID->"d118efd8-e55d-4168-8750-eb4c8234e012"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"astBlockPattern", "[", " ", "patt_", " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"Block", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", "ASTPattern", " ", "}"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"SetAttributes", "[", " ", 
       RowBox[{"ASTPattern", ",", " ", "HoldFirst"}], " ", "]"}], ";", "\n", 
      "        ", 
      RowBox[{"HoldPattern", " ", "@", " ", 
       RowBox[{"Evaluate", " ", "@", " ", "patt"}]}]}]}], "\n", "    ", 
    "]"}]}], ";"}]], \
"Code",ExpressionUUID->"a80cecf6-9d4e-4870-b79d-fd64ab2a9e5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"astBlockPattern", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"4f227c31-59f4-498b-96dd-3272e53a6ce3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["symbolQ", \
"Subsubsection",ExpressionUUID->"19f1b832-e560-4dd1-9973-58ec055878b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"symbolQ", " ", "//", " ", "ClearAll"}], 
  ";"}]], "Code",ExpressionUUID->"758440a3-c849-4d29-b78a-3875a40df9ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"symbolQ", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldAllComplete", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"e048bbf3-4a3d-4a79-a6bc-d1a3b574aab9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"symbolQ", "[", " ", "s_Symbol", " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"TrueQ", " ", "@", " ", 
    RowBox[{"And", "[", "\n", "        ", 
     RowBox[{
      RowBox[{"AtomQ", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "s"}]}], ",", "\n", "        ", 
      RowBox[{"!", " ", 
       RowBox[{"Internal`RemovedSymbolQ", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "s"}]}]}], ",", "\n", 
      "        ", 
      RowBox[{
       RowBox[{"Unevaluated", " ", "@", " ", "s"}], " ", "=!=", " ", 
       "Internal`$EFAIL"}]}], "\n", "    ", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"ca538f0c-9781-47d0-87f1-91d706dbbf85"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"symbolQ", "[", " ", "___", " ", "]"}], " ", ":=", " ", "False"}], 
  ";"}]], "Code",ExpressionUUID->"07e3c4c1-dc43-4145-af82-9df2dce40dc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error handling", \
"Subsubsection",ExpressionUUID->"dc3ca643-3478-49b6-a1c2-f293ecfa6f36"],

Cell[CellGroupData[{

Cell["catchTop", \
"Subsubsubsection",ExpressionUUID->"608d8b26-b49c-419c-8593-55bace80d9c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"catchTop", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"5430f9b6-b564-4c44-ab59-6e29f7ef63e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"catchTop", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"1e58cff9-9563-45b1-9e1f-3b0e4cac5e3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"catchTop", "[", " ", "eval_", " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Block", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"$catching", " ", "=", " ", "True"}], ",", " ", 
       RowBox[{"$failed", " ", "=", " ", "False"}], ",", " ", 
       RowBox[{"catchTop", " ", "=", " ", 
        RowBox[{"#", " ", "&"}]}]}], " ", "}"}], ",", "\n", "        ", 
     RowBox[{"Catch", "[", " ", 
      RowBox[{"eval", ",", " ", "$top"}], " ", "]"}]}], "\n", "    ", "]"}]}],
   ";"}]], "Code",ExpressionUUID->"af93e25e-e46e-489f-b591-e9c72ade4458"],

Cell[BoxData[
 RowBox[{
  RowBox[{"catchTop", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"de55cadc-845d-4f1c-9f8c-61d62548a74a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["throwFailure", \
"Subsubsubsection",ExpressionUUID->"dd33ec3f-18e4-4a41-9a43-25983e6f2095"],

Cell[BoxData[
 RowBox[{
  RowBox[{"throwFailure", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"3fc214a0-96e5-41e7-a8c2-0c8d3a560fc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"throwFailure", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"fd2515c5-4404-4236-9d72-4f7ebf9b5e03"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"throwFailure", "[", " ", 
    RowBox[{"tag_String", ",", " ", "params___"}], " ", "]"}], " ", ":=", 
   "\n", "    ", 
   RowBox[{"throwFailure", "[", " ", 
    RowBox[{
     RowBox[{"MessageName", "[", " ", 
      RowBox[{"ASTPattern", ",", " ", "tag"}], " ", "]"}], ",", " ", 
     "params"}], " ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"77fc3a96-d79a-4e00-a0fc-b1c2223e8907"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"throwFailure", "[", " ", 
    RowBox[{"msg_", ",", " ", "args___"}], " ", "]"}], " ", ":=", "\n", 
   "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", "failure", " ", "}"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"failure", " ", "=", " ", 
       RowBox[{"messageFailure", "[", " ", 
        RowBox[{"msg", ",", " ", 
         RowBox[{"Sequence", " ", "@@", " ", 
          RowBox[{"HoldForm", " ", "/@", " ", 
           RowBox[{"{", " ", "args", " ", "}"}]}]}]}], " ", "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"TrueQ", " ", "@", " ", "$catching"}], ",", "\n", 
        "            ", 
        RowBox[{"Throw", "[", " ", 
         RowBox[{"failure", ",", " ", "$top"}], " ", "]"}], ",", "\n", 
        "            ", "failure"}], "\n", "        ", "]"}]}]}], "\n", 
    "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"82006fe0-fac1-4195-a02e-afdf1eb3f464"],

Cell[BoxData[
 RowBox[{
  RowBox[{"throwFailure", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"e9921188-d97b-4719-9f10-2646a93cc191"]
}, Open  ]],

Cell[CellGroupData[{

Cell["messageFailure", \
"Subsubsubsection",ExpressionUUID->"6e19fc47-1293-4658-bb65-63956a6698e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"messageFailure", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"37acb86f-5269-4723-84df-c8348b06e502"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"messageFailure", " ", "//", " ", "Attributes"}], " ", "=", " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"4b667e77-6bf4-4190-8ba9-6291126b1d13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"messageFailure", "[", " ", "args___", " ", "]"}], " ", ":=", "\n",
    "    ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", "quiet", " ", "}"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"quiet", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"TrueQ", " ", "@", " ", "$failed"}], ",", " ", "Quiet", ",", 
         " ", "Identity"}], " ", "]"}]}], ";", "\n", "        ", 
      RowBox[{"WithCleanup", "[", "\n", "            ", 
       RowBox[{
        RowBox[{"quiet", " ", "@", " ", 
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", " ", "\"\<MessageFailure\>\"", " ", "]"}], 
          "[", " ", "args", " ", "]"}]}], ",", "\n", "            ", 
        RowBox[{"$failed", " ", "=", " ", "True"}]}], "\n", "        ", 
       "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"3e36cdf6-ba3f-4880-8697-1bf17d893409"],

Cell[BoxData[
 RowBox[{
  RowBox[{"messageFailure", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"e8ce450a-cc4d-4981-98aa-3f60c3560f5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["throwInternalFailure", \
"Subsubsubsection",ExpressionUUID->"a74ce88a-2883-4549-b051-f3130785f447"],

Cell[BoxData[
 RowBox[{
  RowBox[{"throwInternalFailure", " ", "//", " ", "beginDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"e37ab2c2-8f26-4c11-abf4-2b568655ab90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"throwInternalFailure", " ", "//", " ", "Attributes"}], " ", "=", 
   " ", 
   RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], 
  ";"}]], "Code",ExpressionUUID->"82577283-7381-4a24-92b4-69d99ecec1a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"throwInternalFailure", "[", " ", 
    RowBox[{"eval_", ",", " ", "a___"}], " ", "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"throwFailure", "[", " ", 
    RowBox[{
     RowBox[{"ASTPattern", "::", "internal"}], ",", " ", "$bugReportLink", 
     ",", " ", 
     RowBox[{"HoldForm", " ", "@", " ", "eval"}], ",", " ", "a"}], " ", 
    "]"}]}], ";"}]], \
"Code",ExpressionUUID->"2bd5b265-3aa1-4611-8ce8-699ae35afa1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"throwInternalFailure", " ", "//", " ", "endDefinition"}], 
  ";"}]], "Code",ExpressionUUID->"7d3e94fa-4feb-4f96-9eed-ebcd47f0ed63"]
}, Open  ]],

Cell[CellGroupData[{

Cell["$bugReportLink", \
"Subsubsubsection",ExpressionUUID->"03df83dc-6906-4fc8-bbb3-4d8c54db6dff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$bugReportLink", " ", ":=", " ", 
   RowBox[{"$bugReportLink", " ", "=", " ", 
    RowBox[{"Hyperlink", "[", "\n", "    ", 
     RowBox[{"\"\<Report this issue \[RightGuillemet]\>\"", ",", "\n", "    ", 
      RowBox[{"URLBuild", " ", "@", " ", 
       RowBox[{"<|", "\n", "        ", 
        RowBox[{
         RowBox[{"\"\<Scheme\>\"", "   ", "->", " ", "\"\<https\>\""}], ",", 
         "\n", "        ", 
         RowBox[{
         "\"\<Domain\>\"", "   ", "->", " ", 
          "\"\<resources.wolframcloud.com\>\""}], ",", "\n", "        ", 
         RowBox[{"\"\<Path\>\"", "     ", "->", " ", 
          RowBox[{"{", " ", 
           RowBox[{
           "\"\<FunctionRepository\>\"", ",", " ", "\"\<feedback-form\>\""}], 
           " ", "}"}]}], ",", "\n", "        ", 
         RowBox[{"\"\<Fragment\>\"", " ", "->", " ", 
          RowBox[{"SymbolName", " ", "@", " ", "ASTPattern"}]}]}], "\n", 
        "    ", "|>"}]}]}], "\n", "]"}]}]}], 
  ";"}]], "Code",ExpressionUUID->"8a124214-eccc-407c-b0dd-93426a55d3cb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Documentation"},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->337507785,ExpressionUUID->"e856f0ad-0625-45ac-91b4-9f4cf457cccd"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "88334836-1e7c-4b41-a2bb-eb9f73e29bf2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Usage"},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->38054786,ExpressionUUID->"4ac127ed-adae-4f39-88d9-30553360356f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  StyleBox["patt", "TI"], "]"}]], "UsageInputs",
 FontFamily->
  "Source Sans Pro",ExpressionUUID->"91592b74-b2bf-4154-b501-c1ea572418f8"],

Cell[TextData[{
 "converts ",
 Cell[BoxData[
  StyleBox[
   StyleBox["patt", "TI"],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "398bac95-718e-4639-8710-ba196f9daadc"],
 " into a pattern suitable for matching against ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    ButtonBox[
     StyleBox[
      StyleBox["\"\<CodeParser\>\"", "GuidesRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"], "StringTypeLink",
      StripOnInput->False],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"CodeParser/guide/CodeParser",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "45debec2-0768-4842-8aef-2974d68c6351"],
 " AST nodes."
}], "UsageDescription",ExpressionUUID->"d97f075e-44c5-4962-8778-5f81474040f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{
   StyleBox["patt", "TI"], ",", 
   StyleBox["meta", "TI"]}], "]"}]], "UsageInputs",
 FontFamily->
  "Source Sans Pro",ExpressionUUID->"4b60eb03-e510-4d52-81e5-3c429bd29a0e"],

Cell[TextData[{
 "uses the pattern ",
 Cell[BoxData[
  StyleBox[
   StyleBox["meta", "TI"],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "29bb5a24-6d21-4606-81cd-b7e971161e44"],
 " to match against node metadata."
}], "UsageDescription",ExpressionUUID->"3e03cedb-4472-4947-ac7f-b28d103e0a85"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4257153d-61b8-4943-ad5a-42e0b4855aac"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->447261062,ExpressionUUID->"7fb0c6c5-368b-4252-b661-069e5856e5a3"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["ASTPattern",
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "5b5fef91-3784-4759-bac1-2ab8a155d6d3"],
 " creates a pattern such that if ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["MatchQ", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/MatchQ",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    RowBox[{
     StyleBox["expr", "TI"], ",", 
     StyleBox["patt", "TI"]}], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "b847337c-9b4e-41ee-b8e1-16fa1c465bc8"],
 ", then ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["MatchQ", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/MatchQ",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    RowBox[{
     StyleBox["node", "TI"], ",", 
     RowBox[{"ASTPattern", "[", 
      StyleBox["patt", "TI"], "]"}]}], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "e783eb88-23de-4fca-af90-f07cbd2f7058"],
 " where ",
 Cell[BoxData[
  StyleBox[
   StyleBox["node", "TI"],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "916b50fc-8b7d-4fbe-8981-4af6f914077d"],
 " is a part of an abstract syntax tree that would parse to ",
 Cell[BoxData[
  StyleBox[
   StyleBox["expr", "TI"],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "d8559629-a1fc-4a25-8a62-0fd4f54bb8f2"],
 "."
}], "Notes",ExpressionUUID->"2219e125-7ea8-4a00-b190-ad693878f25b"],

Cell[TextData[{
 "An abstract syntax tree for Wolfram Language code can be generated with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["CodeParse", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:CodeParser/ref/CodeParse",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "dfa47dcb-6fff-4501-b8d2-1200b97e5d7c"],
 "."
}], "Notes",ExpressionUUID->"35f6fefb-1386-41bf-a197-90f71b0cb590"],

Cell[TextData[{
 "Not all raw patterns are supported by ",
 Cell[BoxData[
  StyleBox["ASTPattern",
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "1b6e0fd2-2abb-402e-8b2f-567165310d99"],
 "."
}], "Notes",ExpressionUUID->"e030ec58-cc8e-45c8-8daa-f05f6332bdad"],

Cell[TextData[{
 "Combinations of multiple ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    ButtonBox[
     StyleBox["PatternTest", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/PatternTest",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "a8c55ab3-bde8-4ef9-a445-c2ca77a6c557"],
 ", ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    ButtonBox[
     StyleBox["Condition", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Condition",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "123d42f6-4a88-4aa6-b8ae-7a24b721f507"],
 ", and/or repeated ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    ButtonBox[
     StyleBox["Pattern", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Pattern",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]], "InlineFormula",ExpressionUUID->
  "4cabe79d-d937-4e09-9b0a-481c3f0c1601"],
 " bindings should be considered experimental and unlikely to perform well."
}], "Notes",ExpressionUUID->"77e43c24-562d-407a-9924-ba8895b92d89"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.286275], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.286275], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.286275], FontSize -> 14,
                  StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.286275], FontSize -> 14,
                  StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4d7fa008-8f2d-46d5-85c6-2a9a41339831"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->671320372,ExpressionUUID->"256f8a8f-95be-4089-ac98-54ec2c63b6fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ResetContextPath", "[", " ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", " ", "\"\<Global`*\>\"", " ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"Block", "[", " ", 
  RowBox[{
   RowBox[{"{", " ", "$ContextPath", " ", "}"}], ",", "\n", "    ", 
   RowBox[{
    RowBox[{"Get", " ", "@", " ", 
     RowBox[{"FileNameJoin", " ", "@", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", " ", "]"}], ",", " ", 
        "\"\<Definition.wl\>\""}], " ", "}"}]}]}], ";", "\n", "    ", 
    RowBox[{"TestReport", " ", "@", " ", 
     RowBox[{"FileNameJoin", " ", "@", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", " ", "]"}], ",", " ", 
        "\"\<Tests.wlt\>\""}], " ", "}"}]}]}]}]}], "\n", 
  "]"}]}], "Code", "Excluded",
 InitializationCell->False,
 CellChangeTimes->{{3.8539530988603687`*^9, 3.853953107023597*^9}, {
  3.854021261560169*^9, 3.8540212670498*^9}, {3.8540229863350143`*^9, 
  3.854023006351633*^9}, {3.8540231537854605`*^9, 3.8540231686285753`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"433311d1-1e34-4f34-936d-160622cabadf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015226326882`, {0., 10.869015226326882`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             InsetBox[
              PaneBox[
               DynamicBox[
                FEPrivate`FrontEndResource["MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache -> {16., {4., 8.}}], Alignment -> Center, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]], AspectRatio -> 1, Axes -> False, 
             Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Tests.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869015226326882`, {0., 10.869015226326882`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             InsetBox[
              PaneBox[
               DynamicBox[
                FEPrivate`FrontEndResource["MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache -> {16., {4., 8.}}], Alignment -> Center, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]], AspectRatio -> 1, Axes -> False, 
             Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: Tests.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["52", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0520001`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity"], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: Tests.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     5897387495558162528 -> 
      TestResultObject[<|
        "TestKey" -> 5897387495558162528, "TestID" -> 
         "Set-MessageFailure-TestMode@@Definitions/ASTPattern/Tests.wlt:4,1-9,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> MatchQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           SetOptions[
            ResourceFunction["MessageFailure"], "TestMode" -> True]], 
         "ExpectedOutput" -> HoldForm[
           KeyValuePattern["TestMode" -> True]], "ActualOutput" -> 
         HoldForm[{
           "MessageFunction" -> Automatic, "Verbose" -> False, "Stack" -> 
            False, "TestMode" -> True}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869768859`16.639519307999052*^9, "AbsoluteTimeUsed" -> 
         0.0010002`4.150601848043636, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3656|>], 6933719997753556257 -> 
      TestResultObject[<|
        "TestKey" -> 6933719997753556257, "TestID" -> 
         "Initialize-Needs-CodeParser@@Definitions/ASTPattern/Tests.wlt:11,1-\
15,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Needs["CodeParser`"]], "ExpectedOutput" -> HoldForm[Null], 
         "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869778861`16.639519307999166*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3080|>], 
      8712430094622112923 -> 
      TestResultObject[<|
        "TestKey" -> 8712430094622112923, "TestID" -> 
         "RF-Context-Helper-Definition@@Definitions/ASTPattern/Tests.wlt:17,1-\
30,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Attributes[$CellContext`setDef] = {HoldFirst}; $CellContext`setDef[
              Pattern[$CellContext`sym, 
               Blank[Symbol]]] := 
            If[Context[$CellContext`sym] =!= 
              Context[$CellContext`ASTPattern], $CellContext`sym = 
               Symbol[Context[$CellContext`ASTPattern] <> SymbolName[
                   Unevaluated[$CellContext`sym]]]; 
              HoldPattern[$CellContext`sym] -> $CellContext`sym, Nothing]], 
         "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869778861`16.639519307999166*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 4448|>], 9154058624839859436 -> 
      TestResultObject[<|
        "TestKey" -> 9154058624839859436, "TestID" -> 
         "RF-Context-Helper-Set@@Definitions/ASTPattern/Tests.wlt:32,1-37,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> MatchQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           
           Map[$CellContext`setDef, {$CellContext`FromAST, \
$CellContext`EquivalentNodeQ}]], "ExpectedOutput" -> HoldForm[
           Alternatives[{}, {
             Blank[Rule], 
             Blank[Rule]}]], "ActualOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869778861`16.639519307999166*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3112|>], 2406156733209307871 -> 
      TestResultObject[<|
        "TestKey" -> 2406156733209307871, "TestID" -> 
         "TestParse-Definition@@Definitions/ASTPattern/Tests.wlt:39,1-49,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> 
         HoldForm[
          Attributes[$CellContext`testParse] = {
             HoldRest}; $CellContext`testParse[
              Pattern[$CellContext`str, 
               Blank[]]] := Part[
              CodeParser`CodeParse[$CellContext`str], 2, 
              1]; $CellContext`testParse[
              Pattern[$CellContext`str, 
               Blank[]], 
              Pattern[$CellContext`patt, 
               Blank[]]] := MatchQ[
              $CellContext`testParse[$CellContext`str], 
              $CellContext`ASTPattern[
               HoldPattern[$CellContext`patt]]]; Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869788861`16.639519307999276*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4576|>], 
      907163817663145219 -> 
      TestResultObject[<|
        "TestKey" -> 907163817663145219, "TestID" -> 
         "Context-CodeParse@@Definitions/ASTPattern/Tests.wlt:54,1-58,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`CodeParse]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869788861`16.639519307999276*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 7539010221538970098 -> 
      TestResultObject[<|
        "TestKey" -> 7539010221538970098, "TestID" -> 
         "Context-LeafNode@@Definitions/ASTPattern/Tests.wlt:60,1-64,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`LeafNode]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869788861`16.639519307999276*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 659470101702172090 -> 
      TestResultObject[<|
        "TestKey" -> 659470101702172090, "TestID" -> 
         "Context-CallNode@@Definitions/ASTPattern/Tests.wlt:66,1-70,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`CallNode]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869788861`16.639519307999276*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 7452285898664468330 -> 
      TestResultObject[<|
        "TestKey" -> 7452285898664468330, "TestID" -> 
         "Context-Source@@Definitions/ASTPattern/Tests.wlt:72,1-76,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Context[CodeParser`Source]], "ExpectedOutput" -> 
         HoldForm["CodeParser`"], "ActualOutput" -> HoldForm["CodeParser`"], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869798861`16.63951930799939*^9, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3016|>], 5342452800246339970 -> 
      TestResultObject[<|
        "TestKey" -> 5342452800246339970, "TestID" -> 
         "Leaf-Call@@Definitions/ASTPattern/Tests.wlt:81,1-89,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            Blank[Integer]]], "ExpectedOutput" -> HoldForm[
           Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
            Alternatives[Integer, 
             CodeParser`LeafNode[Symbol, 
              Alternatives["Integer", "System`Integer"], 
              Blank[]]], 
            Blank[], 
            Blank[]]], "ActualOutput" -> HoldForm[
           Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
            Alternatives[Integer, 
             CodeParser`LeafNode[Symbol, 
              Alternatives["Integer", "System`Integer"], 
              Blank[]]], 
            Blank[], 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869798861`16.63951930799939*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3832|>], 
      4353731506781237097 -> 
      TestResultObject[<|
        "TestKey" -> 4353731506781237097, "TestID" -> 
         "Leaf-PatternTest@@Definitions/ASTPattern/Tests.wlt:91,1-95,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            PatternTest[
             Blank[Integer], IntegerQ]]], "ExpectedOutput" -> HoldForm[
           CodeParser`LeafNode[Integer, 
            Blank[], 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`LeafNode[Integer, 
            Blank[], 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869798861`16.63951930799939*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4040|>], 
      6957187185817891964 -> 
      TestResultObject[<|
        "TestKey" -> 6957187185817891964, "TestID" -> 
         "Leaf-Symbol@@Definitions/ASTPattern/Tests.wlt:97,1-101,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[$CellContext`x]], "ExpectedOutput" -> 
         HoldForm[
           CodeParser`LeafNode[Symbol, 
            Alternatives["x", "Global`x"], 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`LeafNode[Symbol, 
            Alternatives["x", "Global`x"], 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869808861`16.639519307999503*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3352|>], 
      8517133364414844184 -> 
      TestResultObject[<|
        "TestKey" -> 8517133364414844184, "TestID" -> 
         "HoldPattern@@Definitions/ASTPattern/Tests.wlt:103,1-111,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            HoldPattern[
             Identity[
              Blank[]]]]], "ExpectedOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["Identity", "System`Identity"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["Identity", "System`Identity"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869808861`16.639519307999503*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4296|>], 
      555880752344496715 -> 
      TestResultObject[<|
        "TestKey" -> 555880752344496715, "TestID" -> 
         "Invisible-Nested@@Definitions/ASTPattern/Tests.wlt:113,1-117,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            $CellContext`f[
             $CellContext`ASTPattern[
              Blank[]], 
             $CellContext`ASTPattern[
              Blank[]]]]], "ExpectedOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ActualOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Blank[]]}, 
            Blank[]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869808861`16.639519307999503*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3520|>], 
      784732931999397152 -> 
      TestResultObject[<|
        "TestKey" -> 784732931999397152, "TestID" -> 
         "Bound-Nested@@Definitions/ASTPattern/Tests.wlt:119,1-130,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            $CellContext`f[
             $CellContext`ASTPattern[
              Blank[], 
              Pattern[$CellContext`a, 
               Blank[]]], 
             $CellContext`ASTPattern[
              Blank[], 
              Pattern[$CellContext`b, 
               Blank[]]]], 
            Pattern[$CellContext`c, 
             Blank[]]]], "ExpectedOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`a, 
               Blank[]]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`b, 
               Blank[]]]}, 
            Pattern[$CellContext`c, 
             Blank[]]]], "ActualOutput" -> HoldForm[
           CodeParser`CallNode[
            CodeParser`LeafNode[Symbol, 
             Alternatives["f", "Global`f"], 
             Blank[]], {
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`a, 
               Blank[]]], 
             Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
              Blank[], 
              Blank[], 
              Pattern[$CellContext`b, 
               Blank[]]]}, 
            Pattern[$CellContext`c, 
             Blank[]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023186981886`16.639519307999617*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4504|>], 
      2684048128355005180 -> 
      TestResultObject[<|
        "TestKey" -> 2684048128355005180, "TestID" -> 
         "Duplicate-Pattern-Symbols-1@@Definitions/ASTPattern/Tests.wlt:135,1-\
139,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Count[
            CodeParser`CodeParse["{{1,1},{2,2}}"], 
            $CellContext`ASTPattern[{
              Pattern[$CellContext`a, 
               Blank[]], 
              Pattern[$CellContext`a, 
               Blank[]]}], Infinity]], "ExpectedOutput" -> HoldForm[2], 
         "ActualOutput" -> HoldForm[2], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023186981886`16.639519307999617*^9, "AbsoluteTimeUsed" -> 
         0.0019999`4.451523278228987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5496|>], 1757249608367389419 -> 
      TestResultObject[<|
        "TestKey" -> 1757249608367389419, "TestID" -> 
         "Duplicate-Pattern-Symbols-2@@Definitions/ASTPattern/Tests.wlt:141,1-\
149,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Count[
            CodeParser`CodeParse["{{{1,1},{2,2}},{{1,1},{2,2}}}"], 
            $CellContext`ASTPattern[{
              Pattern[$CellContext`a, 
               Blank[]], 
              Pattern[$CellContext`a, 
               Blank[]]}], Infinity]], "ExpectedOutput" -> HoldForm[5], 
         "ActualOutput" -> HoldForm[5], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869838859`16.63951930799984*^9, "AbsoluteTimeUsed" -> 
         0.003`4.62763625255165, "CPUTimeUsed" -> 0., "MemoryUsed" -> 5560|>],
       5329337340716323895 -> 
      TestResultObject[<|
        "TestKey" -> 5329337340716323895, "TestID" -> 
         "Duplicate-Pattern-Symbols-3@@Definitions/ASTPattern/Tests.wlt:151,1-\
159,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Cases[
            CodeParser`CodeParse[
            "{{1,1,1},{1,1},{1,1,1,2},{2,2,2}}"], $CellContext`ASTPattern[
              Pattern[$CellContext`expr, {
                Pattern[$CellContext`a, 
                 Blank[]], 
                Pattern[$CellContext`a, 
                 Blank[]], 
                Pattern[$CellContext`a, 
                 Blank[]]}]] :> $CellContext`FromAST[$CellContext`expr], 
            Infinity]], "ExpectedOutput" -> HoldForm[{{1, 1, 1}, {2, 2, 2}}], 
         "ActualOutput" -> HoldForm[{{1, 1, 1}, {2, 2, 2}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869868859`16.63951930800018*^9, 
         "AbsoluteTimeUsed" -> 0.002`4.451544993495968, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 3448|>], 4258532520418220805 -> 
      TestResultObject[<|
        "TestKey" -> 4258532520418220805, "TestID" -> 
         "Two-Arguments@@Definitions/ASTPattern/Tests.wlt:164,1-172,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            Pattern[$CellContext`id, 
             Blank[String]], 
            Pattern[$CellContext`as1, 
             Blank[]]]], "ExpectedOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Alternatives[String, 
              CodeParser`LeafNode[Symbol, 
               Alternatives["String", "System`String"], 
               Blank[]]], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ActualOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Alternatives[String, 
              CodeParser`LeafNode[Symbol, 
               Alternatives["String", "System`String"], 
               Blank[]]], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869888859`16.639519308000406*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 4080|>], 
      1461176011808469498 -> 
      TestResultObject[<|
        "TestKey" -> 1461176011808469498, "TestID" -> 
         "Nested-Meta-Bindings@@Definitions/ASTPattern/Tests.wlt:174,1-189,2",
          "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Cases[
            CodeParser`CodeParse[
            
            "VerificationTest[1 + 1, 2, TestID -> \"Addition\", SameTest -> \
SameQ]"], $CellContext`ASTPattern[
              Condition[
               HoldPattern[
                VerificationTest[
                 BlankSequence[], TestID -> $CellContext`ASTPattern[
                   Pattern[$CellContext`id, 
                    Blank[String]], 
                   Pattern[$CellContext`as1, 
                    Blank[]]], 
                 BlankNullSequence[]]], 
               StringQ[$CellContext`id]], 
              Pattern[$CellContext`as2, 
               Blank[]]] :> 
            Lookup[{$CellContext`as1, $CellContext`as2}, CodeParser`Source], 
            Infinity]], "ExpectedOutput" -> 
         HoldForm[{{{{1, 38}, {1, 48}}, {{1, 1}, {1, 68}}}}], "ActualOutput" -> 
         HoldForm[{{{{1, 38}, {1, 48}}, {{1, 1}, {1, 68}}}}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231869898861`16.63951930800052*^9, 
         "AbsoluteTimeUsed" -> 0.0020003`4.45161013278293, "CPUTimeUsed" -> 
         0., "MemoryUsed" -> 3928|>], 8083771004247715188 -> 
      TestResultObject[<|
        "TestKey" -> 8083771004247715188, "TestID" -> 
         "Meta-Unknown-Head@@Definitions/ASTPattern/Tests.wlt:191,1-195,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`ASTPattern[
            Pattern[$CellContext`id, 
             Blank[]], 
            Pattern[$CellContext`as1, 
             Blank[]]]], "ExpectedOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Blank[], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ActualOutput" -> HoldForm[
           Pattern[$CellContext`id, 
            Alternatives[CodeParser`CallNode, CodeParser`LeafNode][
             Blank[], 
             Blank[], 
             Pattern[$CellContext`as1, 
              Blank[]]]]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869918864`16.639519308000747*^9, "AbsoluteTimeUsed" -> 
         0``7.150514997831988, "CPUTimeUsed" -> 0., "MemoryUsed" -> 3648|>], 
      2798721317233094830 -> 
      TestResultObject[<|
        "TestKey" -> 2798721317233094830, "TestID" -> 
         "TestParse-VerificationTest@@Definitions/ASTPattern/Tests.wlt:200,1-\
204,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["VerificationTest[x,y]", 
            VerificationTest[
             BlankNullSequence[]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869918864`16.639519308000747*^9, "AbsoluteTimeUsed" -> 
         0.002`4.451544993495968, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4712|>], 7612083921316488852 -> 
      TestResultObject[<|
        "TestKey" -> 7612083921316488852, "TestID" -> 
         "TestParse-Normal@@Definitions/ASTPattern/Tests.wlt:206,1-210,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[x,y]", 
            $CellContext`f[
             Blank[], 
             Blank[]]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869938864`16.639519308000967*^9, "AbsoluteTimeUsed" -> 
         0.0009997`4.150384689940255, "CPUTimeUsed" -> 0.016000000000000014`, 
         "MemoryUsed" -> 4448|>], 313972716093152582 -> 
      TestResultObject[<|
        "TestKey" -> 313972716093152582, "TestID" -> 
         "TestParse-Atom-Real@@Definitions/ASTPattern/Tests.wlt:212,1-216,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["2.5", 
            Blank[Real]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869958862`16.639519308001194*^9, "AbsoluteTimeUsed" -> 
         0.0009996`4.150341245286399, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3936|>], 7005536708175638947 -> 
      TestResultObject[<|
        "TestKey" -> 7005536708175638947, "TestID" -> 
         "TestParse-Atom-Integer@@Definitions/ASTPattern/Tests.wlt:218,1-222,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["2", 
            Blank[Integer]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869968858`16.639519308001304*^9, "AbsoluteTimeUsed" -> 
         0.0010003`4.1506452666372144, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3984|>], 8655220183867058069 -> 
      TestResultObject[<|
        "TestKey" -> 8655220183867058069, "TestID" -> 
         "TestParse-Atom-String@@Definitions/ASTPattern/Tests.wlt:224,1-228,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["\"hello\"", 
            Blank[String]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869988863`16.639519308001532*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4144|>], 6783776213647455586 -> 
      TestResultObject[<|
        "TestKey" -> 6783776213647455586, "TestID" -> 
         "TestParse-Atom-Symbol@@Definitions/ASTPattern/Tests.wlt:230,1-234,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["x", 
            Blank[Symbol]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231869998863`16.639519308001642*^9, "AbsoluteTimeUsed" -> 
         0.0009998`4.150428130248559, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3872|>], 816865204650829757 -> 
      TestResultObject[<|
        "TestKey" -> 816865204650829757, "TestID" -> 
         "TestParse-Atom-Rational@@Definitions/ASTPattern/Tests.wlt:236,1-240,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           With[{$CellContext`expr = 2/3}, 
            $CellContext`testParse["2/3", $CellContext`expr]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231870018861`16.63951930800187*^9, 
         "AbsoluteTimeUsed" -> 0.0010001`4.15055842510885, "CPUTimeUsed" -> 
         0., "MemoryUsed" -> 4976|>], 2907107794444957797 -> 
      TestResultObject[<|
        "TestKey" -> 2907107794444957797, "TestID" -> 
         "TestParse-Atom-Complex@@Definitions/ASTPattern/Tests.wlt:242,1-246,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           With[{$CellContext`expr = 2 + 3 I}, 
            $CellContext`testParse["2 + 3 I", $CellContext`expr]]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> HoldForm[{}], "ActualMessages" -> {}, 
         "AbsoluteTime" -> 3.8540231870038865`16.639519308002097*^9, 
         "AbsoluteTimeUsed" -> 0.0019995`4.451436406301528, "CPUTimeUsed" -> 
         0., "MemoryUsed" -> 4936|>], 8868154888725522663 -> 
      TestResultObject[<|
        "TestKey" -> 8868154888725522663, "TestID" -> 
         "TestParse-Pattern@@Definitions/ASTPattern/Tests.wlt:248,1-252,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            Pattern[$CellContext`x, 
             Blank[Integer]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187005886`16.63951930800232*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4096|>], 3864539799504511156 -> 
      TestResultObject[<|
        "TestKey" -> 3864539799504511156, "TestID" -> 
         "TestParse-Nested-Pattern@@Definitions/ASTPattern/Tests.wlt:254,1-\
258,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[5]", 
            Pattern[$CellContext`e, 
             $CellContext`f[
              Pattern[$CellContext`x, 
               Blank[Integer]]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187006886`16.639519308002434*^9, "AbsoluteTimeUsed" -> 
         0.0020002`4.451588420772831, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5072|>], 2579880981337850190 -> 
      TestResultObject[<|
        "TestKey" -> 2579880981337850190, "TestID" -> 
         "TestParse-Condition-1@@Definitions/ASTPattern/Tests.wlt:260,1-264,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[5]", 
            Condition[
             $CellContext`f[
              Pattern[$CellContext`x, 
               Blank[Integer]]], 
             Positive[$CellContext`x]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870088862`16.639519308002658*^9, "AbsoluteTimeUsed" -> 
         0.002`4.451544993495968, "CPUTimeUsed" -> 0.016000000000000014`, 
         "MemoryUsed" -> 3464|>], 6928783014809508645 -> 
      TestResultObject[<|
        "TestKey" -> 6928783014809508645, "TestID" -> 
         "TestParse-Condition-2@@Definitions/ASTPattern/Tests.wlt:266,1-270,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[5]", 
            Condition[
             $CellContext`f[
              Pattern[$CellContext`x, 
               Blank[Integer]]], 
             Negative[$CellContext`x]]]], "ExpectedOutput" -> HoldForm[False],
          "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870108862`16.639519308002885*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3168|>], 7776121120638357072 -> 
      TestResultObject[<|
        "TestKey" -> 7776121120638357072, "TestID" -> 
         "TestParse-Condition-3@@Definitions/ASTPattern/Tests.wlt:272,1-279,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse[
           "VerificationTest[1+1, 2, TestID -> \"test\"]", 
            Condition[
             VerificationTest[
              BlankSequence[], TestID -> Pattern[$CellContext`id, 
                Blank[]], 
              BlankNullSequence[]], 
             StringQ[$CellContext`id]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870128861`16.63951930800311*^9, "AbsoluteTimeUsed" -> 
         0.0009997`4.150384689940255, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3352|>], 7442183042912551960 -> 
      TestResultObject[<|
        "TestKey" -> 7442183042912551960, "TestID" -> 
         "TestParse-Condition-4@@Definitions/ASTPattern/Tests.wlt:281,1-288,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse[
           "VerificationTest[1+1, 2, TestID -> Automatic]", 
            Condition[
             VerificationTest[
              BlankSequence[], TestID -> Pattern[$CellContext`id, 
                Blank[]], 
              BlankNullSequence[]], 
             StringQ[$CellContext`id]]]], "ExpectedOutput" -> HoldForm[False],
          "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870148861`16.639519308003333*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3328|>], 8593663584502502144 -> 
      TestResultObject[<|
        "TestKey" -> 8593663584502502144, "TestID" -> 
         "TestParse-PatternTest-1@@Definitions/ASTPattern/Tests.wlt:290,1-294,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            PatternTest[
             Blank[Integer], IntegerQ]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870168863`16.63951930800356*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3688|>], 4543118123278565208 -> 
      TestResultObject[<|
        "TestKey" -> 4543118123278565208, "TestID" -> 
         "TestParse-PatternTest-2@@Definitions/ASTPattern/Tests.wlt:296,1-300,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            PatternTest[
             Pattern[$CellContext`x, 
              Blank[Integer]], IntegerQ]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870178862`16.63951930800367*^9, "AbsoluteTimeUsed" -> 
         0.0020003`4.45161013278293, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3672|>], 5181749392886667861 -> 
      TestResultObject[<|
        "TestKey" -> 5181749392886667861, "TestID" -> 
         "TestParse-PatternTest-3@@Definitions/ASTPattern/Tests.wlt:302,1-306,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["5", 
            Condition[
             Pattern[$CellContext`x, 
              Blank[]], 
             IntegerQ[$CellContext`x]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870198865`16.639519308003898*^9, "AbsoluteTimeUsed" -> 
         0.0009998`4.150428130248559, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3088|>], 170584252648549992 -> 
      TestResultObject[<|
        "TestKey" -> 170584252648549992, "TestID" -> 
         "TestParse-Except-1@@Definitions/ASTPattern/Tests.wlt:308,1-312,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Integer]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187021886`16.639519308004125*^9, "AbsoluteTimeUsed" -> 
         0.0010001`4.15055842510885, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4760|>], 5901541051884337485 -> 
      TestResultObject[<|
        "TestKey" -> 5901541051884337485, "TestID" -> 
         "TestParse-Except-2@@Definitions/ASTPattern/Tests.wlt:314,1-318,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Real]]]]], "ExpectedOutput" -> HoldForm[False], 
         "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870228861`16.639519308004235*^9, "AbsoluteTimeUsed" -> 
         0.0020004`4.451631843707617, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4792|>], 583682963263439423 -> 
      TestResultObject[<|
        "TestKey" -> 583682963263439423, "TestID" -> 
         "TestParse-Except-3@@Definitions/ASTPattern/Tests.wlt:320,1-324,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Integer], 
              Blank[Real]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870248865`16.639519308004463*^9, "AbsoluteTimeUsed" -> 
         0.0009995`4.150297796286123, "CPUTimeUsed" -> 0.015000000000000568`, 
         "MemoryUsed" -> 5392|>], 2118227091666834973 -> 
      TestResultObject[<|
        "TestKey" -> 2118227091666834973, "TestID" -> 
         "TestParse-Except-4@@Definitions/ASTPattern/Tests.wlt:326,1-330,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[1.2]", 
            $CellContext`f[
             Except[
              Blank[Integer], 
              Blank[String]]]]], "ExpectedOutput" -> HoldForm[False], 
         "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870268862`16.63951930800469*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5472|>], 5601218938690331369 -> 
      TestResultObject[<|
        "TestKey" -> 5601218938690331369, "TestID" -> 
         "TestParse-Except-5@@Definitions/ASTPattern/Tests.wlt:332,1-336,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["f[\"hello\"]", 
            $CellContext`f[
             Except[
              Blank[Integer], 
              Blank[String]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870278861`16.6395193080048*^9, "AbsoluteTimeUsed" -> 
         0.0020001`4.451566707677213, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         5392|>], 4333676819781669502 -> 
      TestResultObject[<|
        "TestKey" -> 4333676819781669502, "TestID" -> 
         "TestParse-PatternSequence-1@@Definitions/ASTPattern/Tests.wlt:338,1-\
342,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{a,b,c,d,c,d,a,b}", {
             Pattern[$CellContext`x, 
              BlankSequence[]], 
             PatternSequence[$CellContext`c, $CellContext`d, $CellContext`c], 
             Pattern[$CellContext`y, 
              BlankSequence[]]}]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870298862`16.639519308005028*^9, "AbsoluteTimeUsed" -> 
         0.0019999`4.451523278228987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         6352|>], 4015300347626598236 -> 
      TestResultObject[<|
        "TestKey" -> 4015300347626598236, "TestID" -> 
         "TestParse-PatternSequence-3@@Definitions/ASTPattern/Tests.wlt:344,1-\
348,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{a,b,a,b,a,b,a,b,a,b}", {
             Repeated[
              PatternSequence[
               Pattern[$CellContext`x, 
                Blank[]], 
               Pattern[$CellContext`x, 
                Blank[]]]]}]], "ExpectedOutput" -> HoldForm[False], 
         "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870318861`16.639519308005248*^9, "AbsoluteTimeUsed" -> 
         0.0020001`4.451566707677213, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         6320|>], 5397355103116662808 -> 
      TestResultObject[<|
        "TestKey" -> 5397355103116662808, "TestID" -> 
         "Reused-Pattern-Bindings-1@@Definitions/ASTPattern/Tests.wlt:350,1-\
354,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{1,1,2,2}", 
            $CellContext`ASTPattern[{
              Pattern[$CellContext`x, 
               Blank[]], 
              Pattern[$CellContext`x, 
               Blank[]], 
              Pattern[$CellContext`y, 
               Blank[]], 
              Pattern[$CellContext`y, 
               Blank[]]}]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870338862`16.639519308005475*^9, "AbsoluteTimeUsed" -> 
         0.0010002`4.150601848043636, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         6880|>], 6607831332145459392 -> 
      TestResultObject[<|
        "TestKey" -> 6607831332145459392, "TestID" -> 
         "Nested-ASTPattern-Held@@Definitions/ASTPattern/Tests.wlt:356,1-363,\
2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["1+1", 
            $CellContext`ASTPattern[
             
             HoldPattern[$CellContext`ASTPattern[1] + $CellContext`ASTPattern[
               1]]]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870358861`16.639519308005703*^9, "AbsoluteTimeUsed" -> 
         0.0009999`4.15047156621218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         4368|>], 1984084337656061317 -> 
      TestResultObject[<|
        "TestKey" -> 1984084337656061317, "TestID" -> 
         "Reused-Bindings-Condition@@Definitions/ASTPattern/Tests.wlt:365,1-\
369,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{1,1}", 
            $CellContext`ASTPattern[
             Condition[{
               Pattern[$CellContext`x, 
                Blank[]], 
               Pattern[$CellContext`x, 
                Blank[]]}, 
              IntegerQ[$CellContext`x]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.854023187036886`16.639519308005813*^9, "AbsoluteTimeUsed" -> 
         0.0020002`4.451588420772831, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3272|>], 3199565014317971860 -> 
      TestResultObject[<|
        "TestKey" -> 3199565014317971860, "TestID" -> 
         "FromAST-Bindings@@Definitions/ASTPattern/Tests.wlt:374,1-389,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Cases[
            CodeParser`CodeParse[
            "VerificationTest[1 + 1, 2, TestID -> \"Addition\", SameTest -> \
SameQ]"], $CellContext`ASTPattern[
              Condition[
               HoldPattern[
                VerificationTest[
                 BlankSequence[], TestID -> $CellContext`ASTPattern[
                   Pattern[$CellContext`id, 
                    Blank[String]], 
                   Pattern[$CellContext`as1, 
                    Blank[]]], 
                 BlankNullSequence[]]], 
               StringQ[$CellContext`id]], 
              Pattern[$CellContext`as2, 
               Blank[]]] :> $CellContext`FromAST[$CellContext`id], Infinity]],
          "ExpectedOutput" -> HoldForm[{"Addition"}], "ActualOutput" -> 
         HoldForm[{"Addition"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870388862`16.63951930800604*^9, "AbsoluteTimeUsed" -> 
         0.002`4.451544993495968, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3640|>], 6840058010111794540 -> 
      TestResultObject[<|
        "TestKey" -> 6840058010111794540, "TestID" -> 
         "EquivalentNodeQ-1@@Definitions/ASTPattern/Tests.wlt:394,1-408,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           Enclose[
            Apply[$CellContext`EquivalentNodeQ, 
             ConfirmMatch[
              Cases[
               CodeParser`CodeParse["{f[x],f[x]}"], 
               $CellContext`ASTPattern[
                Blank[][
                 Blank[]]], Infinity], {
               Blank[], 
               Blank[]}]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870418858`16.639519308006378*^9, "AbsoluteTimeUsed" -> 
         0.0010005`4.150732090804218, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3544|>], 415609042826955174 -> 
      TestResultObject[<|
        "TestKey" -> 415609042826955174, "TestID" -> 
         "FromAST-Sequence-1@@Definitions/ASTPattern/Tests.wlt:413,1-417,2", 
         "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`testParse["{a,a,a}", 
            $CellContext`ASTPattern[
             Condition[{
               Pattern[$CellContext`x, 
                Repeated[
                 Blank[]]]}, 
              SameQ[$CellContext`x]]]]], "ExpectedOutput" -> HoldForm[True], 
         "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> HoldForm[{}],
          "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870438862`16.6395193080066*^9, "AbsoluteTimeUsed" -> 
         0.001`4.150514997831987, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3296|>], 818340795497030278 -> 
      TestResultObject[<|
        "TestKey" -> 818340795497030278, "TestID" -> 
         "Reset-MessageFailure-TestMode@@Definitions/ASTPattern/Tests.wlt:431,\
1-436,2", "TestFileName" -> 
         "H:\\Documents\\ResourceFunctions\\Definitions\\ASTPattern\\Tests.\
wlt", "SameTest" -> MatchQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "Outcome" -> "Success", "Input" -> HoldForm[
           SetOptions[
            ResourceFunction["MessageFailure"], "TestMode" -> False]], 
         "ExpectedOutput" -> HoldForm[
           KeyValuePattern["TestMode" -> False]], "ActualOutput" -> 
         HoldForm[{
           "MessageFunction" -> Automatic, "Verbose" -> False, "Stack" -> 
            False, "TestMode" -> False}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTime" -> 
         3.8540231870458862`16.63951930800683*^9, "AbsoluteTimeUsed" -> 
         0.0010001`4.15055842510885, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         3640|>]|>, "TestsSucceededKeys" -> CompressedData["
1:eJwtlMmtFEEQRP8BC8ACPMh9MQGJEyZwQOLEAfwXr7paGs2S1ZUZERkxX3/+
+fErPj4+/n7i7fvvv/++feFLzrZPx2bmaFnaPPVa99bd7U7P5KCf+rRauMhG
manamj/11QzJKYvxndzweuoWUprV7ibr0tz/9vk8L63lo13lGmm6z+MMW1Gh
dTrImDPP40XH5kBbTJtWch/npg0cpiqixv3W08M4GhGLcofFrYent2tK9ah5
y/bLNluBRivtWd2Kyza11d1prjG8TTxwjlgjneYRsdWaT7kn2m396OZL1a4G
NSHBwEFJkdS5aLSzjesyjkCz8YqQpwc449HIOMmL3nI4SxOAmMnIrWuUIqQo
jSdqY+8O+eXdKoIYfDL31q132tQREsGWjb1qltLU9xxVzAz4Dy1XyBhY2CCc
ci4ttpMJckGzrIP/tUglWxEdHw5zpC4tNAdO0b2CxSFhPe2xHVcgVSlj26/T
7FhEujeOxsmXt/3UYDbgtZ1BGOipMy1wT++mRKriutsnoTsYiUX2pOjrnVob
EAmLFa6c25dWHx2wtsDJs6VfuhEGJ8RcZTAekdcj62DIiRTjpXG9ExnORrCZ
MfYQvOqzBiVvyAyTQpS6idCjFSs2pM/AQXdskocMPa6ZgAGH14KYBrXwR3n4
xptDgGMNjK30Hg/SfdtgD+AvKq04G32XEsfdjaJLIoocyB0bTCXmHiyM8I29
eT4K42IVuDGBiL3/F0W2aevwz8hD73pz8f4DvIBQx3R3W2QEUVCfClGZV80T
leMZoo6nl17y0A3WSerDxgBJLOP1zpyYLIK1uKD0f19k30Q=
     "], "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output", "Excluded",
 CellChangeTimes->{3.854023187065888*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"5295b0df-3db5-4cb2-a5b4-d228105895ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellLabel->"In[2]:=",ExpressionUUID->"578f2a63-2f74-45c5-b05d-cc0673e4d67d"],

Cell[TextData[{
 "Create an AST pattern that will match any ",
 Cell[BoxData["CallNode"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "af22b6c2-17c7-4d29-8661-d28af98c7b5b"],
 " or ",
 Cell[BoxData["LeafNode"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2690e46f-9505-4f74-9a67-91ef4d8d46d1"],
 " generated by ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["CodeParse", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:CodeParser/ref/CodeParse",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f91184d2-c737-44a8-9a67-f9ae5d1bc069"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539530607962*^9, 3.853953076640094*^9}, {
  3.854013617957526*^9, 3.8540136303503723`*^9}, {3.8540138256105824`*^9, 
  3.854013858173915*^9}, {3.854013940308746*^9, 
  3.8540139435948935`*^9}},ExpressionUUID->"ab803820-cb82-4eeb-8000-\
bb6331eb10e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", "_", "]"}]], "Input",
 CellChangeTimes->{3.8539530580083337`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"361445bc-6c22-4526-ae99-adb9bf5cd056"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
  RowBox[{"_", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{
  3.853953116334871*^9, 3.8539552698797708`*^9, 3.8539553012115946`*^9, 
   3.8539561778950815`*^9, 3.8539567064933624`*^9, 3.853957552741788*^9, 
   3.8539583046462755`*^9, 3.8539583457225943`*^9, 3.853958389724491*^9, 
   3.853958566726469*^9, 3.853958693999267*^9, {3.853958749483903*^9, 
   3.853958771822261*^9}, 3.85395936768093*^9, 3.8539594201580925`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"972fa1ec-c9b9-4e28-b165-0b29625040ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "076021e2-1976-47dd-abb2-fc90c3efd473"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"811179cd-3491-4496-892f-\
1e87112ea82e"],

Cell["Specify a head:", "Text",
 CellChangeTimes->{{3.853953129241638*^9, 
  3.8539531315664196`*^9}},ExpressionUUID->"32594e0f-0366-49e2-b989-\
cd81992ad36e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", "_head", "]"}]], "Input",
 CellChangeTimes->{
  3.853953127508353*^9, {3.853956167933463*^9, 3.8539561687105627`*^9}, {
   3.853959415870312*^9, 3.853959416210515*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0014619a-7d68-4769-be0e-85642f0964d5"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"head\"\>", "|", "\<\"Global`head\"\>"}], ",", "_"}], "]"}], 
   ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{
  3.8539530148472004`*^9, 3.8539531330399914`*^9, 3.853955269883772*^9, 
   3.8539553012248487`*^9, 3.853956177910081*^9, 3.8539567065073643`*^9, 
   3.853957552756785*^9, 3.85395830466029*^9, 3.853958345743595*^9, 
   3.8539583897444906`*^9, 3.8539585667434683`*^9, 3.8539586940192633`*^9, {
   3.8539587495039034`*^9, 3.8539587718362627`*^9}, 3.8539593677059307`*^9, 
   3.853959420166094*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"51acbe5b-7aa6-495e-87ca-f9e823c08d99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "bf5a405f-2b2e-41ca-9b3d-16a19d268603"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"44174d14-ba23-4cc3-9d36-\
e01f9c3c6162"],

Cell["A function with two arguments:", "Text",
 CellChangeTimes->{{3.8539552843267484`*^9, 
  3.8539552903151016`*^9}},ExpressionUUID->"3e742070-59ac-48c1-bff1-\
1e136a2f2c35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", 
   RowBox[{"_", ",", "_"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853955293675892*^9, 3.853955296206617*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c6bf5ce9-4eda-45a3-829f-d7a67ad5a05a"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8539552980983863`*^9, 3.8539553012378488`*^9}, 
   3.8539561779150815`*^9, 3.8539567065223637`*^9, 3.8539575527717867`*^9, 
   3.8539583046663775`*^9, 3.853958345764598*^9, 3.853958389766491*^9, 
   3.853958566757468*^9, 3.853958694024263*^9, {3.853958749509903*^9, 
   3.85395877185226*^9}, 3.8539593677299275`*^9, 3.8539594362347336`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"970c9c66-dbd8-4ff4-a894-d054ccb227ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "594e210e-1b9e-442a-9de5-416a6afee205"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"75ac6f77-1114-4891-8201-\
81d21eab2abd"],

Cell["A function with any number of arguments:", "Text",
 CellChangeTimes->{{3.8539552843267484`*^9, 3.8539552903151016`*^9}, {
  3.85395935339021*^9, 
  3.8539593551892276`*^9}},ExpressionUUID->"896393c0-0fd0-4993-8470-\
228c82ca21ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", "___", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.853959360722892*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"1ef854a1-4e1a-464d-9a2c-bdf9cf6061c3"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8539593638315086`*^9, 3.853959370253462*^9}, 
   3.853959438742938*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a4b40892-7685-4a42-ba22-a3958c437903"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f7e35396-0ace-4541-8988-8182c8351cc4"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"5103785d-2b14-4bf1-898a-\
e5bd828569f1"],

Cell[TextData[{
 "A named ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Pattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Pattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8a697955-b461-4b61-9ea9-009bd0ba02d3"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539532314198513`*^9, 
  3.853953265827901*^9}},ExpressionUUID->"426f844c-07dd-4d1a-9953-\
4edb7f2364de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", "a_Integer", "]"}]], "Input",
 CellChangeTimes->{{3.853953236855129*^9, 3.8539532388586226`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b5eec055-fb92-4722-82dc-6ffc43bedc15"],

Cell[BoxData[
 RowBox[{"a", ":", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
   RowBox[{
    RowBox[{"Integer", "|", 
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", 
       RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", "_"}],
       "]"}]}], ",", "_", ",", "_"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.8539532396330733`*^9, {3.85395532520807*^9, 3.8539553505852747`*^9}, 
   3.8539561456559477`*^9, 3.8539567122490597`*^9, 3.8539575577783947`*^9, 
   3.853958306962576*^9, 3.853958345800598*^9, 3.8539583897984915`*^9, 
   3.8539585709276915`*^9, 3.8539586940562673`*^9, {3.853958749532903*^9, 
   3.8539587718662634`*^9}, 3.853959377336836*^9, 3.8539594408811626`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a476caab-367c-4306-b5f6-6058ac279130"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "af3cfb1e-a1b7-4fff-87bf-627c9c06c5c6"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"a24dfb12-f3f6-44d3-b710-\
e96ac14408b7"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Repeated", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Repeated",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2fcf4b54-9b6e-4241-a599-0bbc3366391a"],
 " pattern:"
}], "Text",
 CellChangeTimes->{{3.853959286711318*^9, 
  3.8539592949647903`*^9}},ExpressionUUID->"aaa63084-bfba-49bb-ae8d-\
5fe444a67f6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"_Integer", "?", "IntegerQ"}], "|", 
      RowBox[{"_String", "?", "StringQ"}]}], ")"}], ".."}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"a73b1b6f-ab6c-4abe-9dfd-dc23c05e67f1"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"List\"\>", "|", "\<\"System`List\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Integer", ",", "_", ",", "_"}], "]"}], "|", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"String", ",", "_", ",", "_"}], "]"}]}], ")"}], ".."}], "}"}],
    ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{{3.8539592981011686`*^9, 3.853959312976812*^9}, 
   3.8539593888207026`*^9, 3.853959446875128*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"ffa7cb38-b0dd-4cd1-aae4-6494ee9a3c34"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "47514dfe-4a47-49cf-b27d-b9b601e92b90"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"d55d9774-d6d0-415e-9ca7-\
93d68b95c850"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Verbatim", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Verbatim",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3f40cef7-72de-400e-b420-0f210435a5db"],
 " pattern:"
}], "Text",
 CellChangeTimes->{{3.8540155287104645`*^9, 
  3.8540155349596124`*^9}},ExpressionUUID->"4a7384ff-6ddc-49d0-96ed-\
710cea9c7e02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"Verbatim", "[", "_Integer", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540155426386495`*^9, 3.854015550318524*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5795359e-6211-4639-adbb-39cb1ecdafbb"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"Blank\"\>", "|", "\<\"System`Blank\"\>"}], ",", "_"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", 
      RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", "_"}], 
     "]"}], "}"}], ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854015554220561*^9, 3.854015942508485*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"3cb6518d-4812-4ee9-b532-90b471acff61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0ca9d831-d002-4e77-a483-bdd27782583d"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"ae91aee4-10b0-4ecc-b5b7-\
92c513fe8749"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["PatternSequence", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/PatternSequence",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "044e67a5-6ede-4eb7-9bd9-0a6e7a5f3c74"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540161937860584`*^9, 
  3.8540161997023516`*^9}},ExpressionUUID->"cfa20356-2023-44dd-9f44-\
7aac8fc0e1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"{", 
   RowBox[{"___", ",", 
    RowBox[{"PatternSequence", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "___"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.854016204746464*^9, 3.8540162352941957`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"cd0c686a-5174-4e17-8b17-091ad31a6781"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"List\"\>", "|", "\<\"System`List\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], ",", 
     RowBox[{"PatternSequence", "[", 
      RowBox[{
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Symbol", ",", 
         RowBox[{"\<\"x\"\>", "|", "\<\"Global`x\"\>"}], ",", "_"}], "]"}], 
       ",", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Symbol", ",", 
         RowBox[{"\<\"y\"\>", "|", "\<\"Global`y\"\>"}], ",", "_"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}]}], "}"}], ",", "_"}],
   "]"}]], "Output",
 CellChangeTimes->{3.8540162375101995`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"3af117a4-9bec-4c56-b9e2-bba3e5cd52d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "184d7307-e6c2-4098-87e7-7cbdab11e188"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"5db62ad1-f469-47bc-9fa1-\
5b637aed8122"],

Cell[TextData[{
 "A pattern for unevaluated code wrapped in ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6fdfb2b7-187d-4ccd-a6d9-95c74bbd257f"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540181418539095`*^9, 3.8540181554566755`*^9}, {
  3.854018203862276*^9, 
  3.8540182101897364`*^9}},ExpressionUUID->"654520e2-6f8a-48f0-85a4-\
86f1e23567e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"HoldPattern", "[", 
   RowBox[{"1", "+", "1"}], "]"}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"9fc981dd-a045-47f3-9669-8ccae9d04d04"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"Plus\"\>", "|", "\<\"System`Plus\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}], ",", 
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}]}], "}"}], ",", 
   "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854018110706929*^9, 3.854018159340761*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"df5ac99f-65af-419a-8e22-6396e31016f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "641a2bbc-2bb4-4acf-85ae-b1910f03d05b"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"2d925425-b9d6-4cd4-bfc1-\
c61642b93168"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["PatternTest", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/PatternTest",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5036598c-9e68-425e-bb4d-0bf18a91a66d"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539533303893356`*^9, 
  3.8539533357744226`*^9}},ExpressionUUID->"4cdfc7fd-2c34-4a19-9022-\
62acac104f3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_", "?", "test"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539533412880263`*^9, 3.853953342026178*^9}, 
   3.8539553370251894`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"9d2b744f-0da9-409e-843d-e0b004a04a7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
    RowBox[{"_", ",", "_", ",", "_"}], "]"}], ")"}], "?", 
  InterpretationBox[
   FrameBox[
    TooltipBox["test",
     RowBox[{
       TagBox["ASTPatternTest", HoldForm], "[", "test", "]"}]],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.368417, 0.506779, 0.709798],
    RoundingRadius->3],
   $CellContext`ASTPatternTest[$CellContext`test]]}]], "Output",
 CellChangeTimes->{
  3.853953343653387*^9, {3.853955328592116*^9, 3.853955350605275*^9}, 
   3.8539561456619473`*^9, 3.853956712259058*^9, 3.853957557788395*^9, 
   3.853958308680732*^9, 3.853958345827598*^9, 3.8539583898264904`*^9, 
   3.8539585709536986`*^9, 3.853958694082266*^9, {3.853958749540904*^9, 
   3.853958771886259*^9}, 3.8539593818821554`*^9, 3.8539594468411264`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"20c31163-5eb4-429b-bee8-3fc82831c262"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "51c26b04-6506-4b5c-89f8-66514191d4f1"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"a44d5b3e-429f-4efe-8f90-\
bf68b4e8cb96"],

Cell[TextData[{
 "A ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Condition", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Condition",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a2461643-21a9-4f7b-a811-585172963e03"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8539532572136736`*^9, 
  3.8539532698970346`*^9}},ExpressionUUID->"d8e7383e-c506-437d-a875-\
375a4fedb381"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"a_", "/;", 
   RowBox[{"test", "[", "a", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8539532533094015`*^9, 3.8539532552154484`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6dc3050b-d94c-4225-81a9-252a68a7702b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", ":", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
    RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "/;", 
  InterpretationBox[
   FrameBox[
    TagBox[
     TooltipBox[
      RowBox[{"test", "[", "a", "]"}],
      RowBox[{
        TagBox["ASTCondition", HoldForm], "[", 
        RowBox[{
          RowBox[{"{", "a", "}"}], ",", 
          RowBox[{"test", "[", 
            RowBox[{"ASTConditionValue", "[", "1", "]"}], "]"}]}], "]"}]],
     Annotation[#, 
      HoldForm[$CellContext`ASTCondition][{$CellContext`a}, 
       $CellContext`test[
        $CellContext`ASTConditionValue[1]]], "Tooltip"]& ],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.880722, 0.611041, 0.142051],
    RoundingRadius->3],
   $CellContext`ASTCondition[{$CellContext`a}, 
    $CellContext`test[
     $CellContext`ASTConditionValue[1]]]]}]], "Output",
 CellChangeTimes->{
  3.8539532784997387`*^9, {3.8539553268160543`*^9, 3.8539553506112747`*^9}, 
   3.8539561456869497`*^9, 3.8539567122840586`*^9, 3.8539575578143954`*^9, 
   3.85395823632251*^9, 3.8539583107121525`*^9, 3.853958345836631*^9, 
   3.8539583898344903`*^9, 3.8539585833195252`*^9, 3.853958698547388*^9, {
   3.8539587495659018`*^9, 3.853958771904261*^9}, 3.8539593848215637`*^9, 
   3.853959446849128*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"adec78dc-c374-4e04-91dd-8116e0358d55"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "36f67392-cf52-45b9-8094-aa9efdac0365"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"32c44b2a-0322-46f4-8591-\
0db3ff3b26a6"],

Cell["Duplicate pattern bindings:", "Text",
 CellChangeTimes->{{3.853956108575596*^9, 3.853956140852723*^9}, {
  3.853959307006792*^9, 
  3.8539593085245996`*^9}},ExpressionUUID->"94b90002-6425-4e15-b12f-\
18207c9956a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"{", 
   RowBox[{"a_", ",", "a_", ",", "a_"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.853956091816716*^9, 3.8539561063291345`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"06c2d180-41d6-4330-9947-7c8683a10d25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CodeParser`CallNode", "[", 
   RowBox[{
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", 
      RowBox[{"\<\"List\"\>", "|", "\<\"System`List\"\>"}], ",", "_"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], ",", 
      RowBox[{"a$14885", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], ",", 
      RowBox[{"a$14886", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}]}], "}"}], ",", "_"}], 
   "]"}], "/;", 
  InterpretationBox[
   FrameBox[
    TooltipBox[
     RowBox[{"a", 
      StyleBox["\[TildeEqual]",
       FontWeight->"Heavy",
       FontColor->RGBColor[1, 0.5, 0]], "a$14885", 
      StyleBox["\[TildeEqual]",
       FontWeight->"Heavy",
       FontColor->RGBColor[1, 0.5, 0]], "a$14886"}],
     TagBox[
      RowBox[{
        TagBox["EquivalentNodeQ", HoldForm], "[", 
        RowBox[{"a", ",", "a$14885", ",", "a$14886"}], "]"}], HoldForm]],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.560181, 0.691569, 0.194885],
    RoundingRadius->3],
   $CellContext`EquivalentNodeQ[$CellContext`a, $CellContext`a$14885, \
$CellContext`a$14886]]}]], "Output",
 CellChangeTimes->{
  3.853956095831703*^9, 3.8539561456939516`*^9, 3.8539567195184946`*^9, 
   3.8539575578233957`*^9, 3.8539583133083396`*^9, 3.8539583480716963`*^9, 
   3.853958389858492*^9, 3.853958701251005*^9, {3.8539587495959034`*^9, 
   3.853958771923261*^9}, 3.8539593107505918`*^9, 3.8539593924938765`*^9, 
   3.8539594468831263`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7dc38c97-73f7-4875-bf14-42174067601b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "29dcf9ab-672b-42f3-8865-33188338f059"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"749a3a52-4370-4d08-9ca5-\
bbb581b5840b"],

Cell["Nested patterns:", "Text",
 CellChangeTimes->{{3.8539564370383615`*^9, 
  3.853956440166623*^9}},ExpressionUUID->"f807a7d3-364f-40ee-a2b7-\
d65da297a743"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"expr", ":", 
   RowBox[{"f", "[", 
    RowBox[{"_", ",", 
     RowBox[{"ASTPattern", "[", "arg_", "]"}], ",", "_"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8539563899581537`*^9, 3.8539564227462473`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"023b805e-51ce-4954-8b44-4126785b52e8"],

Cell[BoxData[
 RowBox[{"expr", ":", 
  RowBox[{"CodeParser`CallNode", "[", 
   RowBox[{
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", 
      RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
      RowBox[{"arg", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
        "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{
  3.8539564238632374`*^9, 3.853956719541495*^9, 3.853957567678649*^9, 
   3.8539583517307744`*^9, 3.853958389867491*^9, 3.853958709003215*^9, {
   3.8539587496199017`*^9, 3.8539587719422607`*^9}, 3.8539593953289585`*^9, 
   3.853959446906128*^9, 3.8540183040061064`*^9, 3.8540190373637013`*^9, 
   3.854019125557418*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f7b4eb6c-b940-4324-92b4-f67a6bea1477"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellLabel->"In[2]:=",ExpressionUUID->"4e4d557a-ac20-4f8d-83e9-2dbbdb5beb71"],

Cell[TextData[{
 "Use the second argument of ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f18130f1-d81f-48b6-95f4-c63d821f7d82"],
 " to match node metadata:"
}], "Text",
 CellChangeTimes->{{3.8539541475403337`*^9, 3.853954160662478*^9}, 
   3.8539544948724084`*^9},ExpressionUUID->"c7242716-3de4-4c65-9b14-\
8402f1158466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<f[x_]:=x+y;\\ny=1;\>\"", "]"}], 
   ",", 
   RowBox[{
    RowBox[{"ASTPattern", "[", 
     RowBox[{"_", ",", 
      RowBox[{"KeyValuePattern", "[", 
       RowBox[{"\"\<Definitions\>\"", "->", "defs_"}], "]"}]}], "]"}], ":>", 
    "defs"}], ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{
  3.85395404438877*^9, {3.8539544892374396`*^9, 3.8539545399657173`*^9}, {
   3.8539545812075934`*^9, 3.853954583842742*^9}, {3.853954641123514*^9, 
   3.8539546427611704`*^9}, {3.853954758271051*^9, 3.8539548483340373`*^9}, {
   3.8539568143910303`*^9, 3.85395682053382*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"88ade386-71a1-44ca-8e33-f170f418dcac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", "\<\"y\"\>", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8539548525869*^9, 3.8539553573150015`*^9, 
  3.8539568253824835`*^9, 3.853958781680317*^9, 3.8539588407781086`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"8077fecd-ea11-4eb6-8366-e9717d029248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ca569fc9-6a5a-4e0d-b2b5-0c31734e1494"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"5ee2859b-128f-4267-9e15-\
a530923afb36"],

Cell["Match only nodes that start on a particular line:", "Text",
 CellChangeTimes->{{3.8539542907148843`*^9, 
  3.853954303204687*^9}},ExpressionUUID->"c782c54e-ea2e-44cb-b421-\
97bb38dc1a06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\\n2+2\\n3+3\>\"", "]"}], ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"_", ",", 
     RowBox[{"KeyValuePattern", "[", 
      RowBox[{"CodeParser`Source", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "_"}], "}"}], ",", "_"}], "}"}]}], "]"}]}], "]"}],
    ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{
  3.85395404438877*^9, {3.8539543119607663`*^9, 3.853954316828023*^9}, 
   3.8539548654885454`*^9, {3.8539568310332994`*^9, 3.8539568375588026`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f109ebe9-f944-4de3-9945-1fb696ee3bf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", "\<\"Plus\"\>", ",", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"CodeParser`Source", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], 
          "\[RightAssociation]"}]}], "]"}], ",", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"CodeParser`Source", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], 
          "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.853954320877051*^9, 3.8539543389146805`*^9}, 
   3.8539548672365804`*^9, 3.8539553614967976`*^9, 3.853956839620733*^9, 
   3.853958840819109*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"231c2d2b-7cb5-4023-9d00-9f8861aa07c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "4d926ae2-2e30-4acc-9882-573fb8a30286"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"0e435881-3615-425b-a4d3-\
69d9d7381ee7"],

Cell["Bind parts of metadata in pattern names:", "Text",
 CellChangeTimes->{{3.8539543511589384`*^9, 
  3.8539543615264187`*^9}},ExpressionUUID->"ee7136be-982f-45e6-b70c-\
055d1ab58c55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ast", "=", 
  RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.853954026633562*^9, 3.853954065021411*^9}, {
  3.8539543671374464`*^9, 3.853954367983822*^9}, {3.853956844528837*^9, 
  3.853956847444027*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c900066b-cad5-4f37-8307-e752b7b589f7"],

Cell[BoxData[
 RowBox[{"CodeParser`ContainerNode", "[", 
  RowBox[{"String", ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", "\<\"Plus\"\>", ",", 
        RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8539540403211875`*^9, 3.8539540656120133`*^9}, 
   3.8539541654461904`*^9, {3.853954370584797*^9, 3.85395440628231*^9}, 
   3.8539544534107113`*^9, 3.853954875089409*^9, 3.853955366342969*^9, {
   3.8539568494821215`*^9, 3.853956857996665*^9}, 3.853958840865108*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4aff7523-def0-4094-8de8-3c721a828621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rule", "=", 
  RowBox[{
   RowBox[{"ASTPattern", "[", 
    RowBox[{"node_Plus", ",", 
     RowBox[{"meta", ":", 
      RowBox[{"KeyValuePattern", "[", 
       RowBox[{"CodeParser`Source", "->", "src_"}], "]"}]}]}], "]"}], ":>", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<String\>\"", "->", 
      RowBox[{"CodeParser`ToFullFormString", "[", "node", "]"}]}], ",", 
     RowBox[{"\"\<Source\>\"", "->", "src"}], ",", 
     RowBox[{"\"\<Metadata\>\"", "->", "meta"}]}], "|>"}]}]}]], "Input",
 CellChangeTimes->{{3.853954019890253*^9, 3.8539540243435745`*^9}, {
  3.8539540555487995`*^9, 3.8539541289886503`*^9}, {3.853954395117795*^9, 
  3.8539544495925627`*^9}, {3.8539568524233665`*^9, 3.8539568544973803`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9411e2d3-c925-4807-bfde-162cff64c435"],

Cell[BoxData[
 RowBox[{
  RowBox[{"node", ":", 
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", 
       RowBox[{"\<\"Plus\"\>", "|", "\<\"System`Plus\"\>"}], ",", "_"}], 
      "]"}], ",", "_", ",", 
     RowBox[{"meta", ":", 
      RowBox[{"KeyValuePattern", "[", 
       RowBox[{"CodeParser`Source", "\[Rule]", "src_"}], "]"}]}]}], "]"}]}], 
  "\[RuleDelayed]", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{"\<\"String\"\>", "\[Rule]", 
     RowBox[{"CodeParser`ToFullFormString", "[", "node", "]"}]}], ",", 
    RowBox[{"\<\"Source\"\>", "\[Rule]", "src"}], ",", 
    RowBox[{"\<\"Metadata\"\>", "\[Rule]", "meta"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.8539540566699753`*^9, 3.853954130399675*^9}, 
   3.8539541654621916`*^9, {3.853954384405614*^9, 3.85395440630431*^9}, 
   3.8539544534307103`*^9, 3.8539548751104136`*^9, 3.85395536636497*^9, 
   3.853956858017665*^9, 3.853958840888109*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"635d3d6a-68a1-488f-997e-bed1a86d4ba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", "rule", ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.853954094924288*^9, 3.8539540980972223`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"858be51a-978b-400d-ac16-c851ed418087"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"String\"\>", "\[Rule]", "\<\"Plus[1, 1]\"\>"}], ",", 
    RowBox[{"\<\"Source\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"\<\"Metadata\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{{3.8539540985294447`*^9, 3.8539541313743515`*^9}, 
   3.8539541654771976`*^9, {3.8539543869992743`*^9, 3.8539544095559344`*^9}, 
   3.85395445515919*^9, 3.853954875115409*^9, 3.8539553663849707`*^9, 
   3.853956860362438*^9, 3.8539588408951087`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"3ff5086b-135e-4af8-bb48-50fad7d4ff68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Options", "Subsection",
 CellLabel->"In[4]:=",ExpressionUUID->"e9563be6-3afe-4252-82e5-1345ef6f03e6"],

Cell[CellGroupData[{

Cell["Applications", "Subsection",
 CellLabel->"In[9]:=",ExpressionUUID->"f82d2c28-fcdb-49a6-ba96-7ec42f2587c6"],

Cell["\<\
Parse a Wolfram Language file to get an abstract syntax tree:\
\>", "Text",
 CellChangeTimes->{{3.8539534642994647`*^9, 
  3.853953480979247*^9}},ExpressionUUID->"21c08b9e-5b7b-44f1-8de3-\
beb3f4dc6e47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"ast", "=", 
   RowBox[{"CodeParser`CodeParse", "[", 
    RowBox[{
     RowBox[{"File", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
     RowBox[{
     "\"\<SourceConvention\>\"", "->", "\"\<SourceCharacterIndex\>\""}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8540141162910113`*^9, 3.8540141185194893`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b8e55449-d450-4549-9dbe-8ae9ccb5ae3a"],

Cell[BoxData[
 TagBox[
  RowBox[{"CodeParser`ContainerNode", "[", 
   RowBox[{"File", ",", 
    RowBox[{"{", 
     RowBox[{"CodeParser`PackageNode", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"String", ",", "\<\"\\\"Collatz`\\\"\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"14", ",", "23"}], "}"}]}], "\[RightAssociation]"}]}], 
         "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CodeParser`CallNode", "[", 
          RowBox[{
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Symbol", ",", "\<\"Set\"\>", ",", 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"CodeParser`CallNode", "[", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "]"}], 
             ",", 
             RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "}"}], 
           ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"27", ",", "202"}], "}"}]}], ",", 
             RowBox[{"\<\"Definitions\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"CodeParser`LeafNode", "[", 
                RowBox[{"Symbol", ",", "\<\"Collatz\"\>", ",", 
                 RowBox[{"\[LeftAssociation]", 
                  RowBox[{"CodeParser`Source", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"27", ",", "33"}], "}"}]}], 
                  "\[RightAssociation]"}]}], "]"}], "}"}]}]}], 
            "\[RightAssociation]"}]}], "]"}], ",", 
         RowBox[{"CodeParser`ContextNode", "[", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"CodeParser`Source", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "406"}], "}"}]}], "\[RightAssociation]"}]}], 
      "]"}], "}"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "406"}], "}"}]}], ",", 
      RowBox[{"\<\"FileName\"\>", 
       "\[Rule]", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\
\\\\13.0\\\\Documentation\\\\English\\\\System\\\\ExampleData\\\\Collatz.m\"\>\
"}]}], "\[RightAssociation]"}]}], "]"}],
  Short[#, 3]& ]], "Output",
 CellChangeTimes->{3.8540141415807953`*^9},
 CellLabel->
  "Out[1]//Short=",ExpressionUUID->"eb31c116-61b4-49e2-b04a-6df6035327e2"]
}, Open  ]],

Cell["Extract all nodes from the AST that correspond to a pattern:", "Text",
 CellChangeTimes->{{3.853953542673546*^9, 3.853953551289359*^9}, {
  3.85395364436016*^9, 
  3.853953653196205*^9}},ExpressionUUID->"1807cbb2-5872-4071-ab4e-\
1cec87d37c79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nodes", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"ast", ",", 
    RowBox[{"ASTPattern", "[", 
     RowBox[{"Collatz", "[", 
      RowBox[{"_Plus", "|", "_Times"}], "]"}], "]"}], ",", "Infinity"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8539535525673885`*^9, 3.85395356296513*^9}, {
   3.853953658135634*^9, 3.853953695527049*^9}, 3.8539537504242115`*^9, {
   3.854014164779305*^9, 3.854014165542304*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"71e84744-8243-4588-848e-eaac8b141cb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", "\<\"Collatz\"\>", ",", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"CodeParser`Source", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"275", ",", "281"}], "}"}]}], "\[RightAssociation]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"Plus\"\>", ",", 
          RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CodeParser`CallNode", "[", 
           RowBox[{
            RowBox[{"CodeParser`LeafNode", "[", 
             RowBox[{"Symbol", ",", "\<\"Times\"\>", ",", 
              RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Integer", ",", "\<\"3\"\>", ",", 
                RowBox[{"\[LeftAssociation]", 
                 RowBox[{"CodeParser`Source", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"283", ",", "283"}], "}"}]}], 
                 "\[RightAssociation]"}]}], "]"}], ",", 
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Symbol", ",", "\<\"n\"\>", ",", 
                RowBox[{"\[LeftAssociation]", 
                 RowBox[{"CodeParser`Source", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"285", ",", "285"}], "}"}]}], 
                 "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"283", ",", "285"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"289", ",", "289"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"283", ",", "289"}], "}"}]}], "\[RightAssociation]"}]}], 
       "]"}], "}"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"275", ",", "290"}], "}"}]}], "\[RightAssociation]"}]}], 
    "]"}], ",", 
   RowBox[{"CodeParser`CallNode", "[", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Symbol", ",", "\<\"Collatz\"\>", ",", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"CodeParser`Source", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"347", ",", "353"}], "}"}]}], "\[RightAssociation]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"Times\"\>", ",", 
          RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"n\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"355", ",", "355"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"CodeParser`CallNode", "[", 
           RowBox[{
            RowBox[{"CodeParser`LeafNode", "[", 
             RowBox[{"Symbol", ",", "\<\"Power\"\>", ",", 
              RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
                RowBox[{"\[LeftAssociation]", 
                 RowBox[{"CodeParser`Source", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"357", ",", "357"}], "}"}]}], 
                 "\[RightAssociation]"}]}], "]"}], ",", 
              RowBox[{"CodeParser`LeafNode", "[", 
               RowBox[{"Integer", ",", "\<\"-1\"\>", ",", 
                RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"355", ",", "357"}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"355", ",", "357"}], "}"}]}], "\[RightAssociation]"}]}], 
       "]"}], "}"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"347", ",", "358"}], "}"}]}], "\[RightAssociation]"}]}], 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853953563528862*^9, {3.853953671698307*^9, 3.85395369605105*^9}, 
   3.853953751226714*^9, 3.853955385838209*^9, {3.8539568855470657`*^9, 
   3.8539569014036503`*^9}, 3.853958849722723*^9, 3.853959628380316*^9, 
   3.854014171466421*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"bb66f5ca-85a4-4ecf-b807-5911dfdf6e1c"]
}, Open  ]],

Cell["Convert to expressions:", "Text",
 CellChangeTimes->{{3.8540141905091143`*^9, 
  3.854014194295802*^9}},ExpressionUUID->"054b6a03-49da-4dfb-a9b9-\
5a7702d57fa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  RowBox[{
   RowBox[{"CodeParser`ToFullFormString", "/@", "nodes"}], ",", "InputForm", 
   ",", "Hold"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540141737834735`*^9, 3.8540141878169503`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1c12e382-6ef1-4305-8ae2-9cc9d2674755"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{"Collatz", "[", 
     RowBox[{
      RowBox[{"3", " ", "n"}], "+", "1"}], "]"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"Collatz", "[", 
     FractionBox["n", "2"], "]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.854014197357769*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0e8be3e8-6fbf-483c-b1b9-e073c6e2bfba"]
}, Open  ]],

Cell["Extract source positions:", "Text",
 CellChangeTimes->{{3.8539537983049703`*^9, 3.8539538102891474`*^9}, {
  3.8539538955537825`*^9, 
  3.8539538956927843`*^9}},ExpressionUUID->"77dfa179-4a75-4fec-8d71-\
c5c6f287af81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"ast", ",", 
    RowBox[{
     RowBox[{"ASTPattern", "[", 
      RowBox[{
       RowBox[{"Collatz", "[", "_", "]"}], ",", 
       RowBox[{"KeyValuePattern", "[", 
        RowBox[{"CodeParser`Source", "->", "src_"}], "]"}]}], "]"}], ":>", 
     "src"}], ",", "Infinity"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.853953756338521*^9, 3.8539538145680733`*^9}, 
   3.8539539001147175`*^9, 3.8539568958998537`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"80393bac-e3b5-4fb2-83db-0bdb29876ce5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"225", ",", "234"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"244", ",", "261"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"275", ",", "290"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"317", ",", "334"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"347", ",", "358"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8539537821806097`*^9, 3.8539538162830915`*^9, 3.853953905936763*^9, 
   3.853955389081101*^9, {3.853956892000842*^9, 3.8539569014106503`*^9}, 
   3.8539588536310825`*^9, 3.8539596329874444`*^9, 3.854014215202568*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"913020a6-73b1-4ee5-93f4-285031b6dd40"]
}, Open  ]],

Cell["Extract the corresponding parts of the file as strings:", "Text",
 CellChangeTimes->{{3.853953843350602*^9, 3.8539538445423775`*^9}, {
  3.8540142382854276`*^9, 
  3.8540142569174967`*^9}},ExpressionUUID->"8a494b0e-4646-4465-acb8-\
005ed28e0fce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringTake", "[", 
  RowBox[{
   RowBox[{"ReadString", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   "pos"}], "]"}]], "Input",
 CellChangeTimes->{{3.85395382473895*^9, 3.8539538358385754`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b3fcd8de-f0ba-444f-81fb-b50bdb0770a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Collatz[1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[3 n + 1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[n/2]\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.853953836510722*^9, 3.853953908580479*^9, 
  3.85395539072535*^9, 3.853956903997796*^9, 3.853958853668083*^9, 
  3.8539596330174446`*^9, 3.8540142588015146`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"4888b2fa-fc57-489f-b1d0-f8eac91c92d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1452ec6f-8a70-40ab-bb65-909aadefb018"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"7c68397e-70fd-4d00-abfe-\
8ee9e3a5e9ad"],

Cell["Create a CodeCases function:", "Text",
 CellChangeTimes->{{3.854016907882264*^9, 
  3.8540169423818336`*^9}},ExpressionUUID->"ae4c3785-c28b-451c-9d26-\
24cf997eac8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CodeCases", "[", 
    RowBox[{"file_File", ",", "patt_"}], "]"}], ":=", 
   RowBox[{"CodeCases", "[", 
    RowBox[{
     RowBox[{"ReadString", "[", "file", "]"}], ",", "patt"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CodeCases", "[", 
    RowBox[{"string_String", ",", "patt_"}], "]"}], ":=", 
   RowBox[{"StringTake", "[", 
    RowBox[{"string", ",", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"CodeParser`CodeParse", "[", 
        RowBox[{"string", ",", 
         RowBox[{
         "\"\<SourceConvention\>\"", "\[Rule]", 
          "\"\<SourceCharacterIndex\>\""}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"ASTPattern", "[", 
         RowBox[{"patt", ",", 
          RowBox[{"KeyValuePattern", "[", 
           RowBox[{"CodeParser`Source", "\[Rule]", "src_"}], "]"}]}], "]"}], 
        "\[RuleDelayed]", "src"}], ",", "Infinity"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8540165192667413`*^9, 3.8540165634636626`*^9}, {
  3.854016713315529*^9, 3.854016725725747*^9}, {3.8540167744269595`*^9, 
  3.8540167749691477`*^9}, {3.854016805833043*^9, 3.8540168199896455`*^9}, {
  3.854016887631993*^9, 3.85401688799609*^9}, {3.8540175951573963`*^9, 
  3.8540176201316137`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b8d920a6-a3ff-4d86-ae35-00a46bac647b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CodeCases", "[", 
  RowBox[{
   RowBox[{"File", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   "_Collatz"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540167298669343`*^9, 3.854016731891554*^9}, {
  3.8540168312730775`*^9, 3.8540168335244193`*^9}, {3.854016871895134*^9, 
  3.854016873920781*^9}, {3.8540169506844788`*^9, 3.854016952163786*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9a3e338a-4975-4dd8-92e5-04b907b98ecf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Collatz[1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[3 n + 1]\"\>", ",", "\<\"Collatz[n_Integer]\"\>", 
   ",", "\<\"Collatz[n/2]\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.854016878487005*^9, 3.8540168904794393`*^9}, 
   3.854016959561883*^9, 3.8540170507606273`*^9, 3.854017656441534*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f45786c4-97a9-4880-8f16-8df40aa2264b"]
}, Open  ]],

Cell["Compare to string matching:", "Text",
 CellChangeTimes->{{3.854017063479702*^9, 
  3.8540170940321913`*^9}},ExpressionUUID->"4a9a5553-ab7a-4389-a8c8-\
c45737a080f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{
   RowBox[{"ReadString", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   RowBox[{"Shortest", "[", 
    RowBox[{"\"\<Collatz[\>\"", "~~", "___", "~~", "\"\<]\>\""}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.854016966426883*^9, 3.8540169997722917`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3bc36ffa-4892-4801-8da7-07a7f2549787"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Collatz[n]\"\>", ",", "\<\"Collatz[1]\"\>", 
   ",", "\<\"Collatz[n_Integer]\"\>", ",", "\<\"Collatz[3 n + 1]\"\>", 
   ",", "\<\"Collatz[n_Integer]\"\>", ",", "\<\"Collatz[n/2]\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.854016993983466*^9, 3.8540170002953143`*^9}, 
   3.8540176611308193`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"36335fc1-b81d-491c-819c-bdcf51e67c30"]
}, Open  ]],

Cell["This incorrectly matched part of the usage message as code:", "Text",
 CellChangeTimes->{{3.8540171100081463`*^9, 
  3.8540171317159557`*^9}},ExpressionUUID->"4a8692d4-4597-430c-ae4a-\
8343a2d1c779"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadString", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"8fc79c6b-29d8-4e62-86e8-f769d57394bc"],

Cell[BoxData["\<\"BeginPackage[\\\"Collatz`\\\"]\\n\\nCollatz::usage =\\n     \
   \\\"Collatz[n] gives a list of the iterates in the 3n+1 problem,\\n        \
starting from n. The conjecture is that this sequence always\\n        \
terminates.\\\"\\n\\nBegin[\\\"`Private`\\\"]\\n\\nCollatz[1] := \
{1}\\n\\nCollatz[n_Integer]  := Prepend[Collatz[3 n + 1], n] /; OddQ[n] && n \
> 0\\n\\nCollatz[n_Integer] := Prepend[Collatz[n/2], n] /; EvenQ[n] && n > \
0\\n\\nEnd[ ]\\n\\nEndPackage[ ]\"\>"], "Output",
 CellChangeTimes->{3.8540170140882797`*^9, 3.854017665270161*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a14b1c5e-d84f-4973-a435-6405b206b4b0"]
}, Open  ]],

Cell["\<\
When matching against the AST, there's no need to account for different types \
of input syntax:\
\>", "Text",
 CellChangeTimes->{{3.8540171589260206`*^9, 
  3.854017246796621*^9}},ExpressionUUID->"b2f9cf85-919f-4e10-90e4-\
76f3bd713282"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CodeCases", "[", 
  RowBox[{
   RowBox[{"File", "[", "\"\<ExampleData/Collatz.m\>\"", "]"}], ",", 
   RowBox[{"And", "[", 
    RowBox[{"_", ",", "_"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.854017146053875*^9, 3.8540171467669477`*^9}, {
  3.8540173628940663`*^9, 3.8540173661041813`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"93cc3e20-4af5-4391-887e-fdc964ff73d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"OddQ[n] && n > 0\"\>", ",", "\<\"EvenQ[n] && n > 0\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.854017151445318*^9, 3.854017368394704*^9, 
  3.8540176704072022`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f0e20e7b-2b3a-45cf-854c-23570481fe53"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties and Relations", "Subsection",
 CellLabel->"In[4]:=",ExpressionUUID->"42f1a48d-5a1e-4643-b7c2-1786c83ebfce"],

Cell[TextData[{
 "The single-argument form of ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "963cac8f-4545-4f07-a49d-eda0320cc21e"],
 " is effectively invisible to an outer ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2179dc11-fa70-4ef5-a54b-0c6dd60d3208"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540197326934133`*^9, 
  3.8540197702801685`*^9}},ExpressionUUID->"dd9042ac-1429-46d7-a5cf-\
6b10400e7074"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"ASTPattern", "[", "_", "]"}], ",", 
    RowBox[{"ASTPattern", "[", "_", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540196703751907`*^9, 3.8540196906870685`*^9}, {
  3.85401978172867*^9, 3.8540198104677906`*^9}, {3.854019848272435*^9, 
  3.854019849121706*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ce16fe36-90b2-4a4f-b001-dcef178a8696"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.8540196924787493`*^9, {3.854019774961713*^9, 3.854019813667624*^9}, 
   3.8540198520972457`*^9, 3.854019938216982*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6dce26b8-f682-44a9-a28f-01031cd51d76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"f", "[", 
   RowBox[{"_", ",", "_"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540196971783047`*^9, 3.8540196983666954`*^9}, {
  3.8540197871515803`*^9, 3.8540198175481753`*^9}, {3.854019854161*^9, 
  3.854019854566101*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"319383d8-9ba6-43eb-8d23-67cf3cec86c4"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.85401969921912*^9, {3.8540197749757123`*^9, 3.854019818155385*^9}, 
   3.854019855894945*^9, 3.8540199382209806`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"ea60c677-e25f-47c8-add5-eb7bc0cee114"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "===", "%%"}]], "Input",
 CellChangeTimes->{{3.8540199402091503`*^9, 3.85401994168615*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c069ce02-8720-4edb-9db3-8dd0970c1a8d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854019942155223*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2d04bbff-eed6-464e-9b06-23e91927a6af"]
}, Open  ]],

Cell["\<\
The two-argument form inserts the corresponding metadata patterns:\
\>", "Text",
 CellChangeTimes->{{3.8540198677168407`*^9, 
  3.8540198953088756`*^9}},ExpressionUUID->"6d94b472-973b-49e4-8938-\
5414bd9348fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"ASTPattern", "[", 
      RowBox[{"_", ",", "a_"}], "]"}], ",", 
     RowBox[{"ASTPattern", "[", 
      RowBox[{"_", ",", "b_"}], "]"}]}], "]"}], ",", "c_"}], "]"}]], "Input",
 CellChangeTimes->{{3.854019794808504*^9, 3.8540198626790533`*^9}, {
  3.854019965829482*^9, 3.854019966329649*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5649507a-9ba6-4279-9161-bcadc7431597"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "a_"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
      "[", 
      RowBox[{"_", ",", "_", ",", "b_"}], "]"}]}], "}"}], ",", "c_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.854019836015241*^9, 3.8540198982902727`*^9, 
  3.8540199746783104`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"afa75911-ddfa-4f51-b20b-59d96b57cc36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7c5e2e20-c22c-4bfc-8091-d82ee235acec"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"7772e6fa-a78e-4441-afd6-\
aaa33021eaa3"],

Cell["Get an AST node corresponding to a simple expression:", "Text",
 CellChangeTimes->{{3.854014457224232*^9, 
  3.8540144778019648`*^9}},ExpressionUUID->"2cafd971-8e55-4226-9240-\
d0c5b3c1f90a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"node", "=", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<f[1]\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"05246025-12d6-4daf-bc9f-1925afe65af1"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.854014481920702*^9, 3.854014604467166*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"b86f6fd5-1c43-49f6-a70d-f4055f7ac5bd"]
}, Open  ]],

Cell[TextData[{
 "For simple patterns, the performance of matching an ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9c86d142-c4d5-4edf-96f7-a0053eb5db9b"],
 " is comparable to normal pattern matching:"
}], "Text",
 CellChangeTimes->{{3.854014496718206*^9, 
  3.85401459336065*^9}},ExpressionUUID->"f51cade5-8505-40d6-8067-\
55ebe6aee256"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simple", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"f", "[", "_Integer", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8540145681127343`*^9, 3.854014569017516*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b35cec2f-243f-49f0-b71c-dd5893489ed8"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
     RowBox[{
      RowBox[{"Integer", "|", 
       RowBox[{"CodeParser`LeafNode", "[", 
        RowBox[{"Symbol", ",", 
         RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", 
         "_"}], "]"}]}], ",", "_", ",", "_"}], "]"}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8540146044701705`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5128c815-dfb1-455c-a671-311c6bca0f8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"node", ",", "simple"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.854014610948518*^9, 3.8540146117017055`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0ac93ee3-a160-4a25-b61d-694eeaa0dcbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.214991569519043`*^-7", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.854014616826976*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"944a4429-2ff0-4e5f-b4b1-f4a1bf51e888"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], ",", 
    RowBox[{"f", "[", "_Integer", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540142883777266`*^9, 3.8540142994296703`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"43c82208-82ca-4f17-80ee-518bf236385f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.199738025665283`*^-7", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.854014302537816*^9, 3.854014623424017*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"9a505483-10f8-491d-bf50-c9270eef810c"]
}, Open  ]],

Cell[TextData[{
 "Matching patterns that require evaluation typically incur significant cost \
as an ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c0993d6c-6a4b-4765-862b-314ece1096f4"],
 ":"
}], "Text",
 CellChangeTimes->{{3.854014639402794*^9, 3.854014668845174*^9}, {
  3.854014746524516*^9, 
  3.8540147476677904`*^9}},ExpressionUUID->"4006c5b3-d54d-45fb-9e00-\
544c4aa4518a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"f", "[", 
    RowBox[{"x_Integer", "/;", 
     RowBox[{"IntegerQ", "[", "x", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.854014331159177*^9, 3.8540143399094114`*^9}, {
  3.8540143703047886`*^9, 3.854014376362107*^9}, {3.854014675281684*^9, 
  3.8540146910223193`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"19550d4e-313c-4247-ba7a-18665d81c506"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], 
       "[", 
       RowBox[{
        RowBox[{"Integer", "|", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Symbol", ",", 
           RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", 
           "_"}], "]"}]}], ",", "_", ",", "_"}], "]"}]}], "/;", 
     InterpretationBox[
      FrameBox[
       TagBox[
        TooltipBox[
         RowBox[{"IntegerQ", "[", "x", "]"}],
         RowBox[{
           TagBox["ASTCondition", HoldForm], "[", 
           RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"IntegerQ", "[", 
               RowBox[{"ASTConditionValue", "[", "1", "]"}], "]"}]}], "]"}]],
        Annotation[#, 
         HoldForm[$CellContext`ASTCondition][{$CellContext`x}, 
          IntegerQ[
           $CellContext`ASTConditionValue[1]]], "Tooltip"]& ],
       FrameMargins->{{4, 4}, {1, 1}},
       FrameStyle->RGBColor[0.880722, 0.611041, 0.142051],
       RoundingRadius->3],
      $CellContext`ASTCondition[{$CellContext`x}, 
       IntegerQ[
        $CellContext`ASTConditionValue[1]]]]}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.854014341499154*^9, 3.8540143797079296`*^9, 
  3.854014410032863*^9, 3.854014692943969*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"467bf7f5-41e8-4a3a-940d-d5ecfb71f99b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"node", ",", "patt"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.854014346132574*^9, 3.8540143965784883`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"3798a317-6681-457c-8218-5f6c579deea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000016477584838867186`", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.854014352511509*^9, {3.854014384422637*^9, 3.854014412133899*^9}, 
   3.854014703003306*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c8b81846-6dc6-400a-ae90-9ccf94c3946c"]
}, Open  ]],

Cell["Compare to normal pattern matching:", "Text",
 CellChangeTimes->{{3.8540147186472445`*^9, 
  3.8540147236662226`*^9}},ExpressionUUID->"f8ec60b8-6961-4720-9086-\
ffb347f179a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x_Integer", "/;", 
      RowBox[{"IntegerQ", "[", "x", "]"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540147068805246`*^9, 3.8540147111621084`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0734be19-78ba-491c-8360-f505f32d7f09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.814590930938721`*^-7", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.854014714295602*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"4874907c-2cc1-4e42-bb3f-59fa156a85fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "965293cf-5d2d-42fc-9082-3823707acae8"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"b8e798f1-7cc1-4eee-aab7-\
e772c22d2cef"],

Cell["Some pattern tests allow for optimized patterns:", "Text",
 CellChangeTimes->{{3.853953144766021*^9, 
  3.853953152017762*^9}},ExpressionUUID->"059f8aa4-6dd5-4374-a450-\
8a223fc1f059"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_Integer", "?", "IntegerQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539531387803607`*^9, 3.8539531403579073`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5e003a9e-e693-49bf-9ea5-8f1eced66e5b"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"Integer", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{
  3.8539530212325945`*^9, 3.853953156477867*^9, {3.8539553137884254`*^9, 
   3.853955350579275*^9}, 3.853956145629947*^9, {3.8539562015994644`*^9, 
   3.85395621496259*^9}, 3.853956315160878*^9, 3.8539569148459315`*^9, 
   3.85395885932101*^9, 3.8539596378788137`*^9, 3.854014270050947*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"769148d0-1087-411a-b8d6-e45cc07b32e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_Integer", "?", "AtomQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539562088410263`*^9, 3.8539562098562517`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5cddb44f-f4b5-4fdd-827e-d008ccfda4d1"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"Integer", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{3.8539562149815893`*^9, 3.8539563151658783`*^9, 
  3.8539569148509293`*^9, 3.8539588593390102`*^9, 3.8539596378848114`*^9, 
  3.854014270054948*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"4e6138a2-5a7f-49ec-b68c-dc71332c5488"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_String", "?", "StringQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539561860714383`*^9, 3.853956189698398*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a021fd1d-6134-4e4b-a549-b10e01466ffb"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"String", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{{3.8539562016224637`*^9, 3.8539562149865885`*^9}, 
   3.853956315181878*^9, 3.8539569148659277`*^9, 3.8539588593440094`*^9, 
   3.853959637907813*^9, 3.854014270076949*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"54a8a6a5-4948-4c92-b57d-d6d3fb607ddf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_String", "?", "AtomQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.853956194946329*^9, 3.8539561959184637`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"530f6a72-bdf2-4116-b983-8e434183248f"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"String", ",", "_", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{{3.8539562016294622`*^9, 3.85395621499259*^9}, 
   3.8539563151978784`*^9, 3.8539569148809314`*^9, 3.853958859350009*^9, 
   3.8539596379128103`*^9, 3.85401427008095*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6254c235-24e9-4c13-aed8-7465cae1367f"]
}, Open  ]],

Cell["\<\
This will only work for certain pattern tests that appear literally:\
\>", "Text",
 CellChangeTimes->{{3.85395625539868*^9, 
  3.853956334043253*^9}},ExpressionUUID->"0cc3a742-64d1-45c0-ac52-\
9e103ab72f2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myIntegerQ", "=", "IntegerQ"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ASTPattern", "[", 
  RowBox[{"_Integer", "?", "myIntegerQ"}], "]"}]}], "Input",
 CellChangeTimes->{{3.853956266088846*^9, 3.8539562707592316`*^9}, {
  3.8539563109218483`*^9, 3.8539563119186745`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a3919c15-c25c-444b-885a-a57f6687176c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CodeParser`CallNode", "|", "CodeParser`LeafNode"}], ")"}], "[", 
    RowBox[{
     RowBox[{"Integer", "|", 
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", 
        RowBox[{"\<\"Integer\"\>", "|", "\<\"System`Integer\"\>"}], ",", 
        "_"}], "]"}]}], ",", "_", ",", "_"}], "]"}], ")"}], "?", 
  InterpretationBox[
   FrameBox[
    TooltipBox["myIntegerQ",
     RowBox[{
       TagBox["ASTPatternTest", HoldForm], "[", "myIntegerQ", "]"}]],
    FrameMargins->{{4, 4}, {1, 1}},
    FrameStyle->RGBColor[0.368417, 0.506779, 0.709798],
    RoundingRadius->3],
   $CellContext`ASTPatternTest[$CellContext`myIntegerQ]]}]], "Output",
 CellChangeTimes->{3.8539562806582713`*^9, 3.8539563152028785`*^9, 
  3.8539569202744513`*^9, 3.853958861633808*^9, 3.8539596395015135`*^9, 
  3.85401427010695*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"06b9b0db-2b60-4ccb-b58c-a16936c93aca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a19886eb-49a1-4f2f-ab7d-4c0dba2359ab"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"e3cc07b9-b971-46e5-b5a0-\
90487cfc6273"],

Cell[TextData[{
 "Pattern bindings that stay within ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6dd482ae-8a10-4197-a937-bd3d2aa1909b"],
 " correspond to expressions:"
}], "Text",
 CellChangeTimes->{{3.853955457883066*^9, 3.853955476907748*^9}, 
   3.853955525522358*^9, {3.8539588842674413`*^9, 
   3.853958889291543*^9}},ExpressionUUID->"9bc391cb-2cd8-41a4-87d8-\
1715875a3f65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ast", "=", 
   RowBox[{"CodeParser`CodeParse", "[", "\"\<1+2\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"x_Integer", "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{"x", ",", "\"\<Inside\>\""}], "]"}], ";", " ", "True"}], 
      ")"}]}], "]"}], ",", "Infinity"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8539554447529497`*^9, {3.8539569368398156`*^9, 3.8539569382132435`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6ee4d1e4-e71a-46ab-8248-6f386758f5f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Inside\"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.853959645144621*^9},ExpressionUUID->"8427c27c-155f-4614-b2fa-\
73a4ba71cf76"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Inside\"\>",
   "EchoLabel"], "  ", "2"}]], "Echo",
 CellChangeTimes->{
  3.8539596451626205`*^9},ExpressionUUID->"d537a9a8-46fc-47de-b197-\
98b1d1f14287"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.853955040228239*^9, 3.853955400336178*^9, 
  3.85395548438492*^9, 3.853955528727067*^9, 3.8539569448801203`*^9, 
  3.85395886788966*^9, 3.853959645175621*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"124339eb-4453-4b02-b72f-c7b02a15913d"]
}, Open  ]],

Cell[TextData[{
 "Once a value passes outside of ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e205707c-4934-45b2-8f9a-407cc75e15b1"],
 ", the binding corresponds to the AST node:"
}], "Text",
 CellChangeTimes->{{3.853955457883066*^9, 
  3.853955522600884*^9}},ExpressionUUID->"ec351da0-0b7b-4671-b576-\
1d35056f7932"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", 
   RowBox[{
    RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{"x", ",", "\"\<Outside\>\""}], "]"}], ";", " ", "True"}], 
     ")"}]}], ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539555333020544`*^9, 3.853955538170771*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"38c9771d-b12f-4356-8ad6-03728d6c2246"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Outside\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"CodeParser`LeafNode", "[", 
   RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"CodeParser`Source", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
    "]"}]}]], "Echo",
 CellChangeTimes->{
  3.8539596482685175`*^9},ExpressionUUID->"53be7eca-3802-418d-b6b3-\
a4ea323f7db3"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Outside\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"CodeParser`LeafNode", "[", 
   RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"CodeParser`Source", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
    "]"}]}]], "Echo",
 CellChangeTimes->{
  3.8539596482775173`*^9},ExpressionUUID->"d13384d4-a4f5-4648-8885-\
3134e08e46d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Integer", ",", "\<\"2\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8539555438600593`*^9, 3.8539569502950535`*^9, 
  3.8539588734691577`*^9, 3.853959648290517*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f4df1d8a-6311-46b2-8fe0-dde9f0bf6306"]
}, Open  ]],

Cell[TextData[{
 "Note that all instances of the pattern symbol appear below ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c9a1a250-f2a0-4ac1-8b73-adcc06824425"],
 " in this case:"
}], "Text",
 CellChangeTimes->{{3.8539556613015027`*^9, 
  3.853955679908372*^9}},ExpressionUUID->"4a8f0e1e-d375-48da-a27f-\
ccf9b01c21b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"x_Integer", "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{"x", ",", "\"\<Inside\>\""}], "]"}], ";", " ", "True"}], 
      ")"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539556534438133`*^9, 3.8539556551782837`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a764a5b9-56ea-4289-8096-ab6e997afde2"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.4683323874382121`, 4.1952353926806065`}, {
     1.4683323874382121`, 3.356188314144485}, {1.4683323874382121`, 
     2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
     0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
     0.8390470785361213, 0.}, {2.517141235608364, 1.6780941570722425`}, {
     2.0976176963403033`, 0.8390470785361215}, {1.6780941570722425`, 0.}, {
     2.517141235608364, 0.}, {2.9366647748764243`, 0.8390470785361215}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {2, 3}, {3, 4}, {3, 8}, {4, 5}, {4, 6}, {6, 7}, {8, 
        9}, {8, 12}, {9, 10}, {9, 11}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Hold", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"Hold", "[", 
            RowBox[{"ASTPattern", "[", 
              RowBox[{"x_Integer", "/;", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"Echo", "[", 
                    RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
                  ")"}]}], "]"}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Hold[
           $CellContext`ASTPattern[
            Condition[
             Pattern[$CellContext`x, 
              Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]]]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["ASTPattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{"ASTPattern", "[", 
            RowBox[{"x_Integer", "/;", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"Echo", "[", 
                    RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
                ")"}]}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`ASTPattern[
           Condition[
            Pattern[$CellContext`x, 
             Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Condition", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          RowBox[{"x_Integer", "/;", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"Echo", "[", 
                  RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
              ")"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Condition[
           Pattern[$CellContext`x, 
            Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Pattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["x_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Pattern[$CellContext`x, 
           Blank[Integer]]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Blank", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox["_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Blank[Integer]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["Integer",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["Integer", HoldForm]],
        Annotation[#, 
         HoldForm[Integer], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["CompoundExpression", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox[
          RowBox[{
            RowBox[{"Echo", "[", 
              RowBox[{"x", ",", "\"Inside\""}], "]"}], ";", "True"}], 
          HoldForm]],
        Annotation[#, 
         HoldForm[Echo[$CellContext`x, "Inside"]; True], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Echo", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox[
          RowBox[{"Echo", "[", 
            RowBox[{"x", ",", "\"Inside\""}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Echo[$CellContext`x, "Inside"]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["\<\"Inside\"\>",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["\"Inside\"", HoldForm]],
        Annotation[#, 
         HoldForm["Inside"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["True",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.032],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["True", HoldForm]],
        Annotation[#, 
         HoldForm[True], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.4683323874382121`, 4.1952353926806065`}, {
      1.4683323874382121`, 3.356188314144485}, {1.4683323874382121`, 
      2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
      0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
      0.8390470785361213, 0.}, {2.517141235608364, 1.6780941570722425`}, {
      2.0976176963403033`, 0.8390470785361215}, {1.6780941570722425`, 0.}, {
      2.517141235608364, 0.}, {2.9366647748764243`, 0.8390470785361215}}]& ],
   AspectRatio->NCache[Rational[2, 5] 3^Rational[1, 2], 0.6928203230275509],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[
   Hold[
    $CellContext`ASTPattern[
     Condition[
      Pattern[$CellContext`x, 
       Blank[Integer]], Echo[$CellContext`x, "Inside"]; True]]]],
  Editable->False]], "Output",
 CellChangeTimes->{3.853955752364499*^9, 3.85395695528798*^9, 
  3.853958917411629*^9, 3.853959651146524*^9},
 CellLabel->
  "Out[4]//TreeForm=",ExpressionUUID->"79622a84-0da6-462d-9c1c-fd74e5a56cd3"]
}, Open  ]],

Cell[TextData[{
 "In this case, there is an ",
 Cell[BoxData["x"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "645030fa-e838-4109-82eb-72914fab2daf"],
 " that's \"lifted\" out of the ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e22296de-58e3-4872-a832-ea8be5a455c6"],
 ", which is why it appears as an AST node:"
}], "Text",
 CellChangeTimes->{{3.853955688153039*^9, 3.8539557261836367`*^9}, {
  3.853958929081952*^9, 
  3.853958934032545*^9}},ExpressionUUID->"86791e33-3838-4c69-be95-\
c227481578f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{"x", ",", "\"\<Outside\>\""}], "]"}], ";", " ", "True"}], 
     ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8539555670230784`*^9, 3.853955613470399*^9}, 
   3.853955685041553*^9, {3.8539557331242*^9, 3.853955735878713*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e3cce0bb-6b4a-438d-a6a8-7d73ba32f9fd"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.4683323874382121`, 4.1952353926806065`}, {
     1.4683323874382121`, 3.356188314144485}, {0.41952353926806063`, 
     2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
     0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
     0.8390470785361213, 0.}, {2.517141235608364, 2.517141235608364}, {
     2.0976176963403033`, 1.6780941570722425`}, {1.6780941570722425`, 
     0.8390470785361215}, {2.517141235608364, 0.8390470785361215}, {
     2.9366647748764243`, 1.6780941570722425`}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {2, 3}, {2, 8}, {3, 4}, {4, 5}, {4, 6}, {6, 7}, {8, 
        9}, {8, 12}, {9, 10}, {9, 11}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Hold", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{"Hold", "[", 
            RowBox[{
              RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"Echo", "[", 
                    RowBox[{"x", ",", "\"Outside\""}], "]"}], ";", "True"}], 
                ")"}]}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Hold[
           Condition[
            $CellContext`ASTPattern[
             Pattern[$CellContext`x, 
              Blank[Integer]]], Echo[$CellContext`x, "Outside"]; True]]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Condition", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{
            RowBox[{"ASTPattern", "[", "x_Integer", "]"}], "/;", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"Echo", "[", 
                  RowBox[{"x", ",", "\"Outside\""}], "]"}], ";", "True"}], 
              ")"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Condition[
           $CellContext`ASTPattern[
            Pattern[$CellContext`x, 
             Blank[Integer]]], Echo[$CellContext`x, "Outside"]; True]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["ASTPattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          RowBox[{"ASTPattern", "[", "x_Integer", "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          $CellContext`ASTPattern[
           Pattern[$CellContext`x, 
            Blank[Integer]]]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Pattern", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["x_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Pattern[$CellContext`x, 
           Blank[Integer]]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Blank", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox["_Integer", HoldForm]],
        Annotation[#, 
         HoldForm[
          Blank[Integer]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["Integer",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["Integer", HoldForm]],
        Annotation[#, 
         HoldForm[Integer], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["CompoundExpression", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox[
          RowBox[{
            RowBox[{"Echo", "[", 
              RowBox[{"x", ",", "\"Outside\""}], "]"}], ";", "True"}], 
          HoldForm]],
        Annotation[#, 
         HoldForm[Echo[$CellContext`x, "Outside"]; True], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Echo", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox[
          RowBox[{"Echo", "[", 
            RowBox[{"x", ",", "\"Outside\""}], "]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Echo[$CellContext`x, "Outside"]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["x",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox["x", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`x], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["\<\"Outside\"\>",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["\"Outside\"", HoldForm]],
        Annotation[#, 
         HoldForm["Outside"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["True",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.02857142857142857],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox["True", HoldForm]],
        Annotation[#, 
         HoldForm[True], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.4683323874382121`, 4.1952353926806065`}, {
      1.4683323874382121`, 3.356188314144485}, {0.41952353926806063`, 
      2.517141235608364}, {0.41952353926806063`, 1.6780941570722425`}, {0., 
      0.8390470785361215}, {0.8390470785361213, 0.8390470785361215}, {
      0.8390470785361213, 0.}, {2.517141235608364, 2.517141235608364}, {
      2.0976176963403033`, 1.6780941570722425`}, {1.6780941570722425`, 
      0.8390470785361215}, {2.517141235608364, 0.8390470785361215}, {
      2.9366647748764243`, 1.6780941570722425`}}]& ],
   AspectRatio->NCache[Rational[3, 7]^Rational[1, 2], 0.6546536707079771],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[
   Hold[
    Condition[
     $CellContext`ASTPattern[
      Pattern[$CellContext`x, 
       Blank[Integer]]], Echo[$CellContext`x, "Outside"]; True]]],
  Editable->False]], "Output",
 CellChangeTimes->{3.8539557524005013`*^9, 3.8539569582276697`*^9, 
  3.853958923188289*^9, 3.8539596545191813`*^9},
 CellLabel->
  "Out[5]//TreeForm=",ExpressionUUID->"b61015ee-83c4-4d28-b02d-4da1695c5618"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 CellLabel->"In[6]:=",ExpressionUUID->"603ab048-f01d-4c0b-af88-9281dfd4f7a4"],

Cell[TextData[{
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "847c937a-8fc6-4854-9d5c-6cdb1f1f4c43"],
 " cannot generalize to all possible WL patterns:"
}], "Text",
 CellChangeTimes->{{3.853955772288334*^9, 
  3.8539557880635443`*^9}},ExpressionUUID->"3c7049a9-d4fb-4894-910e-\
e360e4d6ecc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ast", "=", 
  RowBox[{
  "CodeParser`CodeParse", "[", "\"\<{f[1],f[1],f[1]}\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8539558115138683`*^9, 3.8539558345682545`*^9}, {
  3.8539569635848813`*^9, 3.853956965481393*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5007a8ec-5954-4fca-9ea1-0cc900ba7002"],

Cell[BoxData[
 RowBox[{"CodeParser`ContainerNode", "[", 
  RowBox[{"String", ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", "\<\"List\"\>", ",", 
        RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CodeParser`CallNode", "[", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{"CodeParser`Source", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], 
              "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`CallNode", "[", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "7"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{"CodeParser`Source", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "9"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}], 
              "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "7"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "11"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`CallNode", "[", 
         RowBox[{
          RowBox[{"CodeParser`LeafNode", "[", 
           RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{"CodeParser`Source", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "12"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "13"}], "}"}]}], "}"}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"CodeParser`LeafNode", "[", 
            RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{"CodeParser`Source", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "14"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "15"}], "}"}]}], "}"}]}], 
              "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "16"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "17"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.853955836753396*^9, 3.853955944047716*^9, 
  3.8539569670245795`*^9, 3.8539589433164005`*^9, 3.853959660220187*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4cafaec6-8742-4843-813a-ac1221e6ed31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "a_", "]"}], ".."}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.853955791945881*^9, 3.8539558064897375`*^9}, {
  3.8539558443030844`*^9, 3.8539558480479774`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"394f39ab-3bca-4a2a-9abc-cf21603e483a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8539558512570047`*^9, 3.8539559440627174`*^9, 
  3.853956970997777*^9, 3.853958944747585*^9, 3.8539596662422256`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f4644c81-185f-4e67-b75a-8e2bb6d86e5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "a_", "]"}], ".."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8539558545762873`*^9, 3.853955865785961*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b10baf8f-b602-47ac-93be-d0973def68b4"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.853955866865613*^9, 3.8539559440677147`*^9, 
  3.8539569740495872`*^9, 3.853958945453696*^9, 3.8539596675674753`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ac35c1b9-ed61-46de-ad9e-6750d581ef2c"]
}, Open  ]],

Cell["\<\
In this case, the pattern binding prevents matching, since the metadata will \
always be different between nodes:\
\>", "Text",
 CellChangeTimes->{{3.853955912733098*^9, 
  3.8539559370605717`*^9}},ExpressionUUID->"56b787d4-6cbc-44ae-92d1-\
df6d00148c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "_", "]"}], ".."}], "}"}], "]"}], ",", "Infinity"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8539559520863523`*^9, 3.8539559896767645`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"7bccfc90-fade-442a-8858-7267d895a09e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CodeParser`CallNode", "[", 
   RowBox[{
    RowBox[{"CodeParser`LeafNode", "[", 
     RowBox[{"Symbol", ",", "\<\"List\"\>", ",", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{"CodeParser`Source", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "4"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], 
            "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], 
         "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "7"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{"CodeParser`Source", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "9"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}], 
            "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "11"}], "}"}]}], "}"}]}], 
         "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"CodeParser`CallNode", "[", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "13"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"CodeParser`LeafNode", "[", 
          RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{"CodeParser`Source", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "14"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "15"}], "}"}]}], "}"}]}], 
            "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{"CodeParser`Source", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "12"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "16"}], "}"}]}], "}"}]}], 
         "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"CodeParser`Source", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "17"}], "}"}]}], "}"}]}], 
     "\[RightAssociation]"}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{{3.853955956329247*^9, 3.853955991195162*^9}, 
   3.853956982784605*^9, 3.8539589473975425`*^9, 3.853959673463917*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5bb6a45a-eada-4d1c-bfd0-05593d735c46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "All", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853956007230383*^9, 3.853956020763901*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"442f59c7-3787-4595-9926-8c1f20017962"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}]}], "}"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "16"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.853956022912642*^9, 3.853956985443907*^9, 
  3.8539589490988584`*^9, 3.853959676067833*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"39fbf998-ba63-4f26-bf76-f21904600be8"]
}, Open  ]],

Cell["Without any repeated binding this pattern will match:", "Text",
 CellChangeTimes->{{3.8539560565122814`*^9, 
  3.8539560746940227`*^9}},ExpressionUUID->"65818f0c-004f-48f8-a7a3-\
523df5552545"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{"ast", ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "_", "]"}], ".."}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.853955898685937*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"427fe742-00df-4e4d-a86c-e9665cb2ffdd"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.853955903236388*^9, 3.8539569981146793`*^9, 
  3.853958950778644*^9, 3.853959678185835*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d5f7d4c5-0757-4b22-b43a-25163a242f02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c7e54f85-cac7-4670-8df7-8d3e108a031e"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"20d75605-8335-4a1c-8d56-\
0880b0ee1124"],

Cell[TextData[{
 "Not all raw patterns are supported by ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1d28096a-cc3c-4df6-9235-bed04cb4aa9f"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8540160449418507`*^9, 
  3.854016058480034*^9}},ExpressionUUID->"83097512-1afe-4e2c-ac76-\
e22ca1d8c701"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"node", "=", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<f[x -> 1]\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.854015093072421*^9, 3.8540150991523137`*^9}, {
  3.854016005925674*^9, 3.8540160123474445`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3345df94-fad4-437d-9a2c-d77969a5d179"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", "\<\"f\"\>", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"CodeParser`Source", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], 
      "\[RightAssociation]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", "\<\"Rule\"\>", ",", 
        RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Symbol", ",", "\<\"x\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}], ",", 
        RowBox[{"CodeParser`LeafNode", "[", 
         RowBox[{"Integer", ",", "\<\"1\"\>", ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{"CodeParser`Source", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "9"}], "}"}]}], "}"}]}], 
           "\[RightAssociation]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{"CodeParser`Source", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "9"}], "}"}]}], "}"}]}], 
       "\[RightAssociation]"}]}], "]"}], "}"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"CodeParser`Source", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{{3.8540150959089613`*^9, 3.8540150997174363`*^9}, 
   3.8540151978130364`*^9, 3.854015374400508*^9, 3.8540160153689394`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"27fd3d11-74df-4ef0-a23b-ec12cde350f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"f", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.854015500978978*^9, 3.8540155054466085`*^9}, {
  3.8540160200964956`*^9, 3.854016020561495*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6d01e854-4752-41cf-a5e2-8777e1d10823"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"f\"\>", "|", "\<\"Global`f\"\>"}], ",", "_"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"CodeParser`CallNode", "[", 
     RowBox[{
      RowBox[{"CodeParser`LeafNode", "[", 
       RowBox[{"Symbol", ",", 
        RowBox[{"\<\"OptionsPattern\"\>", 
         "|", "\<\"System`OptionsPattern\"\>"}], ",", "_"}], "]"}], ",", 
      RowBox[{"{", "}"}], ",", "_"}], "]"}], "}"}], ",", "_"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8540155064278793`*^9, 3.854015989858686*^9, 
  3.854016021126541*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"859847b6-889b-4b37-8b78-11462e4b6bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"node", ",", "patt"}], "]"}]], "Input",
 CellChangeTimes->{{3.854016022238611*^9, 3.854016024901718*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a3ac96c2-eda1-4ea4-b5ac-b12db4497437"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.854016025301757*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c4459fff-abd1-4b38-9fcf-c6fc13a7b2d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", "->", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8540160622140045`*^9, 3.854016071587333*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c9f061a5-4da5-41b0-a117-f2fb3b6c1697"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8540160721123304`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"bbfd06cc-3acb-45df-a56a-45daac65f77c"]
}, Open  ]],

Cell["Unsupported patterns are represented verbatim:", "Text",
 CellChangeTimes->{{3.854016091573642*^9, 
  3.854016105076605*^9}},ExpressionUUID->"be9eac6c-4f53-4082-8636-\
297aff741118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CodeParser`CodeParse", "[", "\"\<f[OptionsPattern[]]\>\"", "]"}],
     "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "patt"}], "]"}]], "Input",
 CellChangeTimes->{{3.854016111491602*^9, 3.85401612128329*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"1adb7e31-dba4-4d24-a6a6-44c8524ae765"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854016122172269*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a52d9750-d592-4ac2-a335-615c0683e927"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ",", 
   RowBox[{"Verbatim", "[", 
    RowBox[{"f", "[", 
     RowBox[{"OptionsPattern", "[", "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.854016133023932*^9, 3.8540161420683856`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"6481c50a-9d74-425e-95c0-cd124940cda0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854016144769384*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ddf229f0-d91a-497c-b9c9-e90935044305"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "98735427-93f2-49d4-a2db-951acdaef77a"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"c0c5f12e-d634-4025-9e03-\
23a55ea0302a"],

Cell[TextData[{
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b1392247-f440-4703-9833-5814902113e9"],
 " ignores the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Unevaluated", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Unevaluated",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3e2691b8-007c-4512-9cca-659f656b094d"],
 " wrapper:"
}], "Text",
 CellChangeTimes->{{3.85401950915475*^9, 
  3.854019523350342*^9}},ExpressionUUID->"f5ea5687-1593-4450-abac-\
1be8116dd6f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"Unevaluated", "[", 
    RowBox[{"1", "+", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8540195393179135`*^9, 3.8540195404170427`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3fbb60d6-ac4b-4cc0-a6b1-afbb3532ed1a"],

Cell[BoxData[
 RowBox[{"CodeParser`LeafNode", "[", 
  RowBox[{"Integer", ",", "\<\"2\"\>", ",", "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854019542339035*^9, 3.8540195738786497`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c6b73e01-b8f6-4afa-bcc7-8a317cde83cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<Hold[1+1]\>\"", "]"}], ",", 
   "patt"}], "]"}]], "Input",
 CellChangeTimes->{{3.8540194754367037`*^9, 3.854019490399214*^9}, {
  3.854019536991079*^9, 3.854019538156666*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2efabf70-17ed-4ecb-8a91-69ec38abaf91"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8540194929926453`*^9, {3.8540195449777083`*^9, 3.854019573896648*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"0428917e-5754-4b8e-8c9c-f18aa66d42cf"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "76ad078e-190e-4a90-ae31-78f62617fef9"],
 " instead:"
}], "Text",
 CellChangeTimes->{{3.854019562535185*^9, 
  3.8540195684798803`*^9}},ExpressionUUID->"cbcf5d03-862b-4d72-9d03-\
f1e9e77416d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patt", "=", 
  RowBox[{"ASTPattern", "[", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"1", "+", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8540194067412553`*^9, 3.8540194083073816`*^9}, 
   3.854019560353941*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"d71d7687-122c-49d3-8f2e-823282a6286f"],

Cell[BoxData[
 RowBox[{"CodeParser`CallNode", "[", 
  RowBox[{
   RowBox[{"CodeParser`LeafNode", "[", 
    RowBox[{"Symbol", ",", 
     RowBox[{"\<\"Plus\"\>", "|", "\<\"System`Plus\"\>"}], ",", "_"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}], ",", 
     RowBox[{"CodeParser`LeafNode", "[", 
      RowBox[{"Integer", ",", "\<\"1\"\>", ",", "_"}], "]"}]}], "}"}], ",", 
   "_"}], "]"}]], "Output",
 CellChangeTimes->{3.854019573914648*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"334079ff-04b2-4648-ab91-92563a7752e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{
   RowBox[{"CodeParser`CodeParse", "[", "\"\<Hold[1+1]\>\"", "]"}], ",", 
   "patt"}], "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"85515f6b-c1bc-4049-9518-ce9a65594e96"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8540195809297743`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"dfc0335d-c5d8-4d53-9ab8-7cc6e3b75356"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "247612ec-f903-4abc-8e03-b26b10a01e27"],
  $Line = 0; 
  Null]], "ExampleDelimiter",ExpressionUUID->"157224c2-1c17-471e-98fd-\
38ef1476e154"],

Cell[TextData[{
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1c2d8c5e-2a2b-42fb-b85d-11fbc40b3ffa"],
 " must evaluate in order to create the desired pattern, so it should not be \
wrapped in ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d7eb6016-95cf-4d9b-85e6-57aefe907b73"],
 ":"
}], "Text",
 CellChangeTimes->{{3.854017972656559*^9, 3.8540179991242313`*^9}, {
  3.8540180483156347`*^9, 
  3.8540180569669523`*^9}},ExpressionUUID->"da4215f7-8e6c-433a-adce-\
4b5906da4976"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"ASTPattern", "[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.854018007713357*^9, 3.8540180325883017`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ecf4e305-d988-4761-ad8a-b01dc5bf78d6"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8540180386581163`*^9, 3.854019163505314*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f739983a-0691-4ed4-a1ba-ab0c601cb833"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["HoldPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/HoldPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c6f47504-eaa2-4196-b7e8-95073dd74673"],
 " within ",
 Cell[BoxData["ASTPattern"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "eae91331-a539-4b73-96c2-260cd3441697"],
 " instead:"
}], "Text",
 CellChangeTimes->{{3.8540180721983604`*^9, 
  3.854018084410285*^9}},ExpressionUUID->"e6004603-17ae-42d9-9efd-\
0e4d44efe791"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CodeParser`CodeParse", "[", "\"\<1+1\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"ASTPattern", "[", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8540180640248137`*^9, 3.854018069937374*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cba818f3-ec17-481d-9fbe-b2f54145fee8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.854018091626161*^9, 3.854019166265072*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"471c2bac-b1e4-4a63-8aba-96c344d6b667"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Neat Examples", \
"Subsection",ExpressionUUID->"8f1aa6bc-97db-4ac6-b9d5-a8cd80db7224"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"e6be684c-8932-446a-8a37-83fb1b4fbab6"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e162db07-bc2d-45ac-9fdd-d75ddd2d95b7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->771147648,ExpressionUUID->"eec1de11-6741-4f4b-8149-10cf0ec62a43"],

Cell["Richard Hennigan (Wolfram Research)", \
"Text",ExpressionUUID->"fccdb183-0ee8-4a48-b62e-ae68fd428ed4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4842a692-18c3-4847-bf5d-dd12f1985515"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->854882061,ExpressionUUID->"28395e18-8213-4c63-bafb-7d1b81b49486"],

Cell["code parser", \
"Item",ExpressionUUID->"0c1f001e-6de0-4ffb-b04c-7d1a292b47c3"],

Cell["ast", "Item",ExpressionUUID->"31a29e24-15a6-4785-abe6-d6fc70eec63b"],

Cell["ast matching", \
"Item",ExpressionUUID->"c7e329a5-266f-4f87-968e-fdaf12d5c040"],

Cell["code search", \
"Item",ExpressionUUID->"6232e8d7-8251-45ad-809c-5a8cf4aefa71"],

Cell["parsing", "Item",ExpressionUUID->"30414fc1-b523-4bda-a948-3b3dfca36c9e"],

Cell["metaprogramming", \
"Item",ExpressionUUID->"3b71ec88-7c27-4805-af6f-7536666e0e7d"],

Cell["static analysis", \
"Item",ExpressionUUID->"c66ff7a2-f0a2-491f-baf1-9a7a750bc9fb"],

Cell["syntax", "Item",ExpressionUUID->"5665c7b7-cf48-46e3-b2dd-17e0b948d661"],

Cell["patterns", \
"Item",ExpressionUUID->"7e96f640-28eb-4280-9254-e7bc933119d3"],

Cell["code cases", \
"Item",ExpressionUUID->"b755f16f-ffd4-495b-9de5-620f9ffe69bb"],

Cell["file cases", \
"Item",ExpressionUUID->"797b1afc-dd92-45a8-9151-723209db4205"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"9e4e111d-2daa-421a-8a9f-6dc42a68cdca"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "3D Visualization"}], "\" \"", 
        "\"3D Visualization\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Accessibility"}], "\" \"", 
        "\"Accessibility\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Array Manipulation"}], "\" \"", 
        "\"Array Manipulation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
        "\"Cloud & Deployment\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        "Core Language & Structure", {False, "Core Language & Structure"}], 
        "\" \"", "\"Core Language & Structure\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Data Manipulation & Analysis"}], "\" \"", 
        "\"Data Manipulation & Analysis\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Engineering Data & Computation"}], 
        "\" \"", "\"Engineering Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "External Interfaces & Connections"}], 
        "\" \"", "\"External Interfaces & Connections\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Financial Data & Computation"}], "\" \"", 
        "\"Financial Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Geographic Data & Computation"}], "\" \"",
         "\"Geographic Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
        "\"Graphs & Networks\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
        "\" \"", "\"Higher Mathematical Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
        "\"Just For Fun\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        False, {False, "Knowledge Representation & Natural Language"}], 
        "\" \"", "\"Knowledge Representation & Natural Language\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
        "\"Machine Learning\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
        "\" \"", "\"Notebook Documents & Presentation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        "Programming Utilities", {False, "Programming Utilities"}], "\" \"", 
        "\"Programming Utilities\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Repository Tools"}], "\" \"", 
        "\"Repository Tools\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        False, {False, "Scientific and Medical Data & Computation"}], "\" \"",
         "\"Scientific and Medical Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
        "\" \"", "\"Social, Cultural & Linguistic Data\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
        "\"Sound & Video\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
        "\"Strings & Text\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
        "\" \"", "\"Symbolic & Numeric Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
        "\"System Operation & Setup\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
        "\"Time-Related Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "User Interface Construction"}], "\" \"", 
        "\"User Interface Construction\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
        "\"Visualization & Graphics\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
        "\"Wolfram Physics Project\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVj8tKA0EQRUGMmZHgzoW7WbmbjxgmCQQCCSn9gE6n0jbpF/VYzN+\
nR1B0VQX3UKfu0PSwAJkCwtNBpaj0sBy/\
0N7wcn3gx71ngbcxE3Z7k5wah917B0JqRQnh9UjZkYnRJ9d9ig9ePHK9uROMzO2gkqMRb3toKlqQZI\
Ln0Qi6TN/k8lDE58Q/tnmeNCA3m4sXc67bYmsC42/QrjHg32R+OQeN6b/\
wZZcEqVBlZwO0Q5pAz4y14+qEnJUsfkwFodlqsjNzB3BDXts="},
 CellTags->{
  "Categories", "Categories-Checkboxes", 
   "CheckboxCell"},ExpressionUUID->"20a3205b-3bf3-4a28-aba0-9655b01ee36f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "efb54d91-232b-4182-b9fb-4d5e83fcc9dc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Symbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->525877127,ExpressionUUID->"9125b097-b1c8-4bc7-987f-c3d1432e6508"],

Cell["MatchQ", "Item",ExpressionUUID->"c9899768-5e89-4851-9a9a-2a064b5bd188"],

Cell["Cases", "Item",ExpressionUUID->"f60282b7-877f-4856-be5b-16122a2920d2"],

Cell["Condition", \
"Item",ExpressionUUID->"0e2efed8-fe99-4783-a3fd-533299380228"],

Cell["PatternTest", \
"Item",ExpressionUUID->"ed82cdf6-3166-4185-9dbf-9c5532564345"],

Cell["Pattern", "Item",ExpressionUUID->"93ced225-7b30-4e13-a287-dca071613f56"],

Cell["Verbatim", \
"Item",ExpressionUUID->"716d71c2-dcbd-4f85-ba37-8fc50801fd42"],

Cell["HoldPattern", \
"Item",ExpressionUUID->"7eb666d0-0ccd-4535-a82d-8205816cedec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dea2d3d7-3980-47ea-9ad9-888a203c9e89"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->869341850,ExpressionUUID->"0e09bdc5-3866-4bdf-809c-b594ec805b4b"],

Cell["GetKeyValuePattern", \
"Item",ExpressionUUID->"4ac0aa4c-7b59-47d1-9f2d-9a2b4c2f5f6e"],

Cell["PatternSort", \
"Item",ExpressionUUID->"565b603e-c2e1-4099-9428-2c2ba9e4a619"],

Cell["PatternBindings", \
"Item",ExpressionUUID->"471ff3be-d7b1-43fa-95db-6d1415569795"],

Cell["PositionCases", \
"Item",ExpressionUUID->"7d69540b-6034-4ab0-86e2-b3a86b3663d4"],

Cell["PrintDefinitionCases", \
"Item",ExpressionUUID->"e92fd7da-40b3-4238-ab6f-67bec7005a14"],

Cell["SymbolCases", \
"Item",ExpressionUUID->"47afa193-1f59-47d3-b592-752a5bfcbddd"],

Cell["PossibleNameQ", \
"Item",ExpressionUUID->"df959b8b-45a1-4a90-bae9-c4967f81c75f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3e1a1ade-e8f1-46e4-8a00-a9369983144c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->788767010,ExpressionUUID->"bbfc1ec4-8142-42fa-9456-8e436f82138f"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"c4493f9d-76ea-4990-ae3f-81cf1f0646f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cf217c38-db1f-42ab-ada1-356dd0df56a1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->341958311,ExpressionUUID->"54a6ccb8-c7ad-4cbb-99f5-a2740187597a"],

Cell[TextData[ButtonBox["ASTPattern | rhennigan/ResourceFunctions | GitHub",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/rhennigan/ResourceFunctions/tree/main/Definitions/\
ASTPattern"], None},
 ButtonNote->
  "https://github.com/rhennigan/ResourceFunctions/tree/main/Definitions/\
ASTPattern"]], "Item",ExpressionUUID->"68165606-a37a-40c9-a099-3681e4492fb6"],

Cell[TextData[ButtonBox["CodeParse | Wolfram Language Documentation",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://reference.wolfram.com/language/CodeParser/ref/CodeParse.html"]\
, None},
 ButtonNote->
  "https://reference.wolfram.com/language/CodeParser/ref/CodeParse.html"]], \
"Item",ExpressionUUID->"dcf94aff-6b01-4f0b-a4c3-21321a5fe57e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4b7afd84-2d6e-4e20-a3f8-5ed07fa0bd0e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "VerificationTests"},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->187055128,ExpressionUUID->"9925fe66-1285-4c8e-aef0-5b2894e6a0f7"],

Cell[CellGroupData[{

Cell["Initialization", \
"Subsubsection",ExpressionUUID->"9a1f4415-b520-403f-8dbb-fc32e65eff75"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"SetOptions", "[", " ", 
    RowBox[{
     RowBox[{
     "ResourceFunction", "[", " ", "\"\<MessageFailure\>\"", " ", "]"}], ",", 
     " ", 
     RowBox[{"\"\<TestMode\>\"", " ", "->", " ", "True"}]}], " ", "]"}], ",", 
   "\n", "    ", 
   RowBox[{"KeyValuePattern", "[", " ", 
    RowBox[{"\"\<TestMode\>\"", " ", "->", " ", "True"}], " ", "]"}], ",", 
   "\n", "    ", 
   RowBox[{"SameTest", " ", "->", " ", "MatchQ"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Set-MessageFailure-TestMode@@Definitions/ASTPattern/Tests.wlt:4,1-9,\
2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"9293360d-2a85-4510-b4e7-e131db068bc2"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Needs", "[", " ", "\"\<CodeParser`\>\"", " ", "]"}], ",", "\n", 
   "    ", "Null", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Initialize-Needs-CodeParser@@Definitions/ASTPattern/Tests.wlt:11,1-\
15,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"a979505f-0c24-4b00-bc7d-7b4ba6b2af4e"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"setDef", " ", "//", " ", "Attributes"}], " ", "=", " ", 
     RowBox[{"{", " ", "HoldFirst", " ", "}"}]}], ";", "\n", "    ", 
    RowBox[{
     RowBox[{"setDef", "[", " ", "sym_Symbol", " ", "]"}], " ", ":=", "\n", 
     "        ", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Context", " ", "@", " ", "sym"}], " ", "=!=", " ", 
        RowBox[{"Context", " ", "@", " ", "ASTPattern"}]}], ",", "\n", 
       "            ", 
       RowBox[{
        RowBox[{"sym", " ", "=", " ", 
         RowBox[{"Symbol", " ", "@", " ", 
          RowBox[{"StringJoin", "[", "\n", "                      ", 
           RowBox[{
            RowBox[{"Context", " ", "@", " ", "ASTPattern"}], ",", "\n", 
            "                      ", 
            RowBox[{"SymbolName", " ", "@", " ", 
             RowBox[{"Unevaluated", " ", "@", " ", "sym"}]}]}], "\n", 
           "                  ", "]"}]}]}], ";", "\n", "            ", 
        RowBox[{
         RowBox[{"HoldPattern", "[", " ", "sym", " ", "]"}], " ", "->", " ", 
         "sym"}]}], ",", "\n", "            ", "Nothing"}], "\n", "        ", 
      "]"}]}]}], ",", "\n", "    ", "Null", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<RF-Context-Helper-Definition@@Definitions/ASTPattern/Tests.wlt:17,1-\
30,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"c5aed91a-80de-4139-9873-2595e8398422"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"setDef", " ", "/@", " ", 
    RowBox[{"{", " ", 
     RowBox[{"FromAST", ",", " ", "EquivalentNodeQ"}], " ", "}"}]}], ",", 
   "\n", "    ", 
   RowBox[{
    RowBox[{"{", " ", "}"}], "|", 
    RowBox[{"{", " ", 
     RowBox[{"_Rule", ",", " ", "_Rule"}], " ", "}"}]}], ",", "\n", "    ", 
   RowBox[{"SameTest", " ", "->", " ", "MatchQ"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<RF-Context-Helper-Set@@Definitions/ASTPattern/Tests.wlt:32,1-37,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"6f0424f4-1240-48c7-b767-d4e8c9ec49cc"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"testParse", " ", "//", " ", "Attributes"}], " ", "=", " ", 
     RowBox[{"{", " ", "HoldRest", " ", "}"}]}], ";", "\n", "\n", "    ", 
    RowBox[{
     RowBox[{"testParse", "[", " ", "str_", " ", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CodeParse", " ", "@", " ", "str"}], ")"}], "[", 
      RowBox[{"[", " ", 
       RowBox[{"2", ",", " ", "1"}], " ", "]"}], "]"}]}], ";", "\n", "\n", 
    "    ", 
    RowBox[{
     RowBox[{"testParse", "[", " ", 
      RowBox[{"str_", ",", " ", "patt_"}], " ", "]"}], " ", ":=", "\n", 
     "        ", 
     RowBox[{"MatchQ", "[", " ", 
      RowBox[{
       RowBox[{"testParse", " ", "@", " ", "str"}], ",", " ", 
       RowBox[{"ASTPattern", " ", "@", " ", 
        RowBox[{"HoldPattern", " ", "@", " ", "patt"}]}]}], " ", "]"}]}], 
    ";"}], "\n", "    ", ",", "\n", "    ", "Null", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Definition@@Definitions/ASTPattern/Tests.wlt:39,1-49,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"2c4de54e-4f07-44eb-9cc8-56e2e1914041"],

Cell[CellGroupData[{

Cell["Context Check", \
"Subsubsubsection",ExpressionUUID->"cec0a6f4-9098-4ee7-922c-194023f91af9"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Context", " ", "@", " ", "CodeParse"}], ",", "\n", "    ", 
   "\"\<CodeParser`\>\"", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Context-CodeParse@@Definitions/ASTPattern/Tests.wlt:54,1-58,2\>\""}]}\
], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"9a6180d0-9c50-43f8-85cb-be91a5001ab8"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Context", " ", "@", " ", "LeafNode"}], ",", "\n", "    ", 
   "\"\<CodeParser`\>\"", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Context-LeafNode@@Definitions/ASTPattern/Tests.wlt:60,1-64,2\>\""}]}]\
, "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"e0204e73-0423-438e-8733-e6fae127970b"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Context", " ", "@", " ", "CallNode"}], ",", "\n", "    ", 
   "\"\<CodeParser`\>\"", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Context-CallNode@@Definitions/ASTPattern/Tests.wlt:66,1-70,2\>\""}]}]\
, "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"6e9cdffa-78ec-4cec-93a2-65e9021d7da8"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Context", " ", "@", " ", "Source"}], ",", "\n", "    ", 
   "\"\<CodeParser`\>\"", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Context-Source@@Definitions/ASTPattern/Tests.wlt:72,1-76,2\>\""}]}], 
  "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"5e2b816a-9626-462d-b62a-28284f24ed70"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ASTPattern", \
"Subsubsection",ExpressionUUID->"e02de490-617e-4ea9-a496-e8477ce2f6da"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", "[", " ", "_Integer", " ", "]"}], ",", "\n", "    ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CallNode", " ", "|", " ", "LeafNode"}], ")"}], "[", "\n", 
    "        ", 
    RowBox[{
     RowBox[{"Integer", " ", "|", " ", 
      RowBox[{"LeafNode", "[", " ", 
       RowBox[{"Symbol", ",", " ", 
        RowBox[{"\"\<Integer\>\"", " ", "|", " ", "\"\<System`Integer\>\""}], 
        ",", " ", "_"}], " ", "]"}]}], ",", "\n", "        ", "_", ",", "\n", 
     "        ", "_"}], "\n", "    ", "]"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Leaf-Call@@Definitions/ASTPattern/Tests.wlt:81,1-89,2\>\""}]}], "\n",
   "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"4985d0b2-670e-44c0-919b-3e16aec421a6"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", "[", " ", 
    RowBox[{"_Integer", "?", " ", "IntegerQ"}], " ", "]"}], ",", "\n", "    ", 
   RowBox[{"LeafNode", "[", " ", 
    RowBox[{"Integer", ",", " ", "_", ",", " ", "_"}], " ", "]"}], ",", "\n", 
   "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Leaf-PatternTest@@Definitions/ASTPattern/Tests.wlt:91,1-95,2\>\""}]}]\
, "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"11567f68-49f8-4cc6-bdfd-e052e6b3caaf"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", " ", "@", " ", "x"}], ",", "\n", "    ", 
   RowBox[{"LeafNode", "[", " ", 
    RowBox[{"Symbol", ",", " ", 
     RowBox[{"\"\<x\>\"", " ", "|", " ", 
      RowBox[{
       RowBox[{"Context", " ", "@", " ", "x"}], " ", "<>", " ", 
       "\"\<x\>\""}]}], ",", " ", "_"}], " ", "]"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Leaf-Symbol@@Definitions/ASTPattern/Tests.wlt:97,1-101,2\>\""}]}], 
  "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"4bac88eb-a01c-49dc-b92c-c990a8fefb8c"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", " ", "@", " ", 
    RowBox[{"HoldPattern", " ", "@", " ", 
     RowBox[{"Identity", "[", " ", "_", " ", "]"}]}]}], ",", "\n", "    ", 
   RowBox[{"CallNode", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"LeafNode", "[", " ", 
      RowBox[{"Symbol", ",", " ", 
       RowBox[{"\"\<Identity\>\"", " ", "|", " ", "\"\<System`Identity\>\""}],
        ",", " ", "_"}], " ", "]"}], ",", "\n", "        ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CallNode", "|", "LeafNode"}], ")"}], "[", " ", 
       RowBox[{"_", ",", " ", "_", ",", " ", "_"}], " ", "]"}], " ", "}"}], 
     ",", "\n", "        ", "_"}], "\n", "    ", "]"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<HoldPattern@@Definitions/ASTPattern/Tests.wlt:103,1-111,2\>\""}]}], 
  "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"be56858c-e333-49a6-9177-e3f50c148e55"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", " ", "@", " ", 
    RowBox[{"f", "[", " ", 
     RowBox[{
      RowBox[{"ASTPattern", "[", " ", "_", " ", "]"}], ",", " ", 
      RowBox[{"ASTPattern", "[", " ", "_", " ", "]"}]}], " ", "]"}]}], ",", 
   "\n", "    ", 
   RowBox[{"ASTPattern", " ", "@", " ", 
    RowBox[{"f", "[", " ", 
     RowBox[{"_", ",", " ", "_"}], " ", "]"}]}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Invisible-Nested@@Definitions/ASTPattern/Tests.wlt:113,1-117,2\>\""}]\
}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"e3527375-e2f6-4388-92fd-f55c9bedc658"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", "[", " ", 
    RowBox[{
     RowBox[{"f", "[", " ", 
      RowBox[{
       RowBox[{"ASTPattern", "[", " ", 
        RowBox[{"_", ",", " ", "a_"}], " ", "]"}], ",", " ", 
       RowBox[{"ASTPattern", "[", " ", 
        RowBox[{"_", ",", " ", "b_"}], " ", "]"}]}], " ", "]"}], ",", " ", 
     "c_"}], " ", "]"}], ",", "\n", "    ", 
   RowBox[{"CodeParser`CallNode", "[", "\n", "        ", 
    RowBox[{
     RowBox[{"CodeParser`LeafNode", "[", " ", 
      RowBox[{"Symbol", ",", " ", 
       RowBox[{"\"\<f\>\"", " ", "|", " ", 
        RowBox[{
         RowBox[{"Context", " ", "@", " ", "f"}], " ", "<>", " ", 
         "\"\<f\>\""}]}], ",", " ", "_"}], " ", "]"}], ",", "\n", "        ", 
     RowBox[{"{", "\n", "            ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "CodeParser`CallNode", " ", "|", " ", "CodeParser`LeafNode"}], ")"}],
         "[", " ", 
        RowBox[{"_", ",", " ", "_", ",", " ", "a_"}], " ", "]"}], ",", "\n", 
       "            ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "CodeParser`CallNode", " ", "|", " ", "CodeParser`LeafNode"}], ")"}],
         "[", " ", 
        RowBox[{"_", ",", " ", "_", ",", " ", "b_"}], " ", "]"}]}], "\n", 
      "        ", "}"}], ",", "\n", "        ", "c_"}], "\n", "    ", "]"}], 
   ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Bound-Nested@@Definitions/ASTPattern/Tests.wlt:119,1-130,2\>\""}]}], 
  "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"0c451183-b8f6-4eda-b661-0800c93047a4"],

Cell[CellGroupData[{

Cell["Duplicate Pattern Symbols", \
"Subsubsubsection",ExpressionUUID->"343ce3a2-2b9c-49b7-bf93-6079770d0412"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Count", "[", " ", 
    RowBox[{
     RowBox[{"CodeParse", "[", " ", "\"\<{{1,1},{2,2}}\>\"", " ", "]"}], ",", 
     " ", 
     RowBox[{"ASTPattern", " ", "@", " ", 
      RowBox[{"{", " ", 
       RowBox[{"a_", ",", " ", "a_"}], " ", "}"}]}], ",", " ", "Infinity"}], 
    " ", "]"}], ",", "\n", "    ", "2", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Duplicate-Pattern-Symbols-1@@Definitions/ASTPattern/Tests.wlt:135,1-\
139,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"5f494ed9-94d8-4ddf-804e-3740ef7881ad"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Count", "[", "\n", "        ", 
    RowBox[{
     RowBox[{
     "CodeParse", "[", " ", "\"\<{{{1,1},{2,2}},{{1,1},{2,2}}}\>\"", " ", 
      "]"}], ",", "\n", "        ", 
     RowBox[{"ASTPattern", " ", "@", " ", 
      RowBox[{"{", " ", 
       RowBox[{"a_", ",", " ", "a_"}], " ", "}"}]}], ",", "\n", "        ", 
     "Infinity"}], "\n", "    ", "]"}], ",", "\n", "    ", "5", ",", "\n", 
   "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Duplicate-Pattern-Symbols-2@@Definitions/ASTPattern/Tests.wlt:141,1-\
149,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"8abf99e4-aa2c-4cb2-8ba0-2684aba2cbeb"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Cases", "[", "\n", "        ", 
    RowBox[{
     RowBox[{
     "CodeParse", "[", " ", "\"\<{{1,1,1},{1,1},{1,1,1,2},{2,2,2}}\>\"", " ", 
      "]"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"ASTPattern", "[", " ", 
       RowBox[{"expr", ":", " ", 
        RowBox[{"{", " ", 
         RowBox[{"a_", ",", " ", "a_", ",", " ", "a_"}], " ", "}"}]}], " ", 
       "]"}], " ", ":>", " ", 
      RowBox[{"FromAST", " ", "@", " ", "expr"}]}], ",", "\n", "        ", 
     "Infinity"}], "\n", "    ", "]"}], ",", "\n", "    ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], " ", "}"}], ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{"2", ",", " ", "2", ",", " ", "2"}], " ", "}"}]}], " ", "}"}], 
   ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Duplicate-Pattern-Symbols-3@@Definitions/ASTPattern/Tests.wlt:151,1-\
159,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"ff3b44d2-0d4f-42ad-8389-d8c23259e99d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two Arguments", \
"Subsubsubsection",ExpressionUUID->"aeac3ac6-cacf-41e2-94fd-514f8f2ca0ba"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", "[", " ", 
    RowBox[{"id_String", ",", " ", "as1_"}], " ", "]"}], ",", "\n", "    ", 
   RowBox[{"id", ":", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"CallNode", " ", "|", " ", "LeafNode"}], ")"}], "[", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"String", " ", "|", " ", 
       RowBox[{"LeafNode", "[", " ", 
        RowBox[{"Symbol", ",", " ", 
         RowBox[{"\"\<String\>\"", " ", "|", " ", "\"\<System`String\>\""}], 
         ",", " ", "_"}], " ", "]"}]}], ",", "\n", "        ", "_", ",", "\n",
       "        ", "as1_"}], "\n", "    ", "]"}]}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Two-Arguments@@Definitions/ASTPattern/Tests.wlt:164,1-172,2\>\""}]}],
   "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"47c837e7-c4d2-4dfd-9186-34e806436640"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Cases", "[", "\n", "        ", 
    RowBox[{
     RowBox[{
     "CodeParse", "[", " ", 
      "\"\<VerificationTest[1 + 1, 2, TestID -> \\\"Addition\\\", SameTest -> \
SameQ]\>\"", " ", "]"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"ASTPattern", "[", "\n", "            ", 
       RowBox[{
        RowBox[{
         RowBox[{"HoldPattern", " ", "@", " ", 
          RowBox[{"VerificationTest", "[", "\n", "                ", 
           RowBox[{"__", ",", "\n", "                ", 
            RowBox[{"TestID", " ", "->", " ", 
             RowBox[{"ASTPattern", "[", " ", 
              RowBox[{"id_String", ",", " ", "as1_"}], " ", "]"}]}], ",", 
            "\n", "                ", "___"}], "\n", "            ", "]"}]}], 
         " ", "/;", " ", 
         RowBox[{"StringQ", " ", "@", " ", "id"}]}], ",", "\n", 
        "            ", "as2_"}], "\n", "        ", "]"}], " ", ":>", " ", 
      RowBox[{"Lookup", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"as1", ",", " ", "as2"}], " ", "}"}], ",", " ", "Source"}], 
       " ", "]"}]}], ",", "\n", "        ", "Infinity"}], "\n", "    ", "]"}],
    ",", "\n", "    ", 
   RowBox[{"{", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"1", ",", " ", "38"}], " ", "}"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", " ", "48"}], " ", "}"}]}], " ", "}"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"1", ",", " ", "1"}], " ", "}"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", " ", "68"}], " ", "}"}]}], " ", "}"}]}], " ", 
     "}"}], " ", "}"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Nested-Meta-Bindings@@Definitions/ASTPattern/Tests.wlt:174,1-189,2\>\
\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"6705c308-0dd0-41ac-abfb-63ba952ca33a"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"ASTPattern", "[", " ", 
    RowBox[{"id_", ",", " ", "as1_"}], " ", "]"}], ",", "\n", "    ", 
   RowBox[{"id", ":", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"CallNode", " ", "|", " ", "LeafNode"}], ")"}], "[", " ", 
     RowBox[{"_", ",", " ", "_", ",", " ", "as1_"}], " ", "]"}]}], ",", "\n", 
   "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Meta-Unknown-Head@@Definitions/ASTPattern/Tests.wlt:191,1-195,2\>\""}\
]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"f683b496-d5e7-4b34-ac7e-635dadaa51b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TestParse", \
"Subsubsubsection",ExpressionUUID->"3da2a4e4-5324-4c4a-92a5-6bf81ebea09f"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<VerificationTest[x,y]\>\"", ",", " ", 
     RowBox[{"VerificationTest", "[", " ", "___", " ", "]"}]}], " ", "]"}], 
   ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-VerificationTest@@Definitions/ASTPattern/Tests.wlt:200,1-\
204,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"e4165580-c41a-4b2a-9853-5c982a874f3f"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[x,y]\>\"", ",", " ", 
     RowBox[{"f", "[", " ", 
      RowBox[{"_", ",", " ", "_"}], " ", "]"}]}], " ", "]"}], ",", "\n", 
   "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Normal@@Definitions/ASTPattern/Tests.wlt:206,1-210,2\>\""}]\
}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"06448ecd-0edc-4a9b-8eb7-29c1334b89fe"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<2.5\>\"", ",", " ", "_Real"}], " ", "]"}], ",", "\n", "    ",
    "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Atom-Real@@Definitions/ASTPattern/Tests.wlt:212,1-216,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"a2745661-eac0-4ab7-8b61-92cb5bc80dc1"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<2\>\"", ",", " ", "_Integer"}], " ", "]"}], ",", "\n", 
   "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Atom-Integer@@Definitions/ASTPattern/Tests.wlt:218,1-222,2\
\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"e90ff634-8a8a-4c5f-881f-3f80e7b61272"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<\\\"hello\\\"\>\"", ",", " ", "_String"}], " ", "]"}], ",", 
   "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Atom-String@@Definitions/ASTPattern/Tests.wlt:224,1-228,2\>\
\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"efffe37f-d1d3-4785-af1b-318f0f9ac957"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<x\>\"", ",", " ", "_Symbol"}], " ", "]"}], ",", "\n", "    ",
    "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Atom-Symbol@@Definitions/ASTPattern/Tests.wlt:230,1-234,2\>\
\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"f68692ba-dad2-44db-961d-c40a724b458f"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"expr", " ", "=", " ", 
       RowBox[{"2", "/", "3"}]}], " ", "}"}], ",", " ", 
     RowBox[{"testParse", "[", " ", 
      RowBox[{"\"\<2/3\>\"", ",", " ", "expr"}], " ", "]"}]}], " ", "]"}], 
   ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Atom-Rational@@Definitions/ASTPattern/Tests.wlt:236,1-240,\
2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"38a4a003-853d-4f32-baac-31b1f702b5b7"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"expr", " ", "=", " ", 
       RowBox[{"2", " ", "+", " ", 
        RowBox[{"3", " ", "I"}]}]}], " ", "}"}], ",", " ", 
     RowBox[{"testParse", "[", " ", 
      RowBox[{"\"\<2 + 3 I\>\"", ",", " ", "expr"}], " ", "]"}]}], " ", "]"}],
    ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Atom-Complex@@Definitions/ASTPattern/Tests.wlt:242,1-246,2\
\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"f4e4674a-6425-4e0a-9e88-b6a2e34ca4fb"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<5\>\"", ",", " ", "x_Integer"}], " ", "]"}], ",", "\n", 
   "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Pattern@@Definitions/ASTPattern/Tests.wlt:248,1-252,2\>\""}\
]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"66647522-b007-48b8-a2d4-76b660000ddf"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[5]\>\"", ",", " ", 
     RowBox[{"e", ":", " ", 
      RowBox[{"f", "[", " ", "x_Integer", " ", "]"}]}]}], " ", "]"}], ",", 
   "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Nested-Pattern@@Definitions/ASTPattern/Tests.wlt:254,1-258,\
2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"2bf173e2-06e2-4f32-a2c5-7a68184f29f5"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[5]\>\"", ",", " ", 
     RowBox[{
      RowBox[{"f", "[", " ", "x_Integer", " ", "]"}], " ", "/;", " ", 
      RowBox[{"Positive", " ", "@", " ", "x"}]}]}], " ", "]"}], ",", "\n", 
   "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Condition-1@@Definitions/ASTPattern/Tests.wlt:260,1-264,2\>\
\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"3e685500-8806-4b3f-a3a4-6540ece71838"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[5]\>\"", ",", " ", 
     RowBox[{
      RowBox[{"f", "[", " ", "x_Integer", " ", "]"}], " ", "/;", " ", 
      RowBox[{"Negative", " ", "@", " ", "x"}]}]}], " ", "]"}], ",", "\n", 
   "    ", "False", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Condition-2@@Definitions/ASTPattern/Tests.wlt:266,1-270,2\>\
\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"f361c9fe-c082-46fd-9451-7b1fe6612323"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", "\n", "        ", 
    RowBox[{
    "\"\<VerificationTest[1+1, 2, TestID -> \\\"test\\\"]\>\"", ",", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"VerificationTest", "[", " ", 
       RowBox[{"__", ",", " ", 
        RowBox[{"TestID", " ", "->", " ", "id_"}], ",", " ", "___"}], " ", 
       "]"}], " ", "/;", " ", 
      RowBox[{"StringQ", " ", "@", " ", "id"}]}]}], "\n", "    ", "]"}], ",", 
   "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Condition-3@@Definitions/ASTPattern/Tests.wlt:272,1-279,2\>\
\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"01bf1d81-9191-497c-9e07-f97222c47e2c"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", "\n", "        ", 
    RowBox[{
    "\"\<VerificationTest[1+1, 2, TestID -> Automatic]\>\"", ",", "\n", 
     "        ", 
     RowBox[{
      RowBox[{"VerificationTest", "[", " ", 
       RowBox[{"__", ",", " ", 
        RowBox[{"TestID", " ", "->", " ", "id_"}], ",", " ", "___"}], " ", 
       "]"}], " ", "/;", " ", 
      RowBox[{"StringQ", " ", "@", " ", "id"}]}]}], "\n", "    ", "]"}], ",", 
   "\n", "    ", "False", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Condition-4@@Definitions/ASTPattern/Tests.wlt:281,1-288,2\>\
\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"19ae26e9-53f0-4dbc-8a81-d80dba3bf38d"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<5\>\"", ",", " ", 
     RowBox[{"_Integer", "?", " ", "IntegerQ"}]}], " ", "]"}], ",", "\n", 
   "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-PatternTest-1@@Definitions/ASTPattern/Tests.wlt:290,1-294,\
2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"cac34d9a-4991-4ea9-8cba-a757eb5abcd0"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<5\>\"", ",", " ", 
     RowBox[{"x_Integer", "?", " ", "IntegerQ"}]}], " ", "]"}], ",", "\n", 
   "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-PatternTest-2@@Definitions/ASTPattern/Tests.wlt:296,1-300,\
2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"4507644c-a639-4071-bcaa-0e11f0b428ed"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<5\>\"", ",", " ", 
     RowBox[{"x_", " ", "/;", " ", 
      RowBox[{"IntegerQ", " ", "@", " ", "x"}]}]}], " ", "]"}], ",", "\n", 
   "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-PatternTest-3@@Definitions/ASTPattern/Tests.wlt:302,1-306,\
2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"0b4a4977-1e43-408b-9376-f9dce66ae5d7"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[1.2]\>\"", ",", " ", 
     RowBox[{"f", " ", "@", " ", 
      RowBox[{"Except", "[", " ", "_Integer", " ", "]"}]}]}], " ", "]"}], ",",
    "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Except-1@@Definitions/ASTPattern/Tests.wlt:308,1-312,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"ebfb3d2d-2dd8-472c-8b4f-1e19dcd5ca37"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[1.2]\>\"", ",", " ", 
     RowBox[{"f", " ", "@", " ", 
      RowBox[{"Except", "[", " ", "_Real", " ", "]"}]}]}], " ", "]"}], ",", 
   "\n", "    ", "False", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Except-2@@Definitions/ASTPattern/Tests.wlt:314,1-318,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"e01f5b57-3bca-4fc0-94b6-44fa981fb18c"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[1.2]\>\"", ",", " ", 
     RowBox[{"f", " ", "@", " ", 
      RowBox[{"Except", "[", " ", 
       RowBox[{"_Integer", ",", " ", "_Real"}], " ", "]"}]}]}], " ", "]"}], 
   ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Except-3@@Definitions/ASTPattern/Tests.wlt:320,1-324,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"c84f1dfc-85b8-46d8-a0cd-4369ac3b0de5"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[1.2]\>\"", ",", " ", 
     RowBox[{"f", " ", "@", " ", 
      RowBox[{"Except", "[", " ", 
       RowBox[{"_Integer", ",", " ", "_String"}], " ", "]"}]}]}], " ", "]"}], 
   ",", "\n", "    ", "False", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Except-4@@Definitions/ASTPattern/Tests.wlt:326,1-330,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"1ebd0f4e-c2b6-44f2-87b6-300475f43e3c"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<f[\\\"hello\\\"]\>\"", ",", " ", 
     RowBox[{"f", " ", "@", " ", 
      RowBox[{"Except", "[", " ", 
       RowBox[{"_Integer", ",", " ", "_String"}], " ", "]"}]}]}], " ", "]"}], 
   ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-Except-5@@Definitions/ASTPattern/Tests.wlt:332,1-336,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"48ac1f97-a28f-430d-b3d1-dbdb96e6039a"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<{a,b,c,d,c,d,a,b}\>\"", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{"x__", ",", " ", 
       RowBox[{"PatternSequence", "[", " ", 
        RowBox[{"c", ",", " ", "d", ",", " ", "c"}], " ", "]"}], ",", " ", 
       "y__"}], " ", "}"}]}], " ", "]"}], ",", "\n", "    ", "True", ",", 
   "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-PatternSequence-1@@Definitions/ASTPattern/Tests.wlt:338,1-\
342,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"b0046c85-82ae-487a-9e6d-8b60ce73986b"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<{a,b,a,b,a,b,a,b,a,b}\>\"", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"PatternSequence", "[", " ", 
        RowBox[{"x_", ",", " ", "x_"}], " ", "]"}], ".."}], " ", "}"}]}], " ",
     "]"}], ",", "\n", "    ", "False", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<TestParse-PatternSequence-3@@Definitions/ASTPattern/Tests.wlt:344,1-\
348,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"0662e6b5-d778-45a9-a2a1-8d46c0213647"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<{1,1,2,2}\>\"", ",", " ", 
     RowBox[{"ASTPattern", " ", "@", " ", 
      RowBox[{"{", " ", 
       RowBox[{"x_", ",", " ", "x_", ",", " ", "y_", ",", " ", "y_"}], " ", 
       "}"}]}]}], " ", "]"}], ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Reused-Pattern-Bindings-1@@Definitions/ASTPattern/Tests.wlt:350,1-\
354,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"6f838453-9e26-49d0-aa17-785fd6fbc441"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", "\n", "        ", 
    RowBox[{"\"\<1+1\>\"", ",", "\n", "        ", 
     RowBox[{"ASTPattern", " ", "@", " ", 
      RowBox[{"HoldPattern", "[", " ", 
       RowBox[{
        RowBox[{"ASTPattern", "[", " ", "1", " ", "]"}], " ", "+", " ", 
        RowBox[{"ASTPattern", "[", " ", "1", " ", "]"}]}], " ", "]"}]}]}], 
    "\n", "    ", "]"}], ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Nested-ASTPattern-Held@@Definitions/ASTPattern/Tests.wlt:356,1-363,2\
\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"c4ca606e-4f2a-4032-ab00-2e7c57790ec9"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<{1,1}\>\"", ",", " ", 
     RowBox[{"ASTPattern", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"x_", ",", " ", "x_"}], " ", "}"}], " ", "/;", " ", 
       RowBox[{"IntegerQ", " ", "@", " ", "x"}]}], " ", "]"}]}], " ", "]"}], 
   ",", "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Reused-Bindings-Condition@@Definitions/ASTPattern/Tests.wlt:365,1-\
369,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"c146f484-eb81-401c-ab54-f5e9e6fb3bae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FromAST", \
"Subsubsection",ExpressionUUID->"81f23bae-894e-42d2-a7c2-8a1beb99d1c1"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Cases", "[", "\n", "        ", 
    RowBox[{
     RowBox[{
     "CodeParse", "[", " ", 
      "\"\<VerificationTest[1 + 1, 2, TestID -> \\\"Addition\\\", SameTest -> \
SameQ]\>\"", " ", "]"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"ASTPattern", "[", "\n", "            ", 
       RowBox[{
        RowBox[{
         RowBox[{"HoldPattern", " ", "@", " ", 
          RowBox[{"VerificationTest", "[", "\n", "                ", 
           RowBox[{"__", ",", "\n", "                ", 
            RowBox[{"TestID", " ", "->", " ", 
             RowBox[{"ASTPattern", "[", " ", 
              RowBox[{"id_String", ",", " ", "as1_"}], " ", "]"}]}], ",", 
            "\n", "                ", "___"}], "\n", "            ", "]"}]}], 
         " ", "/;", " ", 
         RowBox[{"StringQ", " ", "@", " ", "id"}]}], ",", "\n", 
        "            ", "as2_"}], "\n", "        ", "]"}], " ", ":>", " ", 
      RowBox[{"FromAST", " ", "@", " ", "id"}]}], ",", "\n", "        ", 
     "Infinity"}], "\n", "    ", "]"}], ",", "\n", "    ", 
   RowBox[{"{", " ", "\"\<Addition\>\"", " ", "}"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<FromAST-Bindings@@Definitions/ASTPattern/Tests.wlt:374,1-389,2\>\""}]\
}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"924dc81a-0220-4aff-bcfa-01d1924ca077"]
}, Open  ]],

Cell[CellGroupData[{

Cell["EquivalentNodeQ", \
"Subsubsection",ExpressionUUID->"3ec47935-c9ea-443b-878c-65f398cec9f3"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"Enclose", " ", "@", " ", 
    RowBox[{"Apply", "[", "\n", "        ", 
     RowBox[{"EquivalentNodeQ", ",", "\n", "        ", 
      RowBox[{"ConfirmMatch", "[", "\n", "            ", 
       RowBox[{
        RowBox[{"Cases", "[", "\n", "                ", 
         RowBox[{
          RowBox[{"CodeParse", "[", " ", "\"\<{f[x],f[x]}\>\"", " ", "]"}], 
          ",", "\n", "                ", 
          RowBox[{"ASTPattern", "[", " ", 
           RowBox[{"_", "[", " ", "_", " ", "]"}], " ", "]"}], ",", "\n", 
          "                ", "Infinity"}], "\n", "            ", "]"}], ",", 
        "\n", "            ", 
        RowBox[{"{", " ", 
         RowBox[{"_", ",", " ", "_"}], " ", "}"}]}], "\n", "        ", 
       "]"}]}], "\n", "    ", "]"}]}], ",", "\n", "    ", "True", ",", "\n", 
   "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<EquivalentNodeQ-1@@Definitions/ASTPattern/Tests.wlt:394,1-408,2\>\""}\
]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"489feed9-b5c7-4aba-b084-c58d68b10c63"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regression Tests", \
"Subsubsection",ExpressionUUID->"da6c6e88-fbb3-4d8c-826c-1dfd4e3c1876"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"testParse", "[", " ", 
    RowBox[{"\"\<{a,a,a}\>\"", ",", " ", 
     RowBox[{"ASTPattern", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"x", ":", " ", 
         RowBox[{
          RowBox[{"(", "_", ")"}], ".."}]}], " ", "}"}], " ", "/;", " ", 
       RowBox[{"SameQ", " ", "@", " ", "x"}]}], " ", "]"}]}], " ", "]"}], ",",
    "\n", "    ", "True", ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<FromAST-Sequence-1@@Definitions/ASTPattern/Tests.wlt:413,1-417,2\>\"\
"}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"623ef242-f364-4d22-a8e1-f3baf9660b82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Future", \
"Subsubsection",ExpressionUUID->"d0372fc5-d9bf-4811-b5fb-5b2fdf800f70"],

Cell[BoxData[
 RowBox[{"Hold", " ", "@", " ", 
  RowBox[{"VerificationTest", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"testParse", "[", " ", 
     RowBox[{"\"\<{a,b,a,b,a,b,a,b,a,b}\>\"", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"PatternSequence", "[", " ", 
         RowBox[{"x_", ",", " ", "y_"}], " ", "]"}], ".."}], " ", "}"}]}], 
     " ", "]"}], ",", "\n", "    ", "True", ",", "\n", "    ", 
    RowBox[{
    "TestID", " ", "->", " ", 
     "\"\<TestParse-PatternSequence-2@@Definitions/ASTPattern/Tests.wlt:422,8-\
426,2\>\""}]}], "\n", "]"}]}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"7ca95a89-53ea-4b6d-a1c1-650a2ea1e4bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", \
"Subsubsection",ExpressionUUID->"c5b19d45-afd1-4f5a-9119-cad6582f1ed3"],

Cell[BoxData[
 RowBox[{"VerificationTest", "[", "\n", "    ", 
  RowBox[{
   RowBox[{"SetOptions", "[", " ", 
    RowBox[{
     RowBox[{
     "ResourceFunction", "[", " ", "\"\<MessageFailure\>\"", " ", "]"}], ",", 
     " ", 
     RowBox[{"\"\<TestMode\>\"", " ", "->", " ", "False"}]}], " ", "]"}], ",",
    "\n", "    ", 
   RowBox[{"KeyValuePattern", "[", " ", 
    RowBox[{"\"\<TestMode\>\"", " ", "->", " ", "False"}], " ", "]"}], ",", 
   "\n", "    ", 
   RowBox[{"SameTest", " ", "->", " ", "MatchQ"}], ",", "\n", "    ", 
   RowBox[{
   "TestID", " ", "->", " ", 
    "\"\<Reset-MessageFailure-TestMode@@Definitions/ASTPattern/Tests.wlt:431,\
1-436,2\>\""}]}], "\n", "]"}]], "Input", "Code",
 InitializationCell->
  False,ExpressionUUID->"f5befe5d-5a90-48e0-8139-81e67921333e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your resource to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fc1a4f8a-9c3f-432b-a450-75070f652370"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->787186911,ExpressionUUID->"219a7006-8b1f-4ba5-8e3d-fd365ffc6679"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "12e447d3-0a02-4991-a842-7c966d582c01"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"b03f4b55-945a-4eed-8629-b0d43c0194e9"],

Cell["12.3+", "Text",
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->913148768,ExpressionUUID->"16316000-4bcd-4c2e-8025-8ae87af19e8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your resource is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8f97d897-4c61-4576-bd35-d6851227bc65"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->641233002,ExpressionUUID->"3fa5bcbc-d0b6-4cfd-aee7-90c6a3cfbb3c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["Windows", {False, "Windows"}], "\" \"", "\"Windows\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkNuKwkAMhsEerLDsE/gKfQipCoJLF7PL7m0PUQenM8Mkg87bmwot3iX5/\
3w5bIoSMuCoEfI6sAtcwrK6YnfD/pxQelTEsPxTprd3gvyr6Wr4h/\
TXqIc0HhgHmmznBaWnIKDZPgWzkkj/\
BJmLL9iELL69deg5wrqyg2tYtUorjrUUJTEXiCRDZcnasbLmxX6fTsWuV9y0EmX7RhPOwmqLGt+\
V8VKrw2CoSkr4PBhG77xYRjCsNiZCaAnlIx8nJBt8hz/RIRT7YLrR8wRtF2wJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->357234100,ExpressionUUID->"bdbc0d3a-5afc-4a11-a97d-5f60aa19179f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your resource."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "feb8a6ff-4a5d-4493-b38e-d16389b1fada"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->154956349,ExpressionUUID->"c42bc557-b958-4cb9-b493-75b8362450fa"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Notebooks"}], "\" \"", "\"Notebooks\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
        "\"Parallel Kernels\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
        "\"Cloud Access\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUM1qwzAMHmuzJlDKLrv3BfIQIVugrKyl2gs4jsJMFdtY8sFvP2eDkLHb96cPSU1ZQw\
GSCOHpEsVHqWHXfqG+4zA+8PZsOCvFSXDicfPLx0fe3mKeqD6cYO/cnVdwcZ+vKigipOM7BovE/\
5Ulu2/JxeHYaI3Mf1kN5TU4j0ESvLRu8kpMb8hI6lBJDJgTu4sX4+\
xP33pDLt8GI6rPqOgUMS5G9YqEa2c+21GcLLebGg4nKxh8yJG5GKrGJog9Y37G/\
obsYtD4mTxC2UWr58w3NfBx2Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->764390503,ExpressionUUID->"251bf7bd-d5eb-444f-8969-43003cdee060"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your resource is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ad4389f3-0fe1-4dbc-87ce-96ee39d8492a"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->929178938,ExpressionUUID->"f444e0e8-ad42-4196-b7c4-fbcf9efb009f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["Session", {False, "Session"}], "\" \"", 
        TemplateBox[{"\"Session\"", "\"Local or cloud interactive session\""},
          "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Script", {False, "Script"}], "\" \"", 
        TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
        TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
        TemplateBox[{
         "\"WebEvaluation\"", 
          "\"Cloud evaluation initiated by an HTTP request\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
        TemplateBox[{"\"WebAPI\"", "\"API called through an HTTP request\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
        TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
        TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdFqwzAMhK1tEtj2EXvPR3RpChmDlmqw58RRialjG0su5O/\
nlMTJ9mRJd9yd5H2awxZ4UAi7k2frOYek6FDcsL0mtPmSxJAAEkmjYQfCScuQgW9u6DQqeP3BprzXy\
tf8YIR2f64CQ3TYeoUtpB81i+7TNMGpYuxp1r0+0eYSKIv+XERkNpzeOF8FWMqI/\
sv0t120p6jTu9KO0ZcyonGb9V7p2RmLjgd4L0xvg08jleRhcS31XTqje9TjgU92nNEouj4EpWUruW5\
CtT3WijAC2QEVrpHxl4zyvabiOYe3SjM66wLlsXG210M4C2Ewe7kgGe8Efg82xD96LUbOL+VQrkA=\
"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->931610151,ExpressionUUID->"88e2f4a0-8a48-4598-bf6c-6a65c8a08de2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your resource is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "682dbbf2-c6d1-4619-9463-2f2729215dfe"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->584200270,ExpressionUUID->"fdbb67c7-1ece-4987-b81b-632114fe5ef7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[True, {False, True}], "\" \"", "\"Supported in cloud\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNjkEKwkAMRVGqVhAX7tx5gR5Cq0JBqBgvUNsUB6eTYZIsentnQMVdyH/vJ/\
u8gBnIaBHmtYpXKWBRPrF9YddPOLsYFs7uQTFyleDA320/\
5eym0duAek9BsNsZt2stafc18msgj0FG2JY0+EbMw1gjY5mgjxbv1V4MOU6N/\
82cnzojzSNOs3NjGX/B8ogW/5P0NFkdHJeTAtaVEww+RCQVw+\
JAZLFxBaxuyKShxfvoEfKzujYRb6FXWpA="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->605080198,ExpressionUUID->"f0749897-73fa-4875-893c-ee8ab5810931"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "35d34632-f80e-4e1a-8247-329da84e36d5"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->897529167,ExpressionUUID->"9ade06b6-790b-4e02-9c19-31ad06d7755e"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"0e4d826e-f706-40f1-b464-245e54b6f0ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "df342714-df2b-414d-948b-b1ea49daafa8"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Submission Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->321610809,ExpressionUUID->"fc2fd82a-7e46-410c-885e-04346cce4010"],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->711457694,ExpressionUUID->"f3645069-40ef-4e99-bd67-ee6b926bddff"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{838., 731.5},
WindowMargins->{{428, Automatic}, {Automatic, 120.5}},
TaggingRules->{
 "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.6.3", "CreationTimestamp" -> 
  3.8540409124003164`17.33849130973766*^9, "UpdatedTimestamp" -> 
  3.8540409124003164`17.33849130973766*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWVtT20YUrjEQBhxaMulMkyc98EAyadJpO9NL2iauDcQdIMCa9JW1dGQ0rHeV3RWg\
X9a/17MrydhGciTbTFNPJsja1XfOnut3LH9JPWqJQSgi7u3ehBKUCgT3a2rlJApA+/nLS2qp4+P/\
9Sb38M/K7seIMrW5/QGkWT+KBj2Q0refnbdmB6EDOMGLRiuSErj+QFkE/\
hfq0e4VXlFtnhIaekJc4q7lg0Bp1ejSfj/g/dOIgSKNU1Aiki504xDIcptqimouv+\
cuFGq58icT7qXZlgButwTXcKOPqb7w60UnPwLwFNnJ5JFYaRi0WIBqn7fBD3gwqu757SOOUSp7LG+\
rWj6KGEPFXt5dTAWcQh9VBYma+kE/ktY0w+O+KavUKYRCBVrIOAFMcFQKVLf+\
q6m1PRqwSKJnaurhMXUZ6A5XmjJGvinS0F+\
dxdgzmbXRFWOeWSdaYjz8JQIjr35IQ3uGiLvmSX8lkUyeFBrXKkeVCeuNBIuELNDmNmFCt2qkdk6Wf\
v195MbS63WrPMavIs/KKv/\
cXy6wUp2AkbfeFtfcJoFSv5RFzS7eRxrdCJ5JqHX0NKMuNDGuFgi7YZKuDYzG4CHuxjvBPHQkBiZXf\
5QFPpbBFQKeXyVlYV8CfpPqwRlXaTnIsUa7KjoNQ+DeGb+\
g3GPgtYAxNdUwi5IwxUb4tbKVXITFipcikK0uDPAAGoy4fSmicH5QzN1Gk5krLAdXGNBft3BTX8gA1\
LetC3Ave+IGb2/e3jbSSSNbs982UR6NmLb5zXWOpuTL7BaBJDdzXV26mg0doS674iz08Dqt+\
8VeXgD4mIPreONBlgJr+0z0KDu/MC1t1KLqp7Ji90G/\
CzwPeFKIyqfrHuVu3LoQgQvtgDLRH1WskSomNXZJ7K9YlCm/\
zFOd4uqWXTU9icDHCPDU5FFqAeZlAk+\
wXQzPOy5gBCxrKStdGdnUnrNKVGl22UUWdCkNUd9XVYH3quRYSmUmpY5ZKLPnEVwP7Zlr4yRB1GFVl\
bcjBQfQp27c6XMhk+qU+VotG2/kJ9/rspJycCcSb1oazilmWo1dUqsH+\
KQtjHtV7dYHnZWxcYkLSyVMiQ3UHLAuUgXqPtQtzEak0JY1r5rdnbbJS6ufetDBmt3HSF3rcCss/\
oSR60OtCw6eApeue9mJ1LAz3IHt3Vp7KH5EZk3tVm6DlAseuJQdSxECWsvyuVl1HlE0f4hYSotho6m\
UcAPLvU9Us3Juh6m2JEb144GJobWmJSNdsRg4GyZkk1igQ9DUM/\
NBOoGRtVagkwHkSbLj1Sn4IE10O9nSbXVZjFdGhE6olUxPwxkqGUGXD9Dmd0bPL+zn+\
VucCeYZVqZMEhX4/fNClGqEvhrONAb/YyESDoGXtA/ERYdU4+1nhZhJt8uLg0TYzET+3kROZ/\
YlrVeGz88E9Zmx+OP5vVCB1t+HtFl4/k6hHpPEvjht/ydMfqZqgQDffbJeTVLn1tzOtQz+\
VSHMfVD2YqXHzDMzUX9RiD8fM6+KW5aK/1bOHv8tAZ9Lyc+Idv9ceA7iShpi/ZnMkHl49+\
uS7SqXbc+s6ox0uzPlN/bsx3HMtiicFDuddi8UdpH0ex7nlCTdtbHf2yfeAuUz8R/sZ+etcc9oqyP/\
1LoXgXJ4qqpjqBiVytHC6YHj2i7iOb4UA4c6HK5BOmmHeeEogf8G4Pi4KcIocAY0NkjOtZCIpBy4CT\
F2wHvptIUTi8i5DtSFgdYydmikxQAPizZgseMKjrgaw8/RYwrhboqrgxC39hhk0t/cTg/\
1dHpYy6aH8TlCbaLrk2YjJJVx4TBiHTj5bmz4CqLgfdhDgg6L1CGioG9x+\
xY6tG9AO9zDs2EcDuvRetMalxpasHaEJNB0BOvNVRIPeoKRp8nbn0PKEUyeJ9+Snkce5811pZ/+\
KouXDOV2vNqeXMp9D7QyIujZnSeKiMG4/\
WyabbVsUI30dbWyR5mC4Y6npzAQV7A7CHW8e0ORJGTUV01ufdzMGR2GbTwVmCj3d8A9cd0NNHoiRcl\
98fkvn3IKDA=="]]], "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "FunctionResource", 
    "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy"}, "ToolsOpen" -> True, "StatusMessage" -> 
  "", "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (January 26, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.921569, 0.341176, 0.105882], CellTags -> {"MainDockedCell"},
        CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.04581818181818182], 
              RGBColor[0.627441, 0.627441, 0.627441, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQLTQ3t12zRcShJLdco9dU3mHepS6LtrvCcP4+Xv/m
N77CDovcOdKu58g7FPjtSo+5KuTw57fmw+zb8g5K/ao+Z2KEHHRuqOoxqCo4
1OhH27UoCDnsSqhWX5aN4K+ZPvXO8oMI/txz6yeuFFeE67fRSpTaE6sIN79j
1cqy+5MV4fZf1fp0iemUItx9v7PEGkWeKjrA3A/jf+Fa9FHHQBTOX+1ud9n/
oChcv3mwk84kczG4+Yfi3FqvrBWD29+RcmLj1xdicPfB+DD3w/gw/8H0w/wP
Mx8WPjD7YeEHcx8sfNHDHwBu/qSR
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvf+bus9hGwmHDp1Dj7Lq+R1g/C8aMf2HvvI4TGr/
8PXaHQEMPkz934jyRxrThRx4jt4OchAXgPMDH16pmH8JwZ97RmCl6XRBOP9D
W/9jplQhOF+/1m7LFGNhOJ/l29N9k18i+AUfW5kZ2kXg/Ple3+bO/C4K5+fN
DQ4+fUAMzt9xf9q57xnicH6N4AF++Q8IvqPzywC3cgk4PyFkivMkFkk4/4bL
wedMMyQdDs1vE5FYJOBwYaHqp4u3EPzQT5dO7vwk5SCxtot3p4WYw73/Kfef
X5RxYLv4XzxkhpjDona/Xv0OBH+hx9ZwiywJOB/mHxgf5l8Y30/526VcIyR+
5Tb7vkQhON/3fNmadRME4fxHts2x9mcF4HxYfKDHLwCFIt67
                "]}]}, {
              FaceForm[
               RGBColor[0.627441, 0.627441, 0.627441, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.04581818181818182], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQLTQ3t12zRcShJLdco9dU3mHepS6LtrvCcP4+Xv/m
N77CDovcOdKu58g7FPjtSo+5KuTw57fmw+zb8g5K/ao+Z2KEHHRuqOoxqCo4
1OhH27UoCDnsSqhWX5aN4K+ZPvXO8oMI/txz6yeuFFeE67fRSpTaE6sIN79j
1cqy+5MV4fZf1fp0iemUItx9v7PEGkWeKjrA3A/jf+Fa9FHHQBTOX+1ud9n/
oChcv3mwk84kczG4+Yfi3FqvrBWD29+RcmLj1xdicPfB+DD3w/gw/8H0w/wP
Mx8WPjD7YeEHcx8sfNHDHwBu/qSR
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvf+bus9hGwmHDp1Dj7Lq+R1g/C8aMf2HvvI4TGr/
8PXaHQEMPkz934jyRxrThRx4jt4OchAXgPMDH16pmH8JwZ97RmCl6XRBOP9D
W/9jplQhOF+/1m7LFGNhOJ/l29N9k18i+AUfW5kZ2kXg/Ple3+bO/C4K5+fN
DQ4+fUAMzt9xf9q57xnicH6N4AF++Q8IvqPzywC3cgk4PyFkivMkFkk4/4bL
wedMMyQdDs1vE5FYJOBwYaHqp4u3EPzQT5dO7vwk5SCxtot3p4WYw73/Kfef
X5RxYLv4XzxkhpjDona/Xv0OBH+hx9ZwiywJOB/mHxgf5l8Y30/526VcIyR+
5Tb7vkQhON/3fNmadRME4fxHts2x9mcF4HxYfKDHLwCFIt67
                "]}]}, {
              FaceForm[
               RGBColor[0.999985, 0.999985, 0.999985, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.988235, 0.419608, 0.203922], 
                    Thickness[
                    NCache[2/45, 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.6666666666666666], 0], 
                    Thickness[
                    NCache[2/45, 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> 
                   RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> 
                  RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GPL5w6v66uRAEZJNqyN3J1VfdxC6bMiAjoAhQ
nBhDHh3dfT3JGqLrhpfUgwJvCAKyIYJAWaAaPIYAZSEqbwapfjq8GS38gSJA
cYgCZHPQDIG44XaU3r9fP7HGI1AcKAtxD1ZDgP6FuAGXCXBzIO6Bhw+yIZCQ
xPQFJgCqgYQzRCMkNUJiExKSBE2AAEg4Q+KdAQwoN4QqLvlPvTChVuxQJZ1Q
K8VSJe/AAYW5GBlQWJ6QBKhoCH5ATGkPANqBKWU=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6G3Dt/+uKq+RAEZJNqyIn+urW20su12ZARUAQo
Towhtw7v2RZtD9G1wYjrgK0wBAHZEEGgLFANHkOAshCVW0x5H0eo/8k2QUZA
EaA4RAGyOWiGQNyw3ZzvV6YxmgkQBBQHykLcg9UQoH8hbsBlAtwciHvg4YNs
CCQkMX2BiYBqIOEM0QhJjZDYhIQkQRMgCBLOkHhnAAPKDaGKS6gYJtSKHaqk
E2qlWKrkHTigMBcjAwrLE5IAFQ3BD4gp7QGdXXDI
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GvHjx4i0MANmkGvLx48c/f/6g+RooAhQnxpBX
r179+PEDIv771dNPR7ZAEJANEQTKAtXgMQQoCxH5+ejWg0Kfy6YMyAgoAhSH
KEA2B80QiBu+3754xYoNzQQIAooDZSHuwWoI0L8QN+AyAW4OxD3w8EE2BBKS
mL7AREA1kHCGaISkRkhsQkKSoAkQBAlnSLwzgAHlhlDFJVQME2rFDlXSCbVS
LFXyDhxQmIuRAYXlCUmAiobgB8SU9gD80e8B
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> 
                   RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> 
                  RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GPL5w6v66uRAEZJNqyN3J1VfdxC6bMiAjoAhQ
nBhDHh3dfT3JGqLrhpfUgwJvCAKyIYJAWaAaPIYAZSEqbwapfjq8GS38gSJA
cYgCZHPQDIG44XaU3r9fP7HGI1AcKAtxD1ZDgP6FuAGXCXBzIO6Bhw+yIZCQ
xPQFJgCqgYQzRCMkNUJiExKSBE2AAEg4Q+KdAQwoN4QqLvlPvTChVuxQJZ1Q
K8VSJe/AAYW5GBlQWJ6QBKhoCH5ATGkPANqBKWU=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6G3Dt/+uKq+RAEZJNqyIn+urW20su12ZARUAQo
Towhtw7v2RZtD9G1wYjrgK0wBAHZEEGgLFANHkOAshCVW0x5H0eo/8k2QUZA
EaA4RAGyOWiGQNyw3ZzvV6YxmgkQBBQHykLcg9UQoH8hbsBlAtwciHvg4YNs
CCQkMX2BiYBqIOEM0QhJjZDYhIQkQRMgCBLOkHhnAAPKDaGKS6gYJtSKHaqk
E2qlWKrkHTigMBcjAwrLE5IAFQ3BD4gp7QGdXXDI
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GvHjx4i0MANmkGvLx48c/f/6g+RooAhQnxpBX
r179+PEDIv771dNPR7ZAEJANEQTKAtXgMQQoCxH5+ejWg0Kfy6YMyAgoAhSH
KEA2B80QiBu+3754xYoNzQQIAooDZSHuwWoI0L8QN+AyAW4OxD3w8EE2BBKS
mL7AREA1kHCGaISkRkhsQkKSoAkQBAlnSLwzgAHlhlDFJVQME2rFDlXSCbVS
LFXyDhxQmIuRAYXlCUmAiobgB8SU9gD80e8B
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> 
                   RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> 
                  RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GPL5w6v66uRAEZJNqyN3J1VfdxC6bMiAjoAhQ
nBhDHh3dfT3JGqLrhpfUgwJvCAKyIYJAWaAaPIYAZSEqbwapfjq8GS38gSJA
cYgCZHPQDIG44XaU3r9fP7HGI1AcKAtxD1ZDgP6FuAGXCXBzIO6Bhw+yIZCQ
xPQFJgCqgYQzRCMkNUJiExKSBE2AAEg4Q+KdAQwoN4QqLvlPvTChVuxQJZ1Q
K8VSJe/AAYW5GBlQWJ6QBKhoCH5ATGkPANqBKWU=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6G3Dt/+uKq+RAEZJNqyIn+urW20su12ZARUAQo
Towhtw7v2RZtD9G1wYjrgK0wBAHZEEGgLFANHkOAshCVW0x5H0eo/8k2QUZA
EaA4RAGyOWiGQNyw3ZzvV6YxmgkQBBQHykLcg9UQoH8hbsBlAtwciHvg4YNs
CCQkMX2BiYBqIOEM0QhJjZDYhIQkQRMgCBLOkHhnAAPKDaGKS6gYJtSKHaqk
E2qlWKrkHTigMBcjAwrLE5IAFQ3BD4gp7QGdXXDI
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GvHjx4i0MANmkGvLx48c/f/6g+RooAhQnxpBX
r179+PEDIv771dNPR7ZAEJANEQTKAtXgMQQoCxH5+ejWg0Kfy6YMyAgoAhSH
KEA2B80QiBu+3754xYoNzQQIAooDZSHuwWoI0L8QN+AyAW4OxD3w8EE2BBKS
mL7AREA1kHCGaISkRkhsQkKSoAkQBAlnSLwzgAHlhlDFJVQME2rFDlXSCbVS
LFXyDhxQmIuRAYXlCUmAiobgB8SU9gD80e8B
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3787878858871814623; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3787878858871814623]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> 
                   RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> 
                  RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GPL5w6v66uRAEZJNqyN3J1VfdxC6bMiAjoAhQ
nBhDHh3dfT3JGqLrhpfUgwJvCAKyIYJAWaAaPIYAZSEqbwapfjq8GS38gSJA
cYgCZHPQDIG44XaU3r9fP7HGI1AcKAtxD1ZDgP6FuAGXCXBzIO6Bhw+yIZCQ
xPQFJgCqgYQzRCMkNUJiExKSBE2AAEg4Q+KdAQwoN4QqLvlPvTChVuxQJZ1Q
K8VSJe/AAYW5GBlQWJ6QBKhoCH5ATGkPANqBKWU=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6G3Dt/+uKq+RAEZJNqyIn+urW20su12ZARUAQo
Towhtw7v2RZtD9G1wYjrgK0wBAHZEEGgLFANHkOAshCVW0x5H0eo/8k2QUZA
EaA4RAGyOWiGQNyw3ZzvV6YxmgkQBBQHykLcg9UQoH8hbsBlAtwciHvg4YNs
CCQkMX2BiYBqIOEM0QhJjZDYhIQkQRMgCBLOkHhnAAPKDaGKS6gYJtSKHaqk
E2qlWKrkHTigMBcjAwrLE5IAFQ3BD4gp7QGdXXDI
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GvHjx4i0MANmkGvLx48c/f/6g+RooAhQnxpBX
r179+PEDIv771dNPR7ZAEJANEQTKAtXgMQQoCxH5+ejWg0Kfy6YMyAgoAhSH
KEA2B80QiBu+3754xYoNzQQIAooDZSHuwWoI0L8QN+AyAW4OxD3w8EE2BBKS
mL7AREA1kHCGaISkRkhsQkKSoAkQBAlnSLwzgAHlhlDFJVQME2rFDlXSCbVS
LFXyDhxQmIuRAYXlCUmAiobgB8SU9gD80e8B
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> 
                    RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> 
                   RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GPL5w6v66uRAEZJNqyN3J1VfdxC6bMiAjoAhQ
nBhDHh3dfT3JGqLrhpfUgwJvCAKyIYJAWaAaPIYAZSEqbwapfjq8GS38gSJA
cYgCZHPQDIG44XaU3r9fP7HGI1AcKAtxD1ZDgP6FuAGXCXBzIO6Bhw+yIZCQ
xPQFJgCqgYQzRCMkNUJiExKSBE2AAEg4Q+KdAQwoN4QqLvlPvTChVuxQJZ1Q
K8VSJe/AAYW5GBlQWJ6QBKhoCH5ATGkPANqBKWU=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6G3Dt/+uKq+RAEZJNqyIn+urW20su12ZARUAQo
Towhtw7v2RZtD9G1wYjrgK0wBAHZEEGgLFANHkOAshCVW0x5H0eo/8k2QUZA
EaA4RAGyOWiGQNyw3ZzvV6YxmgkQBBQHykLcg9UQoH8hbsBlAtwciHvg4YNs
CCQkMX2BiYBqIOEM0QhJjZDYhIQkQRMgCBLOkHhnAAPKDaGKS6gYJtSKHaqk
E2qlWKrkHTigMBcjAwrLE5IAFQ3BD4gp7QGdXXDI
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GvHjx4i0MANmkGvLx48c/f/6g+RooAhQnxpBX
r179+PEDIv771dNPR7ZAEJANEQTKAtXgMQQoCxH5+ejWg0Kfy6YMyAgoAhSH
KEA2B80QiBu+3754xYoNzQQIAooDZSHuwWoI0L8QN+AyAW4OxD3w8EE2BBKS
mL7AREA1kHCGaISkRkhsQkKSoAkQBAlnSLwzgAHlhlDFJVQME2rFDlXSCbVS
LFXyDhxQmIuRAYXlCUmAiobgB8SU9gD80e8B
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> 
                    RGBColor[0.8274509803921568, 0.20784313725490197`, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> 
                   RGBColor[0.9568627450980391, 0.8019607843137255, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GPL5w6v66uRAEZJNqyN3J1VfdxC6bMiAjoAhQ
nBhDHh3dfT3JGqLrhpfUgwJvCAKyIYJAWaAaPIYAZSEqbwapfjq8GS38gSJA
cYgCZHPQDIG44XaU3r9fP7HGI1AcKAtxD1ZDgP6FuAGXCXBzIO6Bhw+yIZCQ
xPQFJgCqgYQzRCMkNUJiExKSBE2AAEg4Q+KdAQwoN4QqLvlPvTChVuxQJZ1Q
K8VSJe/AAYW5GBlQWJ6QBKhoCH5ATGkPANqBKWU=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6G3Dt/+uKq+RAEZJNqyIn+urW20su12ZARUAQo
Towhtw7v2RZtD9G1wYjrgK0wBAHZEEGgLFANHkOAshCVW0x5H0eo/8k2QUZA
EaA4RAGyOWiGQNyw3ZzvV6YxmgkQBBQHykLcg9UQoH8hbsBlAtwciHvg4YNs
CCQkMX2BiYBqIOEM0QhJjZDYhIQkQRMgCBLOkHhnAAPKDaGKS6gYJtSKHaqk
E2qlWKrkHTigMBcjAwrLE5IAFQ3BD4gp7QGdXXDI
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4CllgA6GvHjx4i0MANmkGvLx48c/f/6g+RooAhQnxpBX
r179+PEDIv771dNPR7ZAEJANEQTKAtXgMQQoCxH5+ejWg0Kfy6YMyAgoAhSH
KEA2B80QiBu+3754xYoNzQQIAooDZSHuwWoI0L8QN+AyAW4OxD3w8EE2BBKS
mL7AREA1kHCGaISkRkhsQkKSoAkQBAlnSLwzgAHlhlDFJVQME2rFDlXSCbVS
LFXyDhxQmIuRAYXlCUmAiobgB8SU9gD80e8B
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222222222222223`], {
                   FaceForm[{
                    RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                    Opacity[1.]}], 
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                    0.}, {22.5, 0.}, {10.074, 0.}, {0., 
                    10.073999999999998`}, {0., 22.5}, {0., 34.926}, {10.074, 
                    45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {45., 
                    22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                    "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                    27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                    26.308999999999997`}, {21.375, 26.258000000000003`}, {
                    21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 
                    15.315999999999999`}, {23.828, 14.242}}, {{24.578, 
                    18.75}, {24.578, 23.078000000000003`}, {24.578, 23.539}, {
                    24.953, 23.914}, {25.418, 23.91}, {29.746, 23.91}, {
                    30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078000000000003`}, {30.578, 18.75}, {
                    30.581999999999997`, 18.288999999999998`}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.315999999999999`}, {33.684, 
                    15.539000000000001`}, {33.789, 15.602}, {33.789, 
                    17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                    26.281}, {31.328, 26.512000000000004`}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 
                    14.234000000000002`}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.988235, 0.419608, 0.203922], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4393071033038384034; 
               DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
               DefinitionNotebookClient`ViewExampleNotebook[
                 ButtonNotebook[]], 
               DefinitionNotebookClient`ButtonCodeID[4393071033038384034]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; 
               DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
               DefinitionNotebookClient`ViewStyleGuidelines[
                 ButtonNotebook[]], 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; 
               DefinitionNotebookClient`$ClickedButton = "Tools"; 
               DefinitionNotebookClient`ToggleToolbar[
                 ButtonNotebook[]], 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.994118, 0.709804, 0.601961]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 7891204313296928191; 
               DefinitionNotebookClient`$ClickedButton = "Check"; 
               DefinitionNotebookClient`CheckDefinitionNotebook[
                 ButtonNotebook[]], 
               DefinitionNotebookClient`ButtonCodeID[7891204313296928191]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{"\"Preview\"", "\"Generate a preview notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4299709568580201021; 
               DefinitionNotebookClient`$ClickedButton = "Preview"; 
               DefinitionNotebookClient`PreviewResource[
                 ButtonNotebook[], "Notebook"], 
               DefinitionNotebookClient`ButtonCodeID[4299709568580201021]]& , 
              "\"Generate a preview notebook\"", True}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1389539917011878958; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1389539917011878958]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8586347731213964380; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8586347731213964380]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your resource submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; 
                   DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                   With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]], 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your resource submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; 
                   DefinitionNotebookClient`$ClickedButton = "Submit"; 
                   With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]], 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.988235, 0.419608, 0.203922], 
              RGBColor[0.921569, 0.341176, 0.105882]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.988235, 0.419608, 0.203922], 2 -> 
              RGBColor[0.921569, 0.341176, 0.105882]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.988235, 0.419608, 0.203922]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222222222222223`], {
                FaceForm[{
                  RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                 0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                 0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {34.926,
                  45.}, {45., 34.926}, {45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                  "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                  27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                  26.308999999999997`}, {21.375, 26.258000000000003`}, {
                  21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                  15.602}, {21.426, 15.547}, {23.828, 15.315999999999999`}, {
                  23.828, 14.242}}, {{24.578, 18.75}, {24.578, 
                  23.078000000000003`}, {24.578, 23.539}, {24.953, 23.914}, {
                  25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578, 
                  23.539}, {30.578, 23.078000000000003`}, {30.578, 18.75}, {
                  30.581999999999997`, 18.288999999999998`}, {30.207, 
                  17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                  17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                  14.242}, {31.328, 15.315999999999999`}, {33.684, 
                  15.539000000000001`}, {33.789, 15.602}, {33.789, 17.641}, {
                  33.789, 24.188}, {33.789, 26.227}, {33.684, 26.281}, {
                  31.328, 26.512000000000004`}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234000000000002`}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.9568627450980391, 0.8019607843137255, 0.75]], 
            Evaluator -> "System"], StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCWIDoa8CJZ47CsMQUA2qYY8cOe/Zsl82ZQBGQFF
gOLEGPI8UOymHTtE1xUkE+BsoCxQDR5DgLJotuNCyOagGQJ3A0EEVInVEKB/
iTQBguDhg2wIZkjiR0D1EI2Q1AiJTbSQxI8gKiHxzgAGlBtCFZdQMUyoFTtU
SSfUSrFUyTvUysVULE9IQlQ0BD8gprQHAOYEDp4=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCWIDoY8DpK86ikKQUA2qYacdhZaZ8CxXJsNGQFF
gOLEGHLfX3yHOTeadmQElAWqwWMIUBaPdmSEbA6aIRA3rMCrfQXMPVgNAfqX
SGdAEDx8kA3BDEn8CKgeohGSGiGxSZIJEASJdwYwoNwQqriEimFCrdihSjqh
VoqlSt6hVi6mYnlCEqKiIfgBMaU9AAiH5q8=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCWIDoa8zTb72JMMQUA2qYZ8Wdr69/1LNF8DRYDi
xBjyvsz115UjEPFvL589PbgNgoBsiCBQFqgGjyFAWYjIpwe3D2YFLNdmQ0ZA
EaA4RAGyOWiGQNzw/ubllQY8aCZAEFAcKAtxD1ZDgP6FuAGXCXBzIO6Bhw+y
IZCQxPQFJgKqgYQzRCMkNUJiExKSBE2AIEg4Q+KdAQwoN4QqLqFimFArdqiS
TqiVYqmSd6iVi6lYnpCEqGgIfkBMaQ8AIISqgg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.921569, 0.341176, 0.105882], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.921569, 0.341176, 0.105882], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWHlMVEcYf28XlGM5VlcRapRDDFK0sBaLBWVXUDxTKpe4JgvoQlALAsvV
hHIoV4KK6wGiQlUqoqDcKKysDSZtPZJWTTzaxGrV2mqrNtqKB3Qnz8+Zd6Cv
tn90vkgyv+/4zc58M9/3dEtIXZoooSgqw8r8Z2l8tjo9PT43wtE8iUrJSE5K
0a1akKLXJenSAxKkZlD58h9y+X+M8Z7a/I3G7V/lHQgKp2kGmzw9rcrQb+j/
ZItPIGBvNywsVVGVJ01DWAqbpBYUFZ1hGsTYvssRqTLHt4nvoIgvbP6ZjM+I
Nt9PzUePPdbvcvX+ZwzTQ9vv8yMh6R04fFNY0/ciOkM8wzjXY4+F47xJgiPF
cqRuY3kOlnUGLFq4khsv53NPv8zd7NXs/lYsR+158Gm9l1Tu7IYwmq7oJaMd
uWMnR7jMMXLd/isYt7UXx4F9Rjtj1NmNXPPsCKyh6S9+AHzUOHEcpR3gMWM+
iQdHrq1kZFkmidvYQS633399ZBf31G21F/ZdLmmvPo0zVcyalCFg33Qr78Ce
7+qv5jdOm8W3e39u9yN+npR3ieHQ5ArlWGwW28pBIXwfilvFcESnC2eyMoS0
ii8UstncZ2XDjiaROihGjbMcyWVJLBP0N2ELC8vm229icHFPKKo+Y3zK3Jj6
q2lV3gFvZpk4BfSqKHwfFC4fLNDml3cVt2IGO7m+5sRzfoSNxglemGVV8dZT
yRXqaKeJ5V1gkWIALX5bk8r5u+3x3qEbwvuN3kJ1DN9j5mLQdz60skXIeM9X
PoPMnWYzdD4cjoGRMC3XRyI5+CNolyQhJK4A5mWdXGs7Ofs3HP+z9nz16fbf
Scz41Muf67c8B7Q7z6L5RiPMAxZxbfU1OFbDtVDNSGtmnb4qQz/W1F1ElYsc
8rG9A6BF8x1fw2zhSnbddHHHJ115kl3rJNI1mzBL6HI2x9SglrugQzHzG7Ft
RQ95IglF+DfwqylNb2gRugnWMnNteFWLj/+FsNlLyd3tfoTrTPWZV+vUcBnQ
cHbre8HoTzy3ljGYxzT2Cep3MespaibRtZWwGy9vnPmkmXPgjy1fgte7Mxlk
fhwZa/8V+9EQTZuPzwg4HBSA1J4XZqCotB1gExTO58hrYOoYM5RzcCcAHHIn
QKpPD8eBzx12GHP0PAlfjXPI3C8J7JXlSNjt9vuSYVrKkjbwUs4R2quCwxLU
mFJTZpCoaQjXuPqrgPmqhBhs7XH1lTsxmP889su24lOEZuzEyJE7ZJ3Gu23o
Z9bDHvitrb2A0Um+NedwxKO/IGzrKZhn15FnRFHeAdh2zSZuXxscCXtpGorR
kxqpRWx2zxPQsTk8/bgrxe+MaWj9UXw/be11pZih5VduxzPCqu03kiPFALPM
3VyOCV5kv9P3ovJk6rbkipI2du3n39AwLegO3UBzn0CYH3vMfzHUMeyM4Mu6
7Vwfiqr6BrRxBWhO0/suAxK5jm8fpoX7LszAz4bJStAanylcGCwiFbD9V2ja
xk4ZosmNTsc+Xv51F4Xit9yduwJbqaJ0JYEfoT4xaw9YFDaBVuaId93cVb58
MxPLsL/UIlSz2URmft3FGL2tA7YI1UAONF7HOeWnxhb6XULrJFnQsLHz+XDW
x6ooZQjcOD4DKXsvkfnu6i1kYxpaVcw/H/5QRQl7L0lk27HfLJCtp8Rw6EqF
fDe08F+54MjaC0jX8aDpFtglV4jhCAoH+44HzPvdfFuTy63xMGwd5GMpKq8B
fNTRpNZj2vw4RvznkfhoZ7A/fBO9AdzTEhrM70HiNBGj1jJcRY3PJvmSHod+
Ao3Yr2j8HVXeNXMx7Cr7K7HmHOzFZGXWHpytjmPEcXx2kIzWcG15juOYqUHk
dz+S2OwRVmFa3DkhaboljgF1R9wc6R3A/RJIz5PWe1wsNlssB0XFZgllI8Qe
TrOhxcJSPAfqIjabhOLkNYSvFsL3XlqsG67qv264eqcYuv4gI9V/bz+Kptcf
IbETz4ualXP+zf/+WMuWJO08i2J1P0qrYjJTIl2WyXx5NV6PK1C88/bR/7vx
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> False], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWG1MU1cY7m1vS4GWttBLy0dLWyhl5aultrT0C2QzM5rMIWgyluDHkMwf
YgBF9gc1cWpijDNuRNFsv2Rmuqmb/NjIYIFkG2qyAYnAljidODfdmItu+AHs
Xi6n59x7D3LH9mPnRJLzvB/Pue95z3nfat3UWLVFKpFImpX0n6qNrRVNTRvb
1mrpRc225tcbttW/tnJbS31DfZN/k4wGS+b/MSb/jxFvt7QX95R86TytXyMh
WEztye1w97v7c97SBAG2tEHIqRpXX/ksnPlnCVIiMTWXz0DMN5rZSGqX4l+u
t+wp+wn1z05Lu7ZCiIYfOjoTnf+MQfd8aFLoiZmRR4FbeEl02tQsnkFpCT/E
+1lsUtViOezHOJYzhZdSVqVt5vvLe0/ldpzk7mbZN2I5vEPAJnjPdlBpnQOJ
4s9Qb2V3SB0Dk9rM7b4xiJNJ4jigjSINiaAV3TO1FjEgSr+PWRjFcRR+AiyS
X0RxqjrnCDtNO1Bcpga5HJp8tud4m/2Yd9g3WvixZxBmqpg96SqBfmDCeXrZ
t6XjzjOaMEbvhfADYZ4UdYvhMLfhcsy8k6sl1+PvQ8EFMRymJnwm6ypRLcse
nI7rc1kC1xshk+sVRmkcn8V2AGvfi1jKy24vxhBvs+71XI4+Zm9M6XhuR5J/
cZaE54CcqoH3IS49eaWlvai74AJkIHWOE9GnQg/FPQl5kMW6zz2QfSh1nTKr
qBto2I8CKXxbbQeF0VYVB27i4828hanrhRYpq4E8dF+WOBcFe8xmZv5OcxhC
9xdiYKexjm9DSP0/AGl6A4NYdoN14SW+NqnjfkPkT++QZzD0G4pFH6u9fDvz
LiD1XGHWxT1gnbKKr+s4AX35rxtqpfHsPrXl7n4o8Y4wlQsditTIIyBl1iVf
gVXaZm7djLfBk3b1cWsdIcs5DFkMr3A5NKHg3RgH7dN5BsmUT9ETse6F34Cp
pkTBedxNkKno2hCrxZG/GIyq4mTKA1hnPJdj+6wVMEiYlzg6PX8mT2UqFlMV
cU/Q0cnuJ/8ciuYcAdGYv3H0SbPnIByuL4BVUoBFjBtQX74xeQrwZmmHZwQ4
5PrYmQ7hGSSS3HeADt0XCTicXWwdY4duOewEAIfCEMu/wYU44LmDCEOOyFTG
VphDdL+EiZU0DkQ7NEks0FIWXgRWuuW4WOV/QDCNqSTJh6Lls7DGlY4DTFuO
YyCTYPVVGFgseQX3Zct6Yy6mxyFSdget0zDa7n52P9wB31rvMERVLs9VxOPP
DOYeAOu8d9Ezor/Qj0TwML+vpapBLOlvb0ElBGlujUzF7iCHQ+Xm7xS+M3RN
/AjeTzLJth8yBH/hdzxSZfBXlMN+NHZfTvI5EvLQfic67eqzH8s+VHiRW/uF
N9RYB2SBm8xaEwTr8EPhi5G6npsRwml/m29Dv4FfA6llNxs+3yhAMrcL9Y11
4L7jGYTZoC6JffmTuHQWy2wEmG+MvvRqXaW5zdSE2Hi9Izj/wbuGV6EWVWN7
U/8S0yc6TsXux1kgJbUw6nRXOf9m2g5Ae4I01Lp60cz3jphaSA3UMNSCHPDf
gDmlrYAajk7cPlEWZsjUmjL9y1SNrhLcOCEDOn3X0HxPdOJ0ymet+4TnIxxU
Dd46fQtXj/tmgekeEMNh24+zLTgvfOWoau8wIwv9HpgAetmHxHDo1wB92nbu
/S67bW7j13gwSI0ila6+XcAmdR0qVRUZN7AzeQWKK9KAfuAW8wbwTws32O9h
pjILojIVrKLRJyoXahH4EUjE/oqGv6OKulNWg6hyfyV6roJYqEscp2C2yilx
HM73UW/+6+ZdckoTQn/3M9PcKlUa62DnNBerCXEMTHfEz5HII9gvxbCp4D0+
Zm4Vy0H3kjtx2Qh8LyShs1UunoPpIly9OD/OroytONx3La1+oar/rJHotB8N
/4F6Kv1Onkz3hx+iWPRp/jm6Y/gX//sjU6U3eK4wvsIPcjvYzCRkph3sLy//
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> False], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`file = SystemDialogInput["FileOpen"], RSNB`cell = 
             ParentCell[
               EvaluationCell[]]}, 
            If[
            RSNB`file =!= $Canceled, 
             SelectionMove[RSNB`cell, All, CellContents]; NotebookWrite[
               Notebooks[RSNB`cell], 
               RowBox[{"File", "[", 
                 ToBoxes[RSNB`file], "]"}]]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`file = SystemDialogInput["Directory"], RSNB`cell = 
             ParentCell[
               EvaluationCell[]]}, 
            If[
            RSNB`file =!= $Canceled, 
             SelectionMove[RSNB`cell, All, CellContents]; NotebookWrite[
               Notebooks[RSNB`cell], 
               RowBox[{"File", "[", 
                 ToBoxes[RSNB`file], "]"}]]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Microsoft Windows (64-bit) (January 26, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"0a04e80e-e546-4b73-b042-d4e621d90b9f"
]

